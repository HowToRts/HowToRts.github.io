// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"55dev"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){a=String(a);var b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;
THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;
THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;
THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;
THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},set:function(a){switch(typeof a){case "number":this.setHex(a);break;case "string":this.setStyle(a)}},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=
c):5===d&&(this.r=c,this.g=a,this.b=f));return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a))return a=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a),
this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a),this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=
/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},getHSV:function(a){var b=this.r,c=this.g,d=this.b,e=Math.max(Math.max(b,c),d),f=Math.min(Math.min(b,c),d);if(f===e)f=b=0;else{var g=e-f,f=g/e,b=(b===e?(c-d)/g:c===e?2+(d-b)/g:4+(b-c)/g)/6;0>b&&(b+=1);1<b&&(b-=1)}void 0===a&&(a={h:0,s:0,v:0});a.h=b;a.s=f;a.v=e;return a},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=
(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},addScalar:function(a){this.x+=
a;this.y+=a;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a):this.set(0,0);return this},minSelf:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},maxSelf:function(a){this.x<
a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clampSelf:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},
distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},
multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},minSelf:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},maxSelf:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&
(this.z=a.z);return this},clampSelf:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-
c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],
j=d[5],k=d[9],l=d[2],m=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(m,j),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?(this.y=Math.atan2(g,d),this.z=Math.atan2(h,j)):(this.y=Math.atan2(-l,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(m)),0.99999>Math.abs(m)?(this.y=Math.atan2(-l,d),this.z=Math.atan2(-f,j)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(l)),0.99999>
Math.abs(l)?(this.x=Math.atan2(m,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,j))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,j),this.y=Math.atan2(-l,e)):(this.x=0,this.y=Math.atan2(g,d))):"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(m,j),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*
a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*
a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),
c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=
a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},minSelf:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},maxSelf:function(a){this.x<a.x&&(this.x=a.x);this.y<
a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clampSelf:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},
length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],j=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(j-
b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;j=(j+b)/4;e>h&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=j/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-j)/
a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this}};THREE.Box2=function(a,b){this.min=void 0!==a?a.clone():new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b.clone():new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(a,b){var c=THREE.Box2.__v1.copy(b).multiplyScalar(0.5);this.min.copy(a).subSelf(c);
this.max.copy(a).addSelf(c);return this},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).add(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).sub(this.max,this.min)},expandByPoint:function(a){this.min.minSelf(a);this.max.maxSelf(a);
return this},expandByVector:function(a){this.min.subSelf(a);this.max.addSelf(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return this.min.x<=a.x&&a.x<=this.max.x&&this.min.y<=a.y&&a.y<=this.max.y?!0:!1},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-
this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clampSelf(this.min,this.max)},distanceToPoint:function(a){return THREE.Box2.__v1.copy(a).clampSelf(this.min,this.max).subSelf(a).length()},intersect:function(a){this.min.maxSelf(a.min);this.max.minSelf(a.max);return this},union:function(a){this.min.minSelf(a.min);this.max.maxSelf(a.max);
return this},translate:function(a){this.min.addSelf(a);this.max.addSelf(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box2.__v1=new THREE.Vector2;THREE.Box3=function(a,b){this.min=void 0!==a?a.clone():new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b.clone():new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y),b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(a,b){var c=THREE.Box3.__v1.copy(b).multiplyScalar(0.5);
this.min.copy(a).subSelf(c);this.max.copy(a).addSelf(c);return this},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).add(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector3).sub(this.max,
this.min)},expandByPoint:function(a){this.min.minSelf(a);this.max.maxSelf(a);return this},expandByVector:function(a){this.min.subSelf(a);this.max.addSelf(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return this.min.x<=a.x&&a.x<=this.max.x&&this.min.y<=a.y&&a.y<=this.max.y&&this.min.z<=a.z&&a.z<=this.max.z?!0:!1},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&
this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){b||new THREE.Vector3;return(new THREE.Vector3).copy(a).clampSelf(this.min,this.max)},distanceToPoint:function(a){return THREE.Box3.__v1.copy(a).clampSelf(this.min,
this.max).subSelf(a).length()},getBoundingSphere:function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(THREE.Box3.__v0).length();return a},intersect:function(a){this.min.maxSelf(a.min);this.max.minSelf(a.max);return this},union:function(a){this.min.minSelf(a.min);this.max.maxSelf(a.max);return this},transform:function(a){a=[a.multiplyVector3(THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z)),a.multiplyVector3(THREE.Box3.__v1.set(this.min.x,this.min.y,this.max.z)),a.multiplyVector3(THREE.Box3.__v2.set(this.min.x,
this.max.y,this.min.z)),a.multiplyVector3(THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z)),a.multiplyVector3(THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z)),a.multiplyVector3(THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z)),a.multiplyVector3(THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z)),a.multiplyVector3(THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z))];this.makeEmpty();this.setFromPoints(a);return this},translate:function(a){this.min.addSelf(a);this.max.addSelf(a);
return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Box3.__v0=new THREE.Vector3;THREE.Box3.__v1=new THREE.Vector3;THREE.Box3.__v2=new THREE.Vector3;THREE.Box3.__v3=new THREE.Vector3;THREE.Box3.__v4=new THREE.Vector3;THREE.Box3.__v5=new THREE.Vector3;THREE.Box3.__v6=new THREE.Vector3;THREE.Box3.__v7=new THREE.Vector3;THREE.Matrix3=function(a,b,c,d,e,f,g,h,j){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==j?j:1)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,j){var k=this.elements;k[0]=a;k[3]=b;k[6]=c;k[1]=d;k[4]=e;k[7]=f;k[2]=g;k[5]=h;k[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=b[0]*c+b[3]*d+b[6]*e;a.y=b[1]*c+b[4]*d+b[7]*e;a.z=b[2]*c+b[5]*d+b[8]*e;return a},multiplyVector3Array:function(a){for(var b=
THREE.Matrix3.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],j=a[7],a=a[8];return b*f*a-b*g*j-c*e*a+c*g*h+d*e*j-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];
d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;
a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};THREE.Matrix3.__v1=new THREE.Vector3;THREE.Matrix4=function(a,b,c,d,e,f,g,h,j,k,l,m,p,s,r,q){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,j||0,k||0,void 0!==l?l:1,m||0,p||0,s||0,r||0,void 0!==q?q:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,j,k,l,m,p,s,r,q){var v=this.elements;v[0]=a;v[4]=b;v[8]=c;v[12]=d;v[1]=e;v[5]=f;v[9]=g;v[13]=h;v[2]=j;v[6]=k;v[10]=l;v[14]=m;v[3]=p;v[7]=s;v[11]=r;v[15]=q;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},setRotationFromEuler:function(a,b){var c=
this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),j=Math.cos(f),f=Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*j,l=g*f,m=d*j,p=d*f;c[0]=h*j;c[4]=-h*f;c[8]=e;c[1]=l+m*e;c[5]=k-p*e;c[9]=-d*h;c[2]=p-k*e;c[6]=m+l*e;c[10]=g*h}else"YXZ"===b?(k=h*j,l=h*f,m=e*j,p=e*f,c[0]=k+p*d,c[4]=m*d-l,c[8]=g*e,c[1]=g*f,c[5]=g*j,c[9]=-d,c[2]=l*d-m,c[6]=p+k*d,c[10]=g*h):"ZXY"===b?(k=h*j,l=h*f,m=e*j,p=e*f,c[0]=k-p*d,c[4]=-g*f,c[8]=m+l*d,c[1]=l+m*d,c[5]=g*j,c[9]=p-k*d,c[2]=-g*e,c[6]=
d,c[10]=g*h):"ZYX"===b?(k=g*j,l=g*f,m=d*j,p=d*f,c[0]=h*j,c[4]=m*e-l,c[8]=k*e+p,c[1]=h*f,c[5]=p*e+k,c[9]=l*e-m,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,l=g*e,m=d*h,p=d*e,c[0]=h*j,c[4]=p-k*f,c[8]=m*f+l,c[1]=f,c[5]=g*j,c[9]=-d*j,c[2]=-e*j,c[6]=l*f+m,c[10]=k-p*f):"XZY"===b&&(k=g*h,l=g*e,m=d*h,p=d*e,c[0]=h*j,c[4]=-f,c[8]=e*j,c[1]=k*f+p,c[5]=g*j,c[9]=l*f-m,c[2]=m*f-l,c[6]=d*j,c[10]=p*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,j=e+
e;a=c*g;var k=c*h,c=c*j,l=d*h,d=d*j,e=e*j,g=f*g,h=f*h,f=f*j;b[0]=1-(l+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+l);return this},lookAt:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},
multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],j=c[12],k=c[1],l=c[5],m=c[9],p=c[13],s=c[2],r=c[6],q=c[10],v=c[14],u=c[3],w=c[7],x=c[11],c=c[15],t=d[0],D=d[4],z=d[8],y=d[12],A=d[1],G=d[5],H=d[9],J=d[13],T=d[2],E=d[6],O=d[10],F=d[14],L=d[3],P=d[7],U=d[11],d=d[15];e[0]=f*t+g*A+h*T+j*L;e[4]=f*D+g*G+h*E+j*P;e[8]=f*z+g*H+h*O+j*U;e[12]=f*y+g*J+h*F+j*d;e[1]=k*t+l*A+m*T+p*L;e[5]=k*D+l*G+m*E+p*P;e[9]=k*z+l*H+m*O+p*U;e[13]=k*y+l*J+m*F+p*d;e[2]=s*t+r*A+q*T+v*L;e[6]=
s*D+r*G+q*E+v*P;e[10]=s*z+r*H+q*O+v*U;e[14]=s*y+r*J+q*F+v*d;e[3]=u*t+w*A+x*T+c*L;e[7]=u*D+w*G+x*E+c*P;e[11]=u*z+w*H+x*O+c*U;e[15]=u*y+w*J+x*F+c*d;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=
this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*
e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*
a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],j=a[13],k=a[2],l=a[6],m=a[10],p=a[14];return a[3]*(+e*h*l-d*j*l-e*g*m+c*j*m+d*g*p-c*h*p)+a[7]*(+b*h*p-b*j*m+e*f*m-d*f*p+d*j*k-e*h*k)+a[11]*(+b*j*l-b*g*p-e*f*l+c*f*p+e*g*k-c*j*k)+a[15]*(-d*g*k-b*h*l+b*g*m+d*f*l-c*f*m+c*h*k)},transpose:function(){var a=
this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+
3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],
a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],j=d[1],k=d[5],l=d[9],m=d[13],p=d[2],s=d[6],r=d[10],q=d[14],v=d[3],u=d[7],w=d[11],x=d[15];c[0]=l*q*u-m*r*u+m*s*w-k*q*w-l*s*x+k*r*x;c[4]=h*r*u-g*q*u-h*s*w+f*q*w+g*s*x-f*r*x;c[8]=g*m*u-h*l*u+h*k*w-f*m*w-g*k*x+f*l*x;c[12]=h*l*s-g*m*s-h*k*r+f*m*r+g*k*q-f*l*q;c[1]=m*r*v-l*q*v-m*p*w+j*q*w+l*p*x-j*r*x;c[5]=g*q*v-h*r*v+
h*p*w-e*q*w-g*p*x+e*r*x;c[9]=h*l*v-g*m*v-h*j*w+e*m*w+g*j*x-e*l*x;c[13]=g*m*p-h*l*p+h*j*r-e*m*r-g*j*q+e*l*q;c[2]=k*q*v-m*s*v+m*p*u-j*q*u-k*p*x+j*s*x;c[6]=h*s*v-f*q*v-h*p*u+e*q*u+f*p*x-e*s*x;c[10]=f*m*v-h*k*v+h*j*u-e*m*u-f*j*x+e*k*x;c[14]=h*k*p-f*m*p-h*j*s+e*m*s+f*j*q-e*k*q;c[3]=l*s*v-k*r*v-l*p*u+j*r*u+k*p*w-j*s*w;c[7]=f*r*v-g*s*v+g*p*u-e*r*u-f*p*w+e*s*w;c[11]=g*k*v-f*l*v-g*j*u+e*l*u+f*j*w-e*k*w;c[15]=f*l*p-g*k*p+g*j*s-e*l*s-f*j*r+e*k*r;c=d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+d[3]*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);
g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=
this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*
d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],j=b[10],k=b[11],l=Math.cos(a);a=Math.sin(a);b[4]=l*c+a*g;b[5]=l*d+a*h;b[6]=l*e+a*j;b[7]=l*f+a*k;b[8]=l*g-a*c;b[9]=l*h-a*d;b[10]=l*j-a*e;b[11]=l*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],j=b[10],k=b[11],l=Math.cos(a);a=Math.sin(a);b[0]=l*c-a*g;b[1]=l*d-a*h;b[2]=l*e-
a*j;b[3]=l*f-a*k;b[8]=l*g+a*c;b[9]=l*h+a*d;b[10]=l*j+a*e;b[11]=l*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],j=b[6],k=b[7],l=Math.cos(a);a=Math.sin(a);b[0]=l*c+a*g;b[1]=l*d+a*h;b[2]=l*e+a*j;b[3]=l*f+a*k;b[4]=l*g-a*c;b[5]=l*h-a*d;b[6]=l*j-a*e;b[7]=l*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===
a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,j=f*f,k=Math.cos(b),l=Math.sin(b),m=1-k,p=d*e*m,s=d*f*m,m=e*f*m,d=d*l,r=e*l,l=f*l,f=g+(1-g)*k,g=p+l,e=s-r,p=p-l,h=h+(1-h)*k,l=m+d,s=s+r,m=m-d,j=j+(1-j)*k,k=c[0],d=c[1],r=c[2],q=c[3],v=c[4],u=c[5],w=c[6],x=c[7],t=c[8],D=c[9],z=c[10],y=c[11];c[0]=f*k+g*v+e*t;c[1]=f*d+g*u+e*D;c[2]=f*r+g*w+e*z;c[3]=f*q+g*x+e*y;c[4]=p*k+h*v+l*t;c[5]=p*d+h*u+l*D;c[6]=p*r+h*w+l*z;c[7]=p*q+h*x+l*y;c[8]=s*k+m*v+j*t;c[9]=
s*d+m*u+j*D;c[10]=s*r+m*w+j*z;c[11]=s*q+m*x+j*y;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a){this.set(1,0,0,a.x,0,1,0,a.y,0,0,1,a.z,0,0,0,1);return this},makeRotationX:function(a){var b=
Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,j=e*f,k=e*g;this.set(j*f+c,j*g-d*h,j*h+d*g,0,j*g+d*h,k*g+c,k*h-d*f,0,j*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);
return this},makeScale:function(a){this.set(a.x,0,0,0,0,a.y,0,0,0,0,a.z,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(0.5*a));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,
f){var g=this.elements,h=b-a,j=c-d,k=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/j;g[9]=0;g[13]=-((c+d)/j);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;
THREE.Matrix4.__m2=new THREE.Matrix4;THREE.Ray=function(a,b){this.origin=void 0!==a?a.clone():new THREE.Vector3;this.direction=void 0!==b?b.clone():new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).addSelf(this.origin)},recastSelf:function(a){this.origin.copy(this.at(a,THREE.Ray.__v1));return this},closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.sub(a,this.origin);var d=c.dot(this.direction);
return c.copy(this.direction).multiplyScalar(d).addSelf(this.origin)},distanceToPoint:function(a){var b=THREE.Ray.__v1.sub(a,this.origin).dot(this.direction);THREE.Ray.__v1.copy(this.direction).multiplyScalar(b).addSelf(this.origin);return THREE.Ray.__v1.distanceTo(a)},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){return 0!=a.normal.dot(this.direction)||0==a.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);
if(0==b){if(0==a.distanceToPoint(this.origin))return 0}else return-(this.origin.dot(a.normal)+a.constant)/b},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return void 0===c?void 0:this.at(c,b)},transform:function(a){this.direction=a.multiplyVector3(this.direction.addSelf(this.origin));this.origin=a.multiplyVector3(this.origin);this.direction.subSelf(this.origin);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};
THREE.Ray.__v1=new THREE.Vector3;THREE.Ray.__v2=new THREE.Vector3;THREE.Frustum=function(){this.planes=[new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],j=c[6],k=c[7],l=c[8],m=c[9],p=c[10],s=c[11],r=c[12],q=c[13],v=c[14],c=c[15];b[0].setComponents(f-a,k-g,s-l,c-r);b[1].setComponents(f+a,k+g,s+l,c+r);b[2].setComponents(f+d,k+h,s+m,c+q);b[3].setComponents(f-d,k-h,s-m,c-q);b[4].setComponents(f-e,k-j,s-p,c-v);b[5].setComponents(f+e,k+j,s+p,c+v);for(a=0;6>a;a++)b[a].normalize()};
THREE.Frustum.prototype.contains=function(a){var b=this.planes,c=a.matrixWorld,d=c.getPosition();a=-a.geometry.boundingSphere.radius*c.getMaxScaleOnAxis();for(var e=c=0;6>e;e++)if(c=b[e].distanceToPoint(d),c<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;THREE.Plane=function(a,b){this.normal=void 0!==a?a.clone():new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a).normalize();this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(a,b,c){b=THREE.Plane.__v1.sub(c,b).crossSelf(THREE.Plane.__v2.sub(a,b)).normalize();this.setFromNormalAndCoplanarPoint(b,a);return this},copy:function(a){this.normal.copy(a.normal);
this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).subSelf(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a,
b){var c=this.distanceToPoint(a),d=this.distanceToPoint(b);return 0>c&&0<d||0>d&&0<c},intersectLine:function(a,b,c){c=c||new THREE.Vector3;b=THREE.Plane.__v1.sub(b,a);var d=this.normal.dot(b);if(0==d){if(0==this.distanceToPoint(a))return c.copy(a)}else return d=-(a.dot(this.normal)+this.constant)/d,0>d||1<d?void 0:c.copy(b).multiplyScalar(d).addSelf(a)},coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},transform:function(a,b){var c=THREE.Plane.__v1,
d=THREE.Plane.__v2;b=b||(new THREE.Matrix3).getInverse(a).transpose();c=b.multiplyVector3(c.copy(this.normal));d=this.coplanarPoint(d);d=a.multiplyVector3(d);this.setFromNormalAndCoplanarPoint(c,d);return this},translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Plane.__vZero=new THREE.Vector3(0,0,0);THREE.Plane.__v1=new THREE.Vector3;
THREE.Plane.__v2=new THREE.Vector3;THREE.Sphere=function(a,b){this.center=void 0===a?new THREE.Vector3:a.clone();this.radius=void 0===b?0:b};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromCenterAndPoints:function(a,b){for(var c=0,d=0,e=b.length;d<e;d++)var f=a.distanceToSquared(b[d]),c=Math.max(c,f);this.center=a;this.radius=Math.sqrt(c);return this},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-
this.radius},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.subSelf(this.center).normalize(),d.multiplyScalar(this.radius).addSelf(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},transform:function(a){this.center=a.multiplyVector3(this.center);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.addSelf(a);
return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(a){return a*THREE.Math.__d2r},radToDeg:function(a){return a*
THREE.Math.__r2d}};THREE.Math.__d2r=Math.PI/180;THREE.Math.__r2d=180/Math.PI;THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*
h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],j=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(j-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(j-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+j)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+j)/c,this.z=0.25*c);return this},
inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){this.copy(a);return this.multiplySelf(b)},
multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z;a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,j=this.w,k=j*c+g*e-h*d,l=j*d+h*c-f*e,m=j*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=k*j+c*-f+l*-h-m*-g;b.y=l*j+c*-g+m*-f-k*-h;b.z=m*j+c*-h+k*-g-l*-f;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*
a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),j=Math.sqrt(1-g*g);if(0.001>Math.abs(j))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/j;h=Math.sin(b*h)/j;this.w=f*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+this.y*h;this.z=e*g+this.z*h;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&
a.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerpSelf(b,d)};THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,j,k,l,m,p;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];l=this.points[c[1]];m=this.points[c[2]];p=this.points[c[3]];h=g*g;j=g*h;d.x=b(k.x,l.x,m.x,p.x,g,h,j);d.y=b(k.y,l.y,m.y,p.y,g,h,j);d.z=b(k.z,l.z,m.z,p.z,g,h,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],j=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=j,e=b);h[h.length]=j;return{chunks:h,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],j=new THREE.Vector3,l=this.getLength();h.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=l.chunks[b]-l.chunks[b-1];g=Math.ceil(a*c/l.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(j.copy(d).clone());h.push(j.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=new THREE.Vector3;this.b=new THREE.Vector3;this.c=new THREE.Vector3;void 0!==a&&(void 0!==b&&void 0!==c)&&(this.a.copy(a),this.b.copy(b),this.c.copy(c))};THREE.Triangle.normal=function(a,b,c,d){d=d||new THREE.Vector3;d.sub(c,b);THREE.Triangle.__v0.sub(a,b);d.crossSelf(THREE.Triangle.__v0);a=d.lengthSq();return 0<a?d.multiplyScalar(1/Math.sqrt(a)):d.set(0,0,0)};
THREE.Triangle.barycoordFromPoint=function(a,b,c,d,e){THREE.Triangle.__v0.sub(d,b);THREE.Triangle.__v1.sub(c,b);THREE.Triangle.__v2.sub(a,b);a=THREE.Triangle.__v0.dot(THREE.Triangle.__v0);b=THREE.Triangle.__v0.dot(THREE.Triangle.__v1);c=THREE.Triangle.__v0.dot(THREE.Triangle.__v2);var f=THREE.Triangle.__v1.dot(THREE.Triangle.__v1);d=THREE.Triangle.__v1.dot(THREE.Triangle.__v2);var g=a*f-b*b;e=e||new THREE.Vector3;if(0==g)return e.set(-2,-1,-1);g=1/g;f=(f*c-b*d)*g;a=(a*d-b*c)*g;return e.set(1-f-a,
a,f)};THREE.Triangle.containsPoint=function(a,b,c,d){a=THREE.Triangle.barycoordFromPoint(a,b,c,d,THREE.Triangle.__v3);return 0<=a.x&&0<=a.y&&1>=a.x+a.y};
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){THREE.Triangle.__v0.sub(this.c,this.b);THREE.Triangle.__v1.sub(this.a,this.b);return 0.5*THREE.Triangle.__v0.crossSelf(THREE.Triangle.__v1).length()},midpoint:function(a){return(a||
new THREE.Vector3).add(this.a,this.b).addSelf(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Triangle.__v0=new THREE.Vector3;THREE.Triangle.__v1=new THREE.Vector3;THREE.Triangle.__v2=new THREE.Vector3;THREE.Triangle.__v3=new THREE.Vector3;THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};
THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.EventDispatcher=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)};this.dispatchEvent=function(b){var c=a[b.type];if(void 0!==c){b.target=this;for(var d=0,e=c.length;d<e;d++)c[d].call(this,b)}}};(function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c);0<this.ray.direction.length()&&this.ray.direction.normalize();this.near=d||0;this.far=e||Infinity};var b=new a.Sphere,c=new a.Ray,d=new a.Plane,e=new a.Vector3,f=new a.Matrix4,g=function(a,b){return a.distance-b.distance};new a.Vector3;new a.Vector3;new a.Vector3;var h=function(g,h,j){if(g instanceof a.Particle){h=h.ray.distanceToPoint(g.matrixWorld.getPosition());if(h>g.scale.x)return j;j.push({distance:h,point:g.position,face:null,
object:g})}else if(g instanceof a.Mesh){b.set(g.matrixWorld.getPosition(),g.geometry.boundingSphere.radius*g.matrixWorld.getMaxScaleOnAxis());if(!h.ray.isIntersectionSphere(b))return j;var p=g.geometry,s=p.vertices,r=g.material instanceof a.MeshFaceMaterial,q=!0===r?g.material.materials:null,v=g.material.side,u,w,x,t=h.precision;g.matrixRotationWorld.extractRotation(g.matrixWorld);f.getInverse(g.matrixWorld);c.copy(h.ray).transform(f);for(var D=0,z=p.faces.length;D<z;D++){var y=p.faces[D],v=!0===
r?q[y.materialIndex]:g.material;if(void 0!==v){d.setFromNormalAndCoplanarPoint(y.normal,s[y.a]);var A=c.distanceToPlane(d);if(!(Math.abs(A)<t)&&!(0>A)){v=v.side;if(v!==a.DoubleSide&&(u=c.direction.dot(d.normal),!(v===a.FrontSide?0>u:0<u)))continue;if(!(A<h.near||A>h.far)){e=c.at(A,e);if(y instanceof a.Face3){if(v=s[y.a],u=s[y.b],w=s[y.c],!a.Triangle.containsPoint(e,v,u,w))continue}else if(y instanceof a.Face4){if(v=s[y.a],u=s[y.b],w=s[y.c],x=s[y.d],!a.Triangle.containsPoint(e,v,u,x)&&!a.Triangle.containsPoint(e,
u,w,x))continue}else throw Error("face type not supported");j.push({distance:A,point:h.ray.at(A),face:y,faceIndex:D,object:g})}}}}}},j=function(a,b,c){a=a.getDescendants();for(var d=0,e=a.length;d<e;d++)h(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b);0<this.ray.direction.length()&&this.ray.direction.normalize()};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&j(a,this,c);h(a,this,c);c.sort(g);return c};a.Raycaster.prototype.intersectObjects=
function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)h(a[d],this,c),!0===b&&j(a[d],this,c);c.sort(g);return c}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(a){if(a===
this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},
traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);
!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);
a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++)a.add(this.children[b].clone());return a}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(k===m){var a=new THREE.RenderableVertex;l.push(a);m++;k++;return a}return l[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,j,k,l=[],m=0,p,s,r=[],q=0,v,u=[],w=0,x,t,D=[],z=0,y,A,G=[],H=0,J={objects:[],sprites:[],lights:[],elements:[]},T=new THREE.Vector3,E=new THREE.Vector4,O=new THREE.Matrix4,F=new THREE.Matrix4,L,P=new THREE.Matrix4,U=new THREE.Matrix3,S=new THREE.Matrix3,da=new THREE.Vector3,R=new THREE.Frustum,I=new THREE.Vector4,N=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);F.multiply(b.projectionMatrix,
b.matrixWorldInverse);F.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);F.multiply(b.matrixWorld,b.projectionMatrixInverse);F.multiplyVector3(a);return a};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Raycaster(a,c)};this.projectScene=function(g,h,m,M){var aa=h.near,na=h.far,ea=!1,pa,W,$,oa,Ea,ra,fa,ia,Fa,Wa,
Ca,ob,gb;A=t=v=s=0;J.elements.length=0;g.updateMatrixWorld();void 0===h.parent&&h.updateMatrixWorld();O.getInverse(h.matrixWorld);F.multiply(h.projectionMatrix,O);S.getInverse(O);S.transpose();R.setFromMatrix(F);f=0;J.objects.length=0;J.sprites.length=0;J.lights.length=0;var Xa=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)J.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===
R.contains(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(T.copy(f.matrixWorld.getPosition()),F.multiplyVector3(T),e.z=T.z),J.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(T.copy(f.matrixWorld.getPosition()),F.multiplyVector3(T),e.z=T.z),J.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(T.copy(f.matrixWorld.getPosition()),F.multiplyVector3(T),e.z=T.z),J.objects.push(e));
Xa(f)}}};Xa(g);!0===m&&J.objects.sort(c);g=0;for(m=J.objects.length;g<m;g++)if(ia=J.objects[g].object,L=ia.matrixWorld,k=0,ia instanceof THREE.Mesh){Fa=ia.geometry;$=Fa.vertices;Wa=Fa.faces;Fa=Fa.faceVertexUvs;U.getInverse(L);U.transpose();ob=ia.material instanceof THREE.MeshFaceMaterial;gb=!0===ob?ia.material:null;pa=0;for(W=$.length;pa<W;pa++)j=b(),j.positionWorld.copy($[pa]),L.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),F.multiplyVector4(j.positionScreen),j.positionScreen.x/=
j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,j.visible=j.positionScreen.z>aa&&j.positionScreen.z<na;$=0;for(pa=Wa.length;$<pa;$++){W=Wa[$];var Ja=!0===ob?gb.materials[W.materialIndex]:ia.material;if(void 0!==Ja){ra=Ja.side;if(W instanceof THREE.Face3)if(oa=l[W.a],Ea=l[W.b],fa=l[W.c],!0===oa.visible&&!0===Ea.visible&&!0===fa.visible)if(ea=0>(fa.positionScreen.x-oa.positionScreen.x)*(Ea.positionScreen.y-oa.positionScreen.y)-(fa.positionScreen.y-oa.positionScreen.y)*(Ea.positionScreen.x-
oa.positionScreen.x),ra===THREE.DoubleSide||ea===(ra===THREE.FrontSide))s===q?(Ca=new THREE.RenderableFace3,r.push(Ca),q++,s++,p=Ca):p=r[s++],p.v1.copy(oa),p.v2.copy(Ea),p.v3.copy(fa);else continue;else continue;else if(W instanceof THREE.Face4)if(oa=l[W.a],Ea=l[W.b],fa=l[W.c],Ca=l[W.d],!0===oa.visible&&!0===Ea.visible&&!0===fa.visible&&!0===Ca.visible)if(ea=0>(Ca.positionScreen.x-oa.positionScreen.x)*(Ea.positionScreen.y-oa.positionScreen.y)-(Ca.positionScreen.y-oa.positionScreen.y)*(Ea.positionScreen.x-
oa.positionScreen.x)||0>(Ea.positionScreen.x-fa.positionScreen.x)*(Ca.positionScreen.y-fa.positionScreen.y)-(Ea.positionScreen.y-fa.positionScreen.y)*(Ca.positionScreen.x-fa.positionScreen.x),ra===THREE.DoubleSide||ea===(ra===THREE.FrontSide)){if(v===w){var Ga=new THREE.RenderableFace4;u.push(Ga);w++;v++;p=Ga}else p=u[v++];p.v1.copy(oa);p.v2.copy(Ea);p.v3.copy(fa);p.v4.copy(Ca)}else continue;else continue;p.normalModel.copy(W.normal);!1===ea&&(ra===THREE.BackSide||ra===THREE.DoubleSide)&&p.normalModel.negate();
U.multiplyVector3(p.normalModel);p.normalModel.normalize();p.normalModelView.copy(p.normalModel);S.multiplyVector3(p.normalModelView);p.centroidModel.copy(W.centroid);L.multiplyVector3(p.centroidModel);fa=W.vertexNormals;oa=0;for(Ea=fa.length;oa<Ea;oa++)Ca=p.vertexNormalsModel[oa],Ca.copy(fa[oa]),!1===ea&&(ra===THREE.BackSide||ra===THREE.DoubleSide)&&Ca.negate(),U.multiplyVector3(Ca),Ca.normalize(),Ga=p.vertexNormalsModelView[oa],Ga.copy(Ca),S.multiplyVector3(Ga);p.vertexNormalsLength=fa.length;ra=
0;for(oa=Fa.length;ra<oa;ra++)if(Ca=Fa[ra][$],void 0!==Ca){Ea=0;for(fa=Ca.length;Ea<fa;Ea++)p.uvs[ra][Ea]=Ca[Ea]}p.color=W.color;p.material=Ja;da.copy(p.centroidModel);F.multiplyVector3(da);p.z=da.z;J.elements.push(p)}}}else if(ia instanceof THREE.Line){P.multiply(F,L);$=ia.geometry.vertices;oa=b();oa.positionScreen.copy($[0]);P.multiplyVector4(oa.positionScreen);Wa=ia.type===THREE.LinePieces?2:1;pa=1;for(W=$.length;pa<W;pa++)oa=b(),oa.positionScreen.copy($[pa]),P.multiplyVector4(oa.positionScreen),
0<(pa+1)%Wa||(Ea=l[k-2],I.copy(oa.positionScreen),N.copy(Ea.positionScreen),!0===d(I,N)&&(I.multiplyScalar(1/I.w),N.multiplyScalar(1/N.w),t===z?(Fa=new THREE.RenderableLine,D.push(Fa),z++,t++,x=Fa):x=D[t++],x.v1.positionScreen.copy(I),x.v2.positionScreen.copy(N),x.z=Math.max(I.z,N.z),x.material=ia.material,J.elements.push(x)))}g=0;for(m=J.sprites.length;g<m;g++)ia=J.sprites[g].object,L=ia.matrixWorld,ia instanceof THREE.Particle&&(E.set(L.elements[12],L.elements[13],L.elements[14],1),F.multiplyVector4(E),
E.z/=E.w,0<E.z&&1>E.z&&(A===H?(aa=new THREE.RenderableParticle,G.push(aa),H++,A++,y=aa):y=G[A++],y.object=ia,y.x=E.x/E.w,y.y=E.y/E.w,y.z=E.z,y.rotation=ia.rotation.z,y.scale.x=ia.scale.x*Math.abs(y.x-(E.x+h.projectionMatrix.elements[0])/(E.w+h.projectionMatrix.elements[12])),y.scale.y=ia.scale.y*Math.abs(y.y-(E.y+h.projectionMatrix.elements[5])/(E.w+h.projectionMatrix.elements[13])),y.material=ia.material,J.elements.push(y)));!0===M&&J.elements.sort(c);return J}};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=void 0!==g?g:0;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Geometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=
this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix3;b.getInverse(a).transpose();for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal).normalize();for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]).normalize();a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=
this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;
a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.normalize(),c.normal.copy(g)},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,
new THREE.Vector3]:d instanceof THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{e=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}if(a){var f,g,h,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,p=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],j.sub(g,f),k.sub(a,f),j.crossSelf(k),
e[d.a].addSelf(j),e[d.b].addSelf(j),e[d.c].addSelf(j)):d instanceof THREE.Face4&&(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],h=this.vertices[d.d],l.sub(h,f),k.sub(a,f),l.crossSelf(k),e[d.a].addSelf(l),e[d.b].addSelf(l),e[d.d].addSelf(l),m.sub(h,g),p.sub(f,g),m.crossSelf(p),e[d.b].addSelf(m),e[d.c].addSelf(m),e[d.d].addSelf(m))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal)):
d instanceof THREE.Face4&&(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal),e[d.d].addSelf(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),d.vertexNormals[3].copy(e[d.d]))},
computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<
b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,j,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(j),h.push(k)}g=this.morphNormals[a];f.vertices=
this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=g.faceNormals[c],k=g.vertexNormals[c],j.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,
e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,A){h=a.vertices[b];j=a.vertices[c];k=a.vertices[d];l=g[e];m=g[f];p=g[A];s=j.x-h.x;r=k.x-h.x;q=j.y-h.y;v=k.y-h.y;u=j.z-h.z;w=k.z-h.z;x=m.x-l.x;t=p.x-l.x;D=m.y-l.y;z=p.y-l.y;y=1/(x*z-t*D);J.set((z*s-D*r)*y,(z*q-D*v)*y,(z*u-D*w)*y);T.set((x*r-t*s)*y,(x*v-t*q)*y,(x*w-t*u)*y);G[b].addSelf(J);G[c].addSelf(J);G[d].addSelf(J);H[b].addSelf(T);H[c].addSelf(T);H[d].addSelf(T)}var b,c,d,e,f,g,h,j,k,l,m,p,s,r,q,v,u,w,
x,t,D,z,y,A,G=[],H=[],J=new THREE.Vector3,T=new THREE.Vector3,E=new THREE.Vector3,O=new THREE.Vector3,F=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)G[b]=new THREE.Vector3,H[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var L=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<
f.vertexNormals.length;d++)F.copy(f.vertexNormals[d]),e=f[L[d]],A=G[e],E.copy(A),E.subSelf(F.multiplyScalar(F.dot(A))).normalize(),O.cross(f.vertexNormals[d],A),e=O.dot(H[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(E.x,E.y,E.z,e)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},
computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,j;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=
this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(j=this.faceVertexUvs[d][f])&&j.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},
clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.Vector2(e[g].x,e[g].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix3,b.getInverse(a).transpose(),b.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);
var a=this.attributes.position.array;if(a){var b=this.boundingBox,c,d,e;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var f=3,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=
new THREE.Sphere);var a=this.attributes.position.array;if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var e=this.attributes.position.array,f=this.attributes.normal.array,g,h,j,k,l,m,p=new THREE.Vector3,s=new THREE.Vector3,r=new THREE.Vector3,q=new THREE.Vector3,v=new THREE.Vector3;if(this.attributes.index){var u=this.attributes.index.array,w=this.offsets;c=0;for(d=w.length;c<d;++c){b=w[c].start;g=w[c].count;var x=w[c].index;a=b;for(b+=g;a<b;a+=3)g=x+u[a],h=x+u[a+1],j=x+u[a+2],k=e[3*g],l=e[3*g+1],m=e[3*g+2],p.set(k,l,m),k=e[3*h],l=e[3*h+1],m=e[3*h+2],s.set(k,l,m),k=e[3*j],l=e[3*j+1],m=e[3*j+2],r.set(k,
l,m),q.sub(r,s),v.sub(p,s),q.crossSelf(v),f[3*g]+=q.x,f[3*g+1]+=q.y,f[3*g+2]+=q.z,f[3*h]+=q.x,f[3*h+1]+=q.y,f[3*h+2]+=q.z,f[3*j]+=q.x,f[3*j+1]+=q.y,f[3*j+2]+=q.z}}else{a=0;for(b=e.length;a<b;a+=9)k=e[a],l=e[a+1],m=e[a+2],p.set(k,l,m),k=e[a+3],l=e[a+4],m=e[a+5],s.set(k,l,m),k=e[a+6],l=e[a+7],m=e[a+8],r.set(k,l,m),q.sub(r,s),v.sub(p,s),q.crossSelf(v),f[a]=q.x,f[a+1]=q.y,f[a+2]=q.z,f[a+3]=q.x,f[a+4]=q.y,f[a+5]=q.z,f[a+6]=q.x,f[a+7]=q.y,f[a+8]=q.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a=
this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){da.x=d[3*a];da.y=d[3*a+1];da.z=d[3*a+2];R.copy(da);N=j[a];U.copy(N);U.subSelf(da.multiplyScalar(da.dot(N))).normalize();S.cross(R,N);wa=S.dot(k[a]);I=0>wa?-1:1;h[4*a]=U.x;h[4*a+1]=U.y;h[4*a+2]=U.z;h[4*a+3]=I}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===
this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,j=[],k=[],g=0;g<f;g++)j[g]=new THREE.Vector3,k[g]=new THREE.Vector3;
var l,m,p,s,r,q,v,u,w,x,t,D,z,y,A,f=new THREE.Vector3,g=new THREE.Vector3,G,H,J,T,E,O,F,L=this.offsets;J=0;for(T=L.length;J<T;++J){H=L[J].start;E=L[J].count;var P=L[J].index;G=H;for(H+=E;G<H;G+=3)E=P+b[G],O=P+b[G+1],F=P+b[G+2],l=c[3*E],m=c[3*E+1],p=c[3*E+2],s=c[3*O],r=c[3*O+1],q=c[3*O+2],v=c[3*F],u=c[3*F+1],w=c[3*F+2],x=e[2*E],t=e[2*E+1],D=e[2*O],z=e[2*O+1],y=e[2*F],A=e[2*F+1],s-=l,l=v-l,r-=m,m=u-m,q-=p,p=w-p,D-=x,x=y-x,z-=t,t=A-t,A=1/(D*t-x*z),f.set((t*s-z*l)*A,(t*r-z*m)*A,(t*q-z*p)*A),g.set((D*
l-x*s)*A,(D*m-x*r)*A,(D*p-x*q)*A),j[E].addSelf(f),j[O].addSelf(f),j[F].addSelf(f),k[E].addSelf(g),k[O].addSelf(g),k[F].addSelf(g)}var U=new THREE.Vector3,S=new THREE.Vector3,da=new THREE.Vector3,R=new THREE.Vector3,I,N,wa;J=0;for(T=L.length;J<T;++J){H=L[J].start;E=L[J].count;P=L[J].index;G=H;for(H+=E;G<H;G+=3)E=P+b[G],O=P+b[G+1],F=P+b[G+2],a(E),a(O),a(F)}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1;this.texture=null};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DayLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.skyColor=new THREE.Color(b);this.groundColor=new THREE.Color(c);this.position=new THREE.Vector3(0,100,0);this.hemiPosition=new THREE.Vector3(0,100,0);this.target=new THREE.Object3D;this.sunIntensity=d!==d?d:1;this.hemiIntensity=e!==e?e:1;this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=
!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[]};THREE.DayLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=
new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,j,k,v){var u=f.toLowerCase().endsWith(".dds"),w=b+"/"+f;if(u){var x=THREE.ImageUtils.loadCompressedTexture(w);a[e]=x}else x=document.createElement("canvas"),a[e]=new THREE.Texture(x);a[e].sourceFile=f;h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[e].wrapT=THREE.RepeatWrapping));j&&a[e].offset.set(j[0],j[1]);k&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},
void 0!==f[k[0]]&&(a[e].wrapS=f[k[0]]),void 0!==f[k[1]]&&(a[e].wrapT=f[k[1]]));v&&(a[e].anisotropy=v);if(!u){var t=a[e];a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);t.image.width=a;t.image.height=b;t.image.getContext("2d").drawImage(this,0,0,a,b)}else t.image=this;t.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=w}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",j={color:15658734,opacity:1,
map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;void 0!==a.depthTest&&(j.depthTest=a.depthTest);void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite);void 0!==a.visible&&(j.visible=a.visible);void 0!==a.flipSided&&(j.side=THREE.BackSide);
void 0!==a.doubleSided&&(j.side=THREE.DoubleSide);void 0!==a.wireframe&&(j.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors));a.colorDiffuse?j.color=f(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor);a.colorSpecular&&(j.specular=f(a.colorSpecular));a.colorAmbient&&(j.ambient=f(a.colorAmbient));a.transparency&&(j.opacity=a.transparency);a.specularCoef&&(j.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(j.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=j.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(k.tDiffuse.value=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.value=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.value=j.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(j.color),
k.uSpecularColor.value.setHex(j.specular),k.uAmbientColor.value.setHex(j.ambient),k.uShininess.value=j.shininess,void 0!==j.opacity&&(k.uOpacity.value=j.opacity),h=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0}),j.transparent&&(h.transparent=!0)):h=new THREE[h](j);void 0!==a.DbgName&&(h.name=a.DbgName);return h}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c&&"string"===typeof c?c:this.extractUrlBase(a);d=d&&"string"===typeof d?d:this.extractUrlBase(a);var e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):
2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(){var b,c,d,e,k,l,m,p,s,r,q,v,u,w,x,t;function D(a){return a%4?4-a%4:0}function z(a,b){return(new Uint8Array(a,b,1))[0]}function y(a,b){return(new Uint32Array(a,b,1))[0]}function A(b,c){var d,e,f,g,h,j,l,k=new Uint32Array(a,c,3*b);for(d=0;d<b;d++)e=k[3*d],f=k[3*d+1],g=k[3*d+2],h=P[2*e],e=P[2*e+1],j=P[2*f],l=P[2*f+1],f=P[2*g],g=P[2*g+1],O.faceVertexUvs[0].push([new THREE.Vector2(h,e),new THREE.Vector2(j,l),new THREE.Vector2(f,
g)])}function G(b,c){var d,e,f,g,h,j,l,k,p,m=new Uint32Array(a,c,4*b);for(d=0;d<b;d++)e=m[4*d],f=m[4*d+1],g=m[4*d+2],h=m[4*d+3],j=P[2*e],e=P[2*e+1],l=P[2*f],k=P[2*f+1],f=P[2*g],p=P[2*g+1],g=P[2*h],h=P[2*h+1],O.faceVertexUvs[0].push([new THREE.Vector2(j,e),new THREE.Vector2(l,k),new THREE.Vector2(f,p),new THREE.Vector2(g,h)])}function H(b,c,d){var e,f,g,h;c=new Uint32Array(a,c,3*b);var j=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=j[d],O.faces.push(new THREE.Face3(e,f,g,
null,null,h))}function J(b,c,d){var e,f,g,h,j;c=new Uint32Array(a,c,4*b);var l=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],j=l[d],O.faces.push(new THREE.Face4(e,f,g,h,null,null,j))}function T(b,c,d,e){var f,g,h,j,l,k,p;c=new Uint32Array(a,c,3*b);d=new Uint32Array(a,d,3*b);var m=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];l=d[3*e];k=d[3*e+1];p=d[3*e+2];j=m[e];var s=L[3*k],r=L[3*k+1];k=L[3*k+2];var q=L[3*p],t=L[3*p+1];p=L[3*p+2];O.faces.push(new THREE.Face3(f,
g,h,[new THREE.Vector3(L[3*l],L[3*l+1],L[3*l+2]),new THREE.Vector3(s,r,k),new THREE.Vector3(q,t,p)],null,j))}}function E(b,c,d,e){var f,g,h,j,l,k,p,m,s;c=new Uint32Array(a,c,4*b);d=new Uint32Array(a,d,4*b);var r=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];j=c[4*e+3];k=d[4*e];p=d[4*e+1];m=d[4*e+2];s=d[4*e+3];l=r[e];var q=L[3*p],t=L[3*p+1];p=L[3*p+2];var v=L[3*m],u=L[3*m+1];m=L[3*m+2];var x=L[3*s],w=L[3*s+1];s=L[3*s+2];O.faces.push(new THREE.Face4(f,g,h,j,[new THREE.Vector3(L[3*
k],L[3*k+1],L[3*k+2]),new THREE.Vector3(q,t,p),new THREE.Vector3(v,u,m),new THREE.Vector3(x,w,s)],null,l))}}var O=this,F=0,L=[],P=[],U,S,da;THREE.Geometry.call(this);t=a;S=F;w=new Uint8Array(t,S,12);r="";for(u=0;12>u;u++)r+=String.fromCharCode(w[S+u]);b=z(t,S+12);z(t,S+13);z(t,S+14);z(t,S+15);c=z(t,S+16);d=z(t,S+17);e=z(t,S+18);k=z(t,S+19);l=y(t,S+20);m=y(t,S+20+4);p=y(t,S+20+8);s=y(t,S+20+12);r=y(t,S+20+16);q=y(t,S+20+20);v=y(t,S+20+24);u=y(t,S+20+28);w=y(t,S+20+32);x=y(t,S+20+36);t=y(t,S+20+40);
F+=b;S=3*c+k;da=4*c+k;U=s*S;b=r*(S+3*d);c=q*(S+3*e);k=v*(S+3*d+3*e);S=u*da;d=w*(da+4*d);e=x*(da+4*e);da=F;var F=new Float32Array(a,F,3*l),R,I,N,wa;for(R=0;R<l;R++)I=F[3*R],N=F[3*R+1],wa=F[3*R+2],O.vertices.push(new THREE.Vector3(I,N,wa));l=F=da+3*l*Float32Array.BYTES_PER_ELEMENT;if(m){F=new Int8Array(a,F,3*m);for(da=0;da<m;da++)R=F[3*da],I=F[3*da+1],N=F[3*da+2],L.push(R/127,I/127,N/127)}F=l+3*m*Int8Array.BYTES_PER_ELEMENT;m=F+=D(3*m);if(p){l=new Float32Array(a,F,2*p);for(F=0;F<p;F++)da=l[2*F],R=l[2*
F+1],P.push(da,R)}p=F=m+2*p*Float32Array.BYTES_PER_ELEMENT;U=p+U+D(2*s);m=U+b+D(2*r);b=m+c+D(2*q);c=b+k+D(2*v);S=c+S+D(2*u);k=S+d+D(2*w);d=k+e+D(2*x);q&&(e=m+3*q*Uint32Array.BYTES_PER_ELEMENT,H(q,m,e+3*q*Uint32Array.BYTES_PER_ELEMENT),A(q,e));v&&(q=b+3*v*Uint32Array.BYTES_PER_ELEMENT,e=q+3*v*Uint32Array.BYTES_PER_ELEMENT,T(v,b,q,e+3*v*Uint32Array.BYTES_PER_ELEMENT),A(v,e));x&&(v=k+4*x*Uint32Array.BYTES_PER_ELEMENT,J(x,k,v+4*x*Uint32Array.BYTES_PER_ELEMENT),G(x,v));t&&(x=d+4*t*Uint32Array.BYTES_PER_ELEMENT,
v=x+4*t*Uint32Array.BYTES_PER_ELEMENT,E(t,d,x,v+4*t*Uint32Array.BYTES_PER_ELEMENT),G(t,v));s&&H(s,p,p+3*s*Uint32Array.BYTES_PER_ELEMENT);r&&(s=U+3*r*Uint32Array.BYTES_PER_ELEMENT,T(r,U,s,s+3*r*Uint32Array.BYTES_PER_ELEMENT));u&&J(u,c,c+4*u*Uint32Array.BYTES_PER_ELEMENT);w&&(r=S+4*w*Uint32Array.BYTES_PER_ELEMENT,E(w,S,r,r+4*w*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals()};e.prototype=Object.create(THREE.Geometry.prototype);e=new e(c);c=this.initMaterials(d,c);this.needsTangents(c)&&
e.computeTangents();b(e,c)};THREE.ImageLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.withCredentials=this.withCredentials;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===
f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1,f,g,h,j,k,l,m,p,s,r,q,v,u,w,x,t=a.faces;r=a.vertices;var D=a.normals,z=a.colors,y=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&y++;for(f=0;f<y;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];j=0;for(k=r.length;j<k;)l=new THREE.Vector3,l.x=r[j++]*e,l.y=r[j++]*e,l.z=r[j++]*e,d.vertices.push(l);j=0;for(k=t.length;j<k;){r=t[j++];l=r&1;h=r&2;f=r&4;g=r&8;p=r&16;m=r&32;q=r&64;r&=128;l?(v=new THREE.Face4,
v.a=t[j++],v.b=t[j++],v.c=t[j++],v.d=t[j++],l=4):(v=new THREE.Face3,v.a=t[j++],v.b=t[j++],v.c=t[j++],l=3);h&&(h=t[j++],v.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<y;f++)u=a.uvs[f],s=t[j++],x=u[2*s],s=u[2*s+1],d.faceUvs[f][h]=new THREE.Vector2(x,s);if(g)for(f=0;f<y;f++){u=a.uvs[f];w=[];for(g=0;g<l;g++)s=t[j++],x=u[2*s],s=u[2*s+1],w[g]=new THREE.Vector2(x,s);d.faceVertexUvs[f][h]=w}p&&(p=3*t[j++],g=new THREE.Vector3,g.x=D[p++],g.y=D[p++],g.z=D[p],v.normal=g);if(m)for(f=0;f<l;f++)p=3*t[j++],g=
new THREE.Vector3,g.x=D[p++],g.y=D[p++],g.z=D[p],v.vertexNormals.push(g);q&&(m=t[j++],m=new THREE.Color(z[m]),v.color=m);if(r)for(f=0;f<l;f++)m=t[j++],m=new THREE.Color(z[m]),v.vertexColors.push(m);d.faces.push(v)}if(a.skinWeights){j=0;for(k=a.skinWeights.length;j<k;j+=2)t=a.skinWeights[j],D=a.skinWeights[j+1],d.skinWeights.push(new THREE.Vector4(t,D,0,0))}if(a.skinIndices){j=0;for(k=a.skinIndices.length;j<k;j+=2)t=a.skinIndices[j],D=a.skinIndices[j+1],d.skinIndices.push(new THREE.Vector4(t,D,0,0))}d.bones=
a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){j=0;for(k=a.morphTargets.length;j<k;j++){d.morphTargets[j]={};d.morphTargets[j].name=a.morphTargets[j].name;d.morphTargets[j].vertices=[];z=d.morphTargets[j].vertices;y=a.morphTargets[j].vertices;t=0;for(D=y.length;t<D;t+=3)r=new THREE.Vector3,r.x=y[t]*e,r.y=y[t+1]*e,r.z=y[t+2]*e,z.push(r)}}if(void 0!==a.morphColors){j=0;for(k=a.morphColors.length;j<k;j++){d.morphColors[j]={};d.morphColors[j].name=a.morphColors[j].name;d.morphColors[j].colors=
[];D=d.morphColors[j].colors;z=a.morphColors[j].colors;e=0;for(t=z.length;e<t;e+=3)y=new THREE.Color(16755200),y.setRGB(z[e],z[e+1],z[e+2]),D.push(y)}}d.computeCentroids();d.computeFaceNormals();a=this.initMaterials(a.materials,c);this.needsTangents(a)&&d.computeTangents();b(d,a)};THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:m+"/"+a}function e(){f(A.scene,H.objects)}function f(a,b){var c,e,g,j,k,m;for(m in b)if(void 0===A.objects[m]){var q=b[m],t=null;if(q.type&&q.type in l.hierarchyHandlerMap){if(void 0===q.loading){c={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1};e={};for(var v in q)v in c||(e[v]=q[v]);s=A.materials[q.material];q.loading=!0;
c=l.hierarchyHandlerMap[q.type].loaderObject;c.options?c.load(d(q.url,H.urlBaseType),h(m,a,s,q)):c.load(d(q.url,H.urlBaseType),h(m,a,s,q),e)}}else if(void 0!==q.geometry){if(p=A.geometries[q.geometry]){t=!1;s=A.materials[q.material];t=s instanceof THREE.ShaderMaterial;e=q.position;g=q.rotation;j=q.scale;c=q.matrix;k=q.quaternion;q.material||(s=new THREE.MeshFaceMaterial(A.face_materials[q.geometry]));s instanceof THREE.MeshFaceMaterial&&0===s.materials.length&&(s=new THREE.MeshFaceMaterial(A.face_materials[q.geometry]));
if(s instanceof THREE.MeshFaceMaterial)for(var y=0;y<s.materials.length;y++)t=t||s.materials[y]instanceof THREE.ShaderMaterial;t&&p.computeTangents();q.skin?t=new THREE.SkinnedMesh(p,s):q.morph?(t=new THREE.MorphAnimMesh(p,s),void 0!==q.duration&&(t.duration=q.duration),void 0!==q.time&&(t.time=q.time),void 0!==q.mirroredLoop&&(t.mirroredLoop=q.mirroredLoop),s.morphNormals&&p.computeMorphNormals()):t=new THREE.Mesh(p,s);t.name=m;c?(t.matrixAutoUpdate=!1,t.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],
c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(t.position.set(e[0],e[1],e[2]),k?(t.quaternion.set(k[0],k[1],k[2],k[3]),t.useQuaternion=!0):t.rotation.set(g[0],g[1],g[2]),t.scale.set(j[0],j[1],j[2]));t.visible=q.visible;t.castShadow=q.castShadow;t.receiveShadow=q.receiveShadow;a.add(t);A.objects[m]=t}}else"DirectionalLight"===q.type||"PointLight"===q.type||"AmbientLight"===q.type?(w=void 0!==q.color?q.color:16777215,x=void 0!==q.intensity?q.intensity:1,"DirectionalLight"===q.type?(e=q.direction,
u=new THREE.DirectionalLight(w,x),u.position.set(e[0],e[1],e[2]),q.target&&(G.push({object:u,targetName:q.target}),u.target=null)):"PointLight"===q.type?(e=q.position,c=q.distance,u=new THREE.PointLight(w,x,c),u.position.set(e[0],e[1],e[2])):"AmbientLight"===q.type&&(u=new THREE.AmbientLight(w)),a.add(u),u.name=m,A.lights[m]=u,A.objects[m]=u):"PerspectiveCamera"===q.type||"OrthographicCamera"===q.type?("PerspectiveCamera"===q.type?r=new THREE.PerspectiveCamera(q.fov,q.aspect,q.near,q.far):"OrthographicCamera"===
q.type&&(r=new THREE.OrthographicCamera(q.left,q.right,q.top,q.bottom,q.near,q.far)),e=q.position,r.position.set(e[0],e[1],e[2]),a.add(r),r.name=m,A.cameras[m]=r,A.objects[m]=r):(e=q.position,g=q.rotation,j=q.scale,k=q.quaternion,t=new THREE.Object3D,t.name=m,t.position.set(e[0],e[1],e[2]),k?(t.quaternion.set(k[0],k[1],k[2],k[3]),t.useQuaternion=!0):t.rotation.set(g[0],g[1],g[2]),t.scale.set(j[0],j[1],j[2]),t.visible=void 0!==q.visible?q.visible:!1,a.add(t),A.objects[m]=t,A.empties[m]=t);if(t){if(void 0!==
q.properties)for(var z in q.properties)t.properties[z]=q.properties[z];void 0!==q.children&&f(t,q.children)}}}function g(a){return function(b,c){A.geometries[a]=b;A.face_materials[a]=c;e();t-=1;l.onLoadComplete();k()}}function h(a,b,c,d){return function(f){f=f.content?f.content:f.dae?f.scene:f;var g=d.position,h=d.rotation,j=d.quaternion,p=d.scale;f.position.set(g[0],g[1],g[2]);j?(f.quaternion.set(j[0],j[1],j[2],j[3]),f.useQuaternion=!0):f.rotation.set(h[0],h[1],h[2]);f.scale.set(p[0],p[1],p[2]);
c&&f.traverse(function(a){a.material=c});var m=void 0!==d.visible?d.visible:!0;f.traverse(function(a){a.visible=m});b.add(f);f.name=a;A.objects[a]=f;e();t-=1;l.onLoadComplete();k()}}function j(a){return function(b,c){A.geometries[a]=b;A.face_materials[a]=c}}function k(){l.callbackProgress({totalModels:z,totalTextures:y,loadedModels:z-t,loadedTextures:y-D},A);l.onLoadProgress();if(0===t&&0===D){for(var a=0;a<G.length;a++){var c=G[a],d=A.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,
A.scene.add(c.object.target));c.object.target.properties.targetInverse=c.object}b(A)}}var l=this,m=THREE.Loader.prototype.extractUrlBase(c),p,s,r,q,v,u,w,x,t,D,z,y,A,G=[],H=a,J;for(J in this.geometryHandlerMap)a=this.geometryHandlerMap[J].loaderClass,this.geometryHandlerMap[J].loaderObject=new a;for(J in this.hierarchyHandlerMap)a=this.hierarchyHandlerMap[J].loaderClass,this.hierarchyHandlerMap[J].loaderObject=new a;D=t=0;A={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},
objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(H.transform&&(J=H.transform.position,a=H.transform.rotation,c=H.transform.scale,J&&A.scene.position.set(J[0],J[1],J[2]),a&&A.scene.rotation.set(a[0],a[1],a[2]),c&&A.scene.scale.set(c[0],c[1],c[2]),J||a||c))A.scene.updateMatrix(),A.scene.updateMatrixWorld();J=function(a){return function(){D-=a;k();l.onLoadComplete()}};for(var T in H.fogs)a=H.fogs[T],"linear"===a.type?q=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(q=new THREE.FogExp2(0,a.density)),
a=a.color,q.color.setRGB(a[0],a[1],a[2]),A.fogs[T]=q;for(var E in H.geometries)q=H.geometries[E],q.type in this.geometryHandlerMap&&(t+=1,l.onLoadStart());for(var O in H.objects)q=H.objects[O],q.type&&q.type in this.hierarchyHandlerMap&&(t+=1,l.onLoadStart());z=t;for(E in H.geometries)if(q=H.geometries[E],"cube"===q.type)p=new THREE.CubeGeometry(q.width,q.height,q.depth,q.widthSegments,q.heightSegments,q.depthSegments),A.geometries[E]=p;else if("plane"===q.type)p=new THREE.PlaneGeometry(q.width,q.height,
q.widthSegments,q.heightSegments),A.geometries[E]=p;else if("sphere"===q.type)p=new THREE.SphereGeometry(q.radius,q.widthSegments,q.heightSegments),A.geometries[E]=p;else if("cylinder"===q.type)p=new THREE.CylinderGeometry(q.topRad,q.botRad,q.height,q.radSegs,q.heightSegs),A.geometries[E]=p;else if("torus"===q.type)p=new THREE.TorusGeometry(q.radius,q.tube,q.segmentsR,q.segmentsT),A.geometries[E]=p;else if("icosahedron"===q.type)p=new THREE.IcosahedronGeometry(q.radius,q.subdivisions),A.geometries[E]=
p;else if(q.type in this.geometryHandlerMap){O={};for(v in q)"type"!==v&&"url"!==v&&(O[v]=q[v]);this.geometryHandlerMap[q.type].loaderObject.load(d(q.url,H.urlBaseType),g(E),O)}else"embedded"===q.type&&(O=H.embeds[q.id],O.metadata=H.metadata,O&&this.geometryHandlerMap.ascii.loaderObject.createModel(O,j(E),""));for(var F in H.textures)if(E=H.textures[F],E.url instanceof Array){D+=E.url.length;for(v=0;v<E.url.length;v++)l.onLoadStart()}else D+=1,l.onLoadStart();y=D;for(F in H.textures){E=H.textures[F];
void 0!==E.mapping&&void 0!==THREE[E.mapping]&&(E.mapping=new THREE[E.mapping]);if(E.url instanceof Array){O=E.url.length;q=[];for(v=0;v<O;v++)q[v]=d(E.url[v],H.urlBaseType);v=(v=q[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(q,E.mapping,J(O)):THREE.ImageUtils.loadTextureCube(q,E.mapping,J(O))}else v=E.url.toLowerCase().endsWith(".dds"),O=d(E.url,H.urlBaseType),q=J(1),v=v?THREE.ImageUtils.loadCompressedTexture(O,E.mapping,q):THREE.ImageUtils.loadTexture(O,E.mapping,q),void 0!==
THREE[E.minFilter]&&(v.minFilter=THREE[E.minFilter]),void 0!==THREE[E.magFilter]&&(v.magFilter=THREE[E.magFilter]),E.anisotropy&&(v.anisotropy=E.anisotropy),E.repeat&&(v.repeat.set(E.repeat[0],E.repeat[1]),1!==E.repeat[0]&&(v.wrapS=THREE.RepeatWrapping),1!==E.repeat[1]&&(v.wrapT=THREE.RepeatWrapping)),E.offset&&v.offset.set(E.offset[0],E.offset[1]),E.wrap&&(O={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==O[E.wrap[0]]&&(v.wrapS=O[E.wrap[0]]),void 0!==O[E.wrap[1]]&&(v.wrapT=
O[E.wrap[1]]));A.textures[F]=v}var L,P;for(L in H.materials){F=H.materials[L];for(P in F.parameters)"envMap"===P||"map"===P||"lightMap"===P||"bumpMap"===P?F.parameters[P]=A.textures[F.parameters[P]]:"shading"===P?F.parameters[P]="flat"===F.parameters[P]?THREE.FlatShading:THREE.SmoothShading:"side"===P?F.parameters[P]="double"==F.parameters[P]?THREE.DoubleSide:"back"==F.parameters[P]?THREE.BackSide:THREE.FrontSide:"blending"===P?F.parameters[P]=F.parameters[P]in THREE?THREE[F.parameters[P]]:THREE.NormalBlending:
"combine"===P?F.parameters[P]=F.parameters[P]in THREE?THREE[F.parameters[P]]:THREE.MultiplyOperation:"vertexColors"===P?"face"==F.parameters[P]?F.parameters[P]=THREE.FaceColors:F.parameters[P]&&(F.parameters[P]=THREE.VertexColors):"wrapRGB"===P&&(J=F.parameters[P],F.parameters[P]=new THREE.Vector3(J[0],J[1],J[2]));void 0!==F.parameters.opacity&&1>F.parameters.opacity&&(F.parameters.transparent=!0);F.parameters.normalMap?(J=THREE.ShaderUtils.lib.normal,E=THREE.UniformsUtils.clone(J.uniforms),v=F.parameters.color,
O=F.parameters.specular,q=F.parameters.ambient,T=F.parameters.shininess,E.tNormal.value=A.textures[F.parameters.normalMap],F.parameters.normalScale&&E.uNormalScale.value.set(F.parameters.normalScale[0],F.parameters.normalScale[1]),F.parameters.map&&(E.tDiffuse.value=F.parameters.map,E.enableDiffuse.value=!0),F.parameters.envMap&&(E.tCube.value=F.parameters.envMap,E.enableReflection.value=!0,E.uReflectivity.value=F.parameters.reflectivity),F.parameters.lightMap&&(E.tAO.value=F.parameters.lightMap,
E.enableAO.value=!0),F.parameters.specularMap&&(E.tSpecular.value=A.textures[F.parameters.specularMap],E.enableSpecular.value=!0),F.parameters.displacementMap&&(E.tDisplacement.value=A.textures[F.parameters.displacementMap],E.enableDisplacement.value=!0,E.uDisplacementBias.value=F.parameters.displacementBias,E.uDisplacementScale.value=F.parameters.displacementScale),E.uDiffuseColor.value.setHex(v),E.uSpecularColor.value.setHex(O),E.uAmbientColor.value.setHex(q),E.uShininess.value=T,F.parameters.opacity&&
(E.uOpacity.value=F.parameters.opacity),s=new THREE.ShaderMaterial({fragmentShader:J.fragmentShader,vertexShader:J.vertexShader,uniforms:E,lights:!0,fog:!0})):s=new THREE[F.type](F.parameters);A.materials[L]=s}for(L in H.materials)if(F=H.materials[L],F.parameters.materials){P=[];for(v=0;v<F.parameters.materials.length;v++)P.push(A.materials[F.parameters.materials[v]]);A.materials[L].materials=P}e();A.cameras&&H.defaults.camera&&(A.currentCamera=A.cameras[H.defaults.camera]);A.fogs&&H.defaults.fog&&
(A.scene.fog=A.fogs[H.defaults.fog]);a=H.defaults.bgcolor;A.bgColor=new THREE.Color;A.bgColor.setRGB(a[0],a[1],a[2]);A.bgColorAlpha=H.defaults.bgalpha;l.callbackSync(A);k()};THREE.TextureLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};THREE.Material=function(){THREE.EventDispatcher.call(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(a,b,c,d,e,f,g,h,j){THREE.EventDispatcher.call(this);this.id=THREE.TextureIdCount++;this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,j,k,l){THREE.Texture.call(this,null,f,g,h,j,k,d,e,l);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,j,k,l){THREE.Texture.call(this,null,f,g,h,j,k,d,e,l);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=
c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=
0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,
this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(a){function b(a){w!==a&&(w=q.globalAlpha=a)}function c(a){x!==a&&(a===THREE.NormalBlending?q.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?q.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(q.globalCompositeOperation="darker"),x=a)}function d(a){t!==a&&(t=q.strokeStyle=a)}function e(a){D!==a&&(D=q.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var f=this,g,h,j,k=new THREE.Projector,l=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),m,p,s,r,q=l.getContext("2d"),v=new THREE.Color(0),u=0,w=1,x=0,t=null,D=null,z=null,y=null,A=null,G,H,J,T,E=new THREE.RenderableVertex,O=new THREE.RenderableVertex,F,L,P,U,S,da,R,I,N,wa,Q,Aa,M=new THREE.Color,aa=new THREE.Color,na=new THREE.Color,ea=new THREE.Color,pa=new THREE.Color,W=new THREE.Color,$=new THREE.Color,oa={},Ea={},ra,fa,ia,Fa,Wa,Ca,ob,gb,Xa,Ja,Ga=new THREE.Box2,Ba=new THREE.Box2,xa=new THREE.Box2,pb=!1,ta=new THREE.Color,Ka=new THREE.Color,La=new THREE.Color,
ya=new THREE.Vector3,Ha,Ia,Mb,sb,Pb,Sb,rb=16;Ha=document.createElement("canvas");Ha.width=Ha.height=2;Ia=Ha.getContext("2d");Ia.fillStyle="rgba(0,0,0,1)";Ia.fillRect(0,0,2,2);Mb=Ia.getImageData(0,0,2,2);sb=Mb.data;Pb=document.createElement("canvas");Pb.width=Pb.height=rb;Sb=Pb.getContext("2d");Sb.translate(-rb/2,-rb/2);Sb.scale(rb,rb);rb--;this.domElement=l;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=
this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){m=a*this.devicePixelRatio;p=b*this.devicePixelRatio;s=Math.floor(m/2);r=Math.floor(p/2);l.width=m;l.height=p;l.style.width=a+"px";l.style.height=b+"px";Ga.min.set(-s,-r);Ga.max.set(s,r);Ba.min.set(-s,-r);Ba.max.set(s,r);w=1;x=0;A=y=z=D=t=null};this.setClearColor=function(a,b){v.copy(a);u=void 0!==b?b:1;Ba.min.set(-s,-r);Ba.max.set(s,r)};this.setClearColorHex=function(a,b){v.setHex(a);u=void 0!==b?
b:1;Ba.min.set(-s,-r);Ba.max.set(s,r)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){q.setTransform(1,0,0,-1,s,r);!1===Ba.empty()&&(Ba.intersect(Ga),Ba.expandByScalar(2),1>u&&q.clearRect(Ba.min.x|0,Ba.min.y|0,Ba.max.x-Ba.min.x|0,Ba.max.y-Ba.min.y|0),0<u&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*v.r)+","+Math.floor(255*v.g)+","+Math.floor(255*v.b)+","+u+")"),q.fillRect(Ba.min.x|0,Ba.min.y|0,Ba.max.x-Ba.min.x|0,Ba.max.y-Ba.min.y|0)),Ba.makeEmpty())};this.render=function(a,
l){function p(a,b,c){for(var d=0,e=j.length;d<e;d++){var f=j[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),l=b.dot(h);0>=l||(l*=f.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)}else f instanceof THREE.PointLight&&(h=f.matrixWorld.getPosition(),l=b.dot(ya.sub(h,a).normalize()),0>=l||(l*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=l&&(l*=f.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)))}}function m(a,d,e,g,h,j,k,q){f.info.render.vertices+=
3;f.info.render.faces++;b(q.opacity);c(q.blending);F=a.positionScreen.x;L=a.positionScreen.y;P=d.positionScreen.x;U=d.positionScreen.y;S=e.positionScreen.x;da=e.positionScreen.y;t(F,L,P,U,S,da);(q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial)&&null===q.map&&null===q.map?(W.copy(q.color),$.copy(q.emissive),q.vertexColors===THREE.FaceColors&&(W.r*=k.color.r,W.g*=k.color.g,W.b*=k.color.b),!0===pb?!1===q.wireframe&&q.shading==THREE.SmoothShading&&3==k.vertexNormalsLength?
(aa.r=na.r=ea.r=ta.r,aa.g=na.g=ea.g=ta.g,aa.b=na.b=ea.b=ta.b,p(k.v1.positionWorld,k.vertexNormalsModel[0],aa),p(k.v2.positionWorld,k.vertexNormalsModel[1],na),p(k.v3.positionWorld,k.vertexNormalsModel[2],ea),aa.r=aa.r*W.r+$.r,aa.g=aa.g*W.g+$.g,aa.b=aa.b*W.b+$.b,na.r=na.r*W.r+$.r,na.g=na.g*W.g+$.g,na.b=na.b*W.b+$.b,ea.r=ea.r*W.r+$.r,ea.g=ea.g*W.g+$.g,ea.b=ea.b*W.b+$.b,pa.r=0.5*(na.r+ea.r),pa.g=0.5*(na.g+ea.g),pa.b=0.5*(na.b+ea.b),ia=D(aa,na,ea,pa),w(F,L,P,U,S,da,0,0,1,0,0,1,ia)):(M.r=ta.r,M.g=ta.g,
M.b=ta.b,p(k.centroidModel,k.normalModel,M),M.r=M.r*W.r+$.r,M.g=M.g*W.g+$.g,M.b=M.b*W.b+$.b,!0===q.wireframe?n(M,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):u(M)):!0===q.wireframe?n(q.color,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):u(q.color)):q instanceof THREE.MeshBasicMaterial||q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial?null!==q.map?q.map.mapping instanceof THREE.UVMapping&&(Fa=k.uvs[0],x(F,L,P,U,S,da,Fa[g].x,Fa[g].y,Fa[h].x,
Fa[h].y,Fa[j].x,Fa[j].y,q.map)):null!==q.envMap?q.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(ya.copy(k.vertexNormalsModelView[g]),Wa=0.5*ya.x+0.5,Ca=0.5*ya.y+0.5,ya.copy(k.vertexNormalsModelView[h]),ob=0.5*ya.x+0.5,gb=0.5*ya.y+0.5,ya.copy(k.vertexNormalsModelView[j]),Xa=0.5*ya.x+0.5,Ja=0.5*ya.y+0.5,x(F,L,P,U,S,da,Wa,Ca,ob,gb,Xa,Ja,q.envMap)):(M.copy(q.color),q.vertexColors===THREE.FaceColors&&(M.r*=k.color.r,M.g*=k.color.g,M.b*=k.color.b),!0===q.wireframe?n(M,q.wireframeLinewidth,
q.wireframeLinecap,q.wireframeLinejoin):u(M)):q instanceof THREE.MeshDepthMaterial?(ra=l.near,fa=l.far,aa.r=aa.g=aa.b=1-rb(a.positionScreen.z,ra,fa),na.r=na.g=na.b=1-rb(d.positionScreen.z,ra,fa),ea.r=ea.g=ea.b=1-rb(e.positionScreen.z,ra,fa),pa.r=0.5*(na.r+ea.r),pa.g=0.5*(na.g+ea.g),pa.b=0.5*(na.b+ea.b),ia=D(aa,na,ea,pa),w(F,L,P,U,S,da,0,0,1,0,0,1,ia)):q instanceof THREE.MeshNormalMaterial&&(M.r=0.5*k.normalModelView.x+0.5,M.g=0.5*k.normalModelView.y+0.5,M.b=0.5*k.normalModelView.z+0.5,!0===q.wireframe?
n(M,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):u(M))}function t(a,b,c,d,e,f){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.closePath()}function v(a,b,c,d,e,f,g,h){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.lineTo(g,h);q.closePath()}function n(a,b,c,e){z!==b&&(z=q.lineWidth=b);y!==c&&(y=q.lineCap=c);A!==e&&(A=q.lineJoin=e);d(a.getStyle());q.stroke();xa.expandByScalar(2*b)}function u(a){e(a.getStyle());q.fill()}function x(a,b,c,d,f,g,h,j,l,k,n,p,m){if(!(m instanceof
THREE.DataTexture||void 0===m.image||0==m.image.width)){if(!0===m.needsUpdate){var s=m.wrapS==THREE.RepeatWrapping,r=m.wrapT==THREE.RepeatWrapping;oa[m.id]=q.createPattern(m.image,!0===s&&!0===r?"repeat":!0===s&&!1===r?"repeat-x":!1===s&&!0===r?"repeat-y":"no-repeat");m.needsUpdate=!1}void 0===oa[m.id]?e("rgba(0,0,0,1)"):e(oa[m.id]);var s=m.offset.x/m.repeat.x,r=m.offset.y/m.repeat.y,t=m.image.width*m.repeat.x,ya=m.image.height*m.repeat.y;h=(h+s)*t;j=(1-j+r)*ya;c-=a;d-=b;f-=a;g-=b;l=(l+s)*t-h;k=(1-
k+r)*ya-j;n=(n+s)*t-h;p=(1-p+r)*ya-j;s=l*p-n*k;0===s?(void 0===Ea[m.id]&&(b=document.createElement("canvas"),b.width=m.image.width,b.height=m.image.height,b=b.getContext("2d"),b.drawImage(m.image,0,0),Ea[m.id]=b.getImageData(0,0,m.image.width,m.image.height).data),b=Ea[m.id],h=4*(Math.floor(h)+Math.floor(j)*m.image.width),M.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),u(M)):(s=1/s,m=(p*c-k*f)*s,k=(p*d-k*g)*s,c=(l*f-n*c)*s,d=(l*g-n*d)*s,a=a-m*h-c*j,h=b-k*h-d*j,q.save(),q.transform(m,k,c,d,a,h),q.fill(),
q.restore())}}function w(a,b,c,d,e,f,g,h,j,l,k,n,p){var m,s;m=p.width-1;s=p.height-1;g*=m;h*=s;c-=a;d-=b;e-=a;f-=b;j=j*m-g;l=l*s-h;k=k*m-g;n=n*s-h;s=1/(j*n-k*l);m=(n*c-l*e)*s;l=(n*d-l*f)*s;c=(j*e-k*c)*s;d=(j*f-k*d)*s;a=a-m*g-c*h;b=b-l*g-d*h;q.save();q.transform(m,l,c,d,a,b);q.clip();q.drawImage(p,0,0);q.restore()}function D(a,b,c,d){sb[0]=255*a.r|0;sb[1]=255*a.g|0;sb[2]=255*a.b|0;sb[4]=255*b.r|0;sb[5]=255*b.g|0;sb[6]=255*b.b|0;sb[8]=255*c.r|0;sb[9]=255*c.g|0;sb[10]=255*c.b|0;sb[12]=255*d.r|0;sb[13]=
255*d.g|0;sb[14]=255*d.b|0;Ia.putImageData(Mb,0,0);Sb.drawImage(Ha,0,0);return Pb}function rb(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function Db(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===l instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();q.setTransform(1,0,0,-1,s,r);f.info.render.vertices=0;f.info.render.faces=0;g=k.projectScene(a,
l,this.sortObjects,this.sortElements);h=g.elements;j=g.lights;pb=0<j.length;if(!0===pb){ta.setRGB(0,0,0);Ka.setRGB(0,0,0);La.setRGB(0,0,0);for(var Qa=0,nc=j.length;Qa<nc;Qa++){var ba=j[Qa],ja=ba.color;ba instanceof THREE.AmbientLight?(ta.r+=ja.r,ta.g+=ja.g,ta.b+=ja.b):ba instanceof THREE.DirectionalLight?(Ka.r+=ja.r,Ka.g+=ja.g,Ka.b+=ja.b):ba instanceof THREE.PointLight&&(La.r+=ja.r,La.g+=ja.g,La.b+=ja.b)}}Qa=0;for(nc=h.length;Qa<nc;Qa++){var ga=h[Qa],ba=ga.material;if(!(void 0===ba||!1===ba.visible)){xa.makeEmpty();
if(ga instanceof THREE.RenderableParticle){G=ga;G.x*=s;G.y*=r;var ja=G,Ra=ga;b(ba.opacity);c(ba.blending);var vb=void 0,Eb=void 0,bb=void 0,lb=void 0,wb=ga=void 0,Zb=void 0;ba instanceof THREE.ParticleBasicMaterial?null===ba.map?(bb=Ra.object.scale.x,lb=Ra.object.scale.y,bb*=Ra.scale.x*s,lb*=Ra.scale.y*r,xa.min.set(ja.x-bb,ja.y-lb),xa.max.set(ja.x+bb,ja.y+lb),!1!==Ga.isIntersectionBox(xa)&&(e(ba.color.getStyle()),q.save(),q.translate(ja.x,ja.y),q.rotate(-Ra.rotation),q.scale(bb,lb),q.fillRect(-1,
-1,2,2),q.restore())):(ga=ba.map.image,wb=ga.width>>1,Zb=ga.height>>1,bb=Ra.scale.x*s,lb=Ra.scale.y*r,vb=bb*wb,Eb=lb*Zb,xa.min.set(ja.x-vb,ja.y-Eb),xa.max.set(ja.x+vb,ja.y+Eb),!1!==Ga.isIntersectionBox(xa)&&(q.save(),q.translate(ja.x,ja.y),q.rotate(-Ra.rotation),q.scale(bb,-lb),q.translate(-wb,-Zb),q.drawImage(ga,0,0),q.restore())):ba instanceof THREE.ParticleCanvasMaterial&&(vb=Ra.scale.x*s,Eb=Ra.scale.y*r,xa.min.set(ja.x-vb,ja.y-Eb),xa.max.set(ja.x+vb,ja.y+Eb),!1!==Ga.isIntersectionBox(xa)&&(d(ba.color.getStyle()),
e(ba.color.getStyle()),q.save(),q.translate(ja.x,ja.y),q.rotate(-Ra.rotation),q.scale(vb,Eb),ba.program(q),q.restore()))}else ga instanceof THREE.RenderableLine?(G=ga.v1,H=ga.v2,G.positionScreen.x*=s,G.positionScreen.y*=r,H.positionScreen.x*=s,H.positionScreen.y*=r,xa.setFromPoints([G.positionScreen,H.positionScreen]),!0===Ga.isIntersectionBox(xa)&&(ja=G,Ra=H,b(ba.opacity),c(ba.blending),q.beginPath(),q.moveTo(ja.positionScreen.x,ja.positionScreen.y),q.lineTo(Ra.positionScreen.x,Ra.positionScreen.y),
ba instanceof THREE.LineBasicMaterial&&(ja=ba.linewidth,z!==ja&&(z=q.lineWidth=ja),ja=ba.linecap,y!==ja&&(y=q.lineCap=ja),ja=ba.linejoin,A!==ja&&(A=q.lineJoin=ja),d(ba.color.getStyle()),q.stroke(),xa.expandByScalar(2*ba.linewidth)))):ga instanceof THREE.RenderableFace3?(G=ga.v1,H=ga.v2,J=ga.v3,G.positionScreen.x*=s,G.positionScreen.y*=r,H.positionScreen.x*=s,H.positionScreen.y*=r,J.positionScreen.x*=s,J.positionScreen.y*=r,!0===ba.overdraw&&(Db(G.positionScreen,H.positionScreen),Db(H.positionScreen,
J.positionScreen),Db(J.positionScreen,G.positionScreen)),xa.setFromPoints([G.positionScreen,H.positionScreen,J.positionScreen]),!0===Ga.isIntersectionBox(xa)&&m(G,H,J,0,1,2,ga,ba,a)):ga instanceof THREE.RenderableFace4&&(G=ga.v1,H=ga.v2,J=ga.v3,T=ga.v4,G.positionScreen.x*=s,G.positionScreen.y*=r,H.positionScreen.x*=s,H.positionScreen.y*=r,J.positionScreen.x*=s,J.positionScreen.y*=r,T.positionScreen.x*=s,T.positionScreen.y*=r,E.positionScreen.copy(H.positionScreen),O.positionScreen.copy(T.positionScreen),
!0===ba.overdraw&&(Db(G.positionScreen,H.positionScreen),Db(H.positionScreen,T.positionScreen),Db(T.positionScreen,G.positionScreen),Db(J.positionScreen,E.positionScreen),Db(J.positionScreen,O.positionScreen)),xa.setFromPoints([G.positionScreen,H.positionScreen,J.positionScreen,T.positionScreen]),!0===Ga.isIntersectionBox(xa)&&(ja=G,Ra=H,vb=J,Eb=T,bb=E,lb=O,wb=a,f.info.render.vertices+=4,f.info.render.faces++,b(ba.opacity),c(ba.blending),void 0!==ba.map&&null!==ba.map||void 0!==ba.envMap&&null!==
ba.envMap?(m(ja,Ra,Eb,0,1,3,ga,ba,wb),m(bb,vb,lb,1,2,3,ga,ba,wb)):(F=ja.positionScreen.x,L=ja.positionScreen.y,P=Ra.positionScreen.x,U=Ra.positionScreen.y,S=vb.positionScreen.x,da=vb.positionScreen.y,R=Eb.positionScreen.x,I=Eb.positionScreen.y,N=bb.positionScreen.x,wa=bb.positionScreen.y,Q=lb.positionScreen.x,Aa=lb.positionScreen.y,ba instanceof THREE.MeshLambertMaterial||ba instanceof THREE.MeshPhongMaterial?(W.copy(ba.color),$.copy(ba.emissive),ba.vertexColors===THREE.FaceColors&&(W.r*=ga.color.r,
W.g*=ga.color.g,W.b*=ga.color.b),!0===pb?!1===ba.wireframe&&ba.shading==THREE.SmoothShading&&4==ga.vertexNormalsLength?(aa.r=na.r=ea.r=pa.r=ta.r,aa.g=na.g=ea.g=pa.g=ta.g,aa.b=na.b=ea.b=pa.b=ta.b,p(ga.v1.positionWorld,ga.vertexNormalsModel[0],aa),p(ga.v2.positionWorld,ga.vertexNormalsModel[1],na),p(ga.v4.positionWorld,ga.vertexNormalsModel[3],ea),p(ga.v3.positionWorld,ga.vertexNormalsModel[2],pa),aa.r=aa.r*W.r+$.r,aa.g=aa.g*W.g+$.g,aa.b=aa.b*W.b+$.b,na.r=na.r*W.r+$.r,na.g=na.g*W.g+$.g,na.b=na.b*W.b+
$.b,ea.r=ea.r*W.r+$.r,ea.g=ea.g*W.g+$.g,ea.b=ea.b*W.b+$.b,pa.r=pa.r*W.r+$.r,pa.g=pa.g*W.g+$.g,pa.b=pa.b*W.b+$.b,ia=D(aa,na,ea,pa),t(F,L,P,U,R,I),w(F,L,P,U,R,I,0,0,1,0,0,1,ia),t(N,wa,S,da,Q,Aa),w(N,wa,S,da,Q,Aa,1,0,1,1,0,1,ia)):(M.r=ta.r,M.g=ta.g,M.b=ta.b,p(ga.centroidModel,ga.normalModel,M),M.r=M.r*W.r+$.r,M.g=M.g*W.g+$.g,M.b=M.b*W.b+$.b,v(F,L,P,U,S,da,R,I),!0===ba.wireframe?n(M,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(M)):(M.r=W.r+$.r,M.g=W.g+$.g,M.b=W.b+$.b,v(F,L,P,U,S,
da,R,I),!0===ba.wireframe?n(M,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(M))):ba instanceof THREE.MeshBasicMaterial?(M.copy(ba.color),ba.vertexColors===THREE.FaceColors&&(M.r*=ga.color.r,M.g*=ga.color.g,M.b*=ga.color.b),v(F,L,P,U,S,da,R,I),!0===ba.wireframe?n(M,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(M)):ba instanceof THREE.MeshNormalMaterial?(M.r=0.5*ga.normalModelView.x+0.5,M.g=0.5*ga.normalModelView.y+0.5,M.b=0.5*ga.normalModelView.z+0.5,v(F,L,P,
U,S,da,R,I),!0===ba.wireframe?n(M,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(M)):ba instanceof THREE.MeshDepthMaterial&&(ra=l.near,fa=l.far,aa.r=aa.g=aa.b=1-rb(ja.positionScreen.z,ra,fa),na.r=na.g=na.b=1-rb(Ra.positionScreen.z,ra,fa),ea.r=ea.g=ea.b=1-rb(Eb.positionScreen.z,ra,fa),pa.r=pa.g=pa.b=1-rb(vb.positionScreen.z,ra,fa),ia=D(aa,na,ea,pa),t(F,L,P,U,R,I),w(F,L,P,U,R,I,0,0,1,0,0,1,ia),t(N,wa,S,da,Q,Aa),w(N,wa,S,da,Q,Aa,1,0,1,1,0,1,ia)))));Ba.union(xa)}}q.setTransform(1,0,
0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",area_lights_utils:"#if MAX_AREA_LIGHTS > 0\nvec3 projectOnPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {\nreturn point - dot( point - planeCenter, planeNorm ) * planeNorm;\n}\nbool sideOfPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {\nreturn ( dot( point - planeCenter, planeNorm ) >= 0.0 );\n}\nvec3 linePlaneIntersect( vec3 lp, vec3 lv, vec3 pc, vec3 pn ) {\nreturn lp + lv * ( dot( pn, pc - lp ) / dot( pn, lv ) );\n}\nfloat calculateAttenuation( float dist, float constantAttenuation, float linearAttenuation, float quadraticAttenuation ) {\nreturn ( 1.0 / ( constantAttenuation + linearAttenuation * dist + quadraticAttenuation * dist * dist ) );\n}\n#endif",
lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_AREA_LIGHTS > 0\nuniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightNormal[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightRight[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightUp[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightSize[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightAttenuation[ MAX_AREA_LIGHTS ];\n#ifdef AREA_TEXTURE\nuniform sampler2D areaLightTexture[ MAX_AREA_LIGHTS ];\n#endif\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\n#if MAX_AREA_LIGHTS > 0\nfor( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\nfloat w = areaLightSize[ i ].x;\nfloat h = areaLightSize[ i ].y;\nvec3 vertexPosition = mvPosition.xyz;\nvec3 proj = projectOnPlane( vertexPosition, areaLightPosition[ i ], areaLightNormal[ i ] );\nvec3 dir = proj - areaLightPosition[ i ];\nvec2 diagonal = vec2( dot( dir, areaLightRight[ i ] ), dot( dir, areaLightUp[ i ] ) );\nvec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );\nvec3 nearestPointInside = areaLightPosition[ i ] + ( areaLightRight[ i ] * nearest2D.x + areaLightUp[ i ] * nearest2D.y );\nvec3 lightDir = normalize( nearestPointInside - vertexPosition );\nfloat NdotL = max( dot( areaLightNormal[ i ], -lightDir ), 0.0 );\nfloat NdotL2 = max( dot( normal, lightDir ), 0.0 );\nvec3 areaDiffuseWeight = vec3( sqrt( NdotL * NdotL2 ) );\nfloat dist = distance( vertexPosition, nearestPointInside );\nfloat attenuation = calculateAttenuation( dist, areaLightAttenuation[ i ].x, areaLightAttenuation[ i ].y, areaLightAttenuation[ i ].z );\nvec3 areaDiffuseTerm = areaDiffuseWeight * areaLightColor[ i ] * attenuation;\nvec3 textureTerm = vec3( 1.0 );\n#ifdef AREA_TEXTURE\nif ( areaLightSize[ i ].z > 0.0 ) {\nfloat d = distance( vertexPosition, nearestPointInside );\nvec2 co = ( diagonal.xy + vec2( w, h ) ) / ( 2.0 * vec2( w, h ) );\nco.y = 1.0 - co.y;\nvec3 ve = vertexPosition - areaLightPosition[ i ];\nvec4 diff = vec4( 0.0 );\nif ( dot( ve, areaLightNormal[ i ] ) < 0.0 ) {\ndiff = vec4( 0.0 );\n} else {\nfloat lod = max( pow( d, 0.1 ), 0.0 ) * 5.0;\nvec4 t00 = texture2DLod( areaLightTexture[ i ], co, lod );\nvec4 t01 = texture2DLod( areaLightTexture[ i ], co, lod + 1.0 );\ndiff = mix( t00, t01, 0.5 );\n}\ntextureTerm = diff.xyz;\nareaDiffuseTerm *= textureTerm;\n}\n#endif\nvLightFront += areaDiffuseTerm;\n#ifdef DOUBLE_SIDED\nfloat NdotL2Back = max( dot( -normal, lightDir ), 0.0 );\nvec3 areaDiffuseWeightBack = vec3( sqrt( NdotL * NdotL2Back ) );\nvLightBack += areaDiffuseWeightBack * areaLightColor[ i ] * attenuation * textureTerm;\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_AREA_LIGHTS > 0\nuniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightNormal[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightRight[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightUp[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightSize[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightAttenuation[ MAX_AREA_LIGHTS ];\n#ifdef AREA_TEXTURE\nuniform sampler2D areaLightTexture[ MAX_AREA_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_AREA_LIGHTS > 0\nvec3 areaDiffuse  = vec3( 0.0 );\nvec3 areaSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\nfloat w = areaLightSize[ i ].x;\nfloat h = areaLightSize[ i ].y;\nvec3 vertexPosition = -vViewPosition.xyz;\nvec3 proj = projectOnPlane( vertexPosition, areaLightPosition[ i ], areaLightNormal[ i ] );\nvec3 dir = proj - areaLightPosition[ i ];\nvec2 diagonal = vec2( dot( dir, areaLightRight[ i ] ), dot( dir, areaLightUp[ i ] ) );\nvec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );\nvec3 nearestPointInside = areaLightPosition[ i ] + ( areaLightRight[ i ] * nearest2D.x + areaLightUp[ i ] * nearest2D.y );\nvec3 lightDir = normalize( nearestPointInside - vertexPosition );\nfloat NdotL = max( dot( areaLightNormal[ i ], -lightDir ), 0.0 );\nfloat NdotL2 = max( dot( normal, lightDir ), 0.0 );\nvec3 areaDiffuseWeight = vec3( sqrt( NdotL * NdotL2 ) );\nfloat dist = distance( vertexPosition, nearestPointInside );\nfloat attenuation = calculateAttenuation( dist, areaLightAttenuation[ i ].x, areaLightAttenuation[ i ].y, areaLightAttenuation[ i ].z );\nvec3 areaDiffuseTerm = diffuse * areaDiffuseWeight * areaLightColor[ i ] * attenuation;\n#ifdef AREA_TEXTURE\nif ( areaLightSize[ i ].z > 0.0 ) {\nfloat d = distance( vertexPosition, nearestPointInside );\nvec2 co = ( diagonal.xy + vec2( w, h ) ) / ( 2.0 * vec2( w, h ) );\nco.y = 1.0 - co.y;\nvec3 ve = vertexPosition - areaLightPosition[ i ];\nvec4 diff = vec4( 0.0 );\nif ( dot( ve, areaLightNormal[ i ] ) < 0.0 ) {\ndiff = vec4( 0.0 );\n} else {\nfloat lod = max( pow( d, 0.1 ), 0.0 ) * 5.0;\nvec4 t00 = texture2D( areaLightTexture[ i ], co, lod );\nvec4 t01 = texture2D( areaLightTexture[ i ], co, lod + 1.0 );\ndiff = mix( t00, t01, 0.5 );\n}\nareaDiffuseTerm *= diff.xyz;\n}\n#endif\nareaDiffuse += areaDiffuseTerm;\nvec3 R = reflect( normalize( -vertexPosition ), normal );\nvec3 E = linePlaneIntersect( vertexPosition, R, areaLightPosition[ i ], areaLightNormal[ i ] );\nfloat specAngle = dot( R, areaLightNormal[ i ] );\nif ( dot( vertexPosition - areaLightPosition[ i ], areaLightNormal[ i ] ) >= 0.0 && specAngle > 0.0 ) {\nvec3 dirSpec = E - areaLightPosition[ i ];\nvec2 dirSpec2D = vec2( dot( dirSpec, areaLightRight[ i ] ), dot( dirSpec, areaLightUp[ i ] ) );\nvec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -w, w ), clamp( dirSpec2D.y, -h, h ) );\nfloat specFactor = 1.0 - clamp( length( nearestSpec2D - dirSpec2D ) * 0.05 * shininess, 0.0, 1.0 );\nvec3 areaSpecularWeight = specFactor * specAngle * areaDiffuseWeight;\nvec3 areaSpecularTerm = specular * areaSpecularWeight * areaLightColor[ i ] * attenuation;\n#ifdef AREA_TEXTURE\nif ( areaLightSize[ i ].z > 0.0 ) {\nfloat hard = 16.0;\nfloat gloss = 16.0;\nvec3 specPlane = areaLightPosition[ i ] + ( areaLightRight[ i ] * dirSpec2D.x + areaLightUp[ i ] * dirSpec2D.y );\nfloat dist = max( distance( vertexPosition, specPlane ), 0.0 );\nfloat d = ( ( 1.0 / hard ) / 2.0 ) * ( dist / gloss );\nw = max( w, 0.0 );\nh = max( h, 0.0 );\nvec2 co = dirSpec2D / ( d + 1.0 );\nco /= 2.0 * vec2( w, h );\nco = co + vec2( 0.5 );\nco.y = 1.0 - co.y;\nfloat lod = ( 2.0 / hard * max( dist, 0.0 ) );\nvec4 t00 = texture2D( areaLightTexture[ i ], co, lod );\nvec4 t01 = texture2D( areaLightTexture[ i ], co, lod + 1.0 );\nvec4 spec = mix( t00, t01, 0.5 );\nareaSpecularTerm *= spec.xyz;\n}\n#endif\nareaSpecular += areaSpecularTerm;\n}\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#if MAX_AREA_LIGHTS > 0\ntotalDiffuse += areaDiffuse;\ntotalSpecular += areaSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},areaLightColor:{type:"fv",value:[]},areaLightPosition:{type:"fv",value:[]},areaLightNormal:{type:"fv",
value:[]},areaLightRight:{type:"fv",value:[]},areaLightUp:{type:"fv",value:[]},areaLightSize:{type:"fv",value:[]},areaLightAttenuation:{type:"fv",value:[]},areaLightTexture:{type:"tv",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},
shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.area_lights_utils,THREE.ShaderChunk.lights_lambert_pars_vertex,
THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,
1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.area_lights_utils,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",
THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,
{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)n.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?
g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=n.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function d(a,b){var c=b.geometry,d=a.faces3,h=a.faces4,j=3*d.length+4*h.length,l=1*d.length+2*h.length,h=3*d.length+4*h.length,d=e(b,a),k=g(d),p=f(d),m=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*j);p&&(a.__normalArray=new Float32Array(3*j));c.hasTangents&&(a.__tangentArray=new Float32Array(4*j));m&&
(a.__colorArray=new Float32Array(3*j));if(k){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*j);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*j)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*j),a.__skinWeightArray=new Float32Array(4*j));a.__faceArray=new Uint16Array(3*l);a.__lineArray=new Uint16Array(2*h);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(k=a.numMorphTargets;c<
k;c++)a.__morphTargetsArrays.push(new Float32Array(3*j))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(k=a.numMorphNormals;c<k;c++)a.__morphNormalsArrays.push(new Float32Array(3*j))}a.__webglFaceCount=3*l;a.__webglLineCount=2*h;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var q in d.attributes){var l=d.attributes[q],c={},s;for(s in l)c[s]=l[s];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,h=1,"v2"===c.type?h=2:
"v3"===c.type?h=3:"v4"===c.type?h=4:"c"===c.type&&(h=3),c.size=h,c.array=new Float32Array(j*h),c.buffer=n.createBuffer(),c.buffer.belongsToAttribute=q,l.needsUpdate=!0,c.__original=l;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function e(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function f(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function g(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function h(a){var b,c,d;for(b in a.attributes)d="index"===b?n.ELEMENT_ARRAY_BUFFER:n.ARRAY_BUFFER,c=a.attributes[b],c.buffer=n.createBuffer(),n.bindBuffer(d,c.buffer),n.bufferData(d,c.array,n.STATIC_DRAW)}function j(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,h=d.uv,j=d.color,d=d.tangent;a.elementsNeedUpdate&&
void 0!==e&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.buffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(n.bindBuffer(n.ARRAY_BUFFER,f.buffer),n.bufferData(n.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(n.bindBuffer(n.ARRAY_BUFFER,g.buffer),n.bufferData(n.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.bufferData(n.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==j&&(n.bindBuffer(n.ARRAY_BUFFER,
j.buffer),n.bufferData(n.ARRAY_BUFFER,j.array,b));a.tangentsNeedUpdate&&void 0!==d&&(n.bindBuffer(n.ARRAY_BUFFER,d.buffer),n.bufferData(n.ARRAY_BUFFER,d.array,b));if(c)for(var l in a.attributes)delete a.attributes[l].array}function k(a){Ia[a]||(n.enableVertexAttribArray(a),Ia[a]=!0)}function l(){for(var a in Ia)Ia[a]&&(n.disableVertexAttribArray(a),Ia[a]=!1)}function m(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}function p(a,b){return b[0]-a[0]}function s(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)oa=
ea=null,W=$=ia=fa=Xa=gb=Fa=-1,jc=!0,a[d].render(b,c,ya,Ha),oa=ea=null,W=$=ia=fa=Xa=gb=Fa=-1,jc=!0}function r(a,b,c,d,e,f,g,h){var j,l,k,n;b?(l=a.length-1,n=b=-1):(l=0,b=a.length,n=1);for(var p=l;p!==b;p+=n)if(j=a[p],j.render){l=j.object;k=j.buffer;if(h)j=h;else{j=j[c];if(!j)continue;g&&M.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst);M.setDepthTest(j.depthTest);M.setDepthWrite(j.depthWrite);H(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}M.setMaterialFaces(j);k instanceof
THREE.BufferGeometry?M.renderBufferDirect(d,e,f,j,k,l):M.renderBuffer(d,e,f,j,k,l)}}function q(a,b,c,d,e,f,g){for(var h,j,l=0,k=a.length;l<k;l++)if(h=a[l],j=h.object,j.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&M.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);M.setDepthTest(h.depthTest);M.setDepthWrite(h.depthWrite);H(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}M.renderImmediateObject(c,d,e,h,j)}}function v(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}
function u(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function w(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function x(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function t(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function D(a,b,c,d,e){ra=0;d.needsUpdate&&(d.program&&Kc(d),M.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(M.maxMorphTargets));
var f=!1,g=d.program,h=g.uniforms,j=d.uniforms;g!==ea&&(n.useProgram(g),ea=g,f=!0);d.id!==W&&(W=d.id,f=!0);if(f||a!==oa)n.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==oa&&(oa=a);if(d.skinning)if(Ra&&e.useVertexTexture){if(null!==h.boneTexture){var l=z();n.uniform1i(h.boneTexture,l);M.setTexture(e.boneTexture,l)}}else null!==h.boneGlobalMatrices&&n.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?(j.fogNear.value=
c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(jc){var k,p,m,q=0,s=0,r=0,t,ya,v,u,Ha,Ia,x,w=Tb,y=w.directional.colors,D=w.directional.positions,Mb=w.point.colors,Fa=w.point.positions,F=w.point.distances,sb=w.spot.colors,H=w.spot.positions,J=w.spot.distances,I=w.spot.directions,P=w.spot.anglesCos,Sb=w.spot.exponents,S=w.hemi.skyColors,Pb=w.hemi.groundColors,R=w.hemi.positions,
O=w.area.colors,T=w.area.positions,Ca=w.area.normals,aa=w.area.rights,$=w.area.ups,Wa=w.area.sizes,da=w.area.attenuations,ob=w.area.textures,na=0,N=0,Ba=0,pa=0,ta=0,ia=0,Ea=0,ja=0,K=0,ca=0,ga=0,V=0,Aa=0,xa=0,Q=0;k=0;for(p=b.length;k<p;k++)m=b[k],m.onlyShadow||(t=m.color,u=m.intensity,x=m.distance,m instanceof THREE.AmbientLight?m.visible&&(M.gammaInput?(q+=t.r*t.r,s+=t.g*t.g,r+=t.b*t.b):(q+=t.r,s+=t.g,r+=t.b)):m instanceof THREE.DirectionalLight?(ia+=1,m.visible&&(hb.copy(m.matrixWorld.getPosition()),
hb.subSelf(m.target.matrixWorld.getPosition()),hb.normalize(),0===hb.x&&0===hb.y&&0===hb.z||(ga=3*na,D[ga]=hb.x,D[ga+1]=hb.y,D[ga+2]=hb.z,M.gammaInput?A(y,ga,t,u*u):G(y,ga,t,u),na+=1))):m instanceof THREE.PointLight?(Ea+=1,m.visible&&(V=3*N,M.gammaInput?A(Mb,V,t,u*u):G(Mb,V,t,u),Ia=m.matrixWorld.getPosition(),Fa[V]=Ia.x,Fa[V+1]=Ia.y,Fa[V+2]=Ia.z,F[N]=x,N+=1)):m instanceof THREE.SpotLight?(ja+=1,m.visible&&(Aa=3*Ba,M.gammaInput?A(sb,Aa,t,u*u):G(sb,Aa,t,u),Ia=m.matrixWorld.getPosition(),H[Aa]=Ia.x,
H[Aa+1]=Ia.y,H[Aa+2]=Ia.z,J[Ba]=x,hb.copy(Ia),hb.subSelf(m.target.matrixWorld.getPosition()),hb.normalize(),I[Aa]=hb.x,I[Aa+1]=hb.y,I[Aa+2]=hb.z,P[Ba]=Math.cos(m.angle),Sb[Ba]=m.exponent,Ba+=1)):m instanceof THREE.HemisphereLight?(K+=1,m.visible&&(hb.copy(m.matrixWorld.getPosition()),hb.normalize(),0===hb.x&&0===hb.y&&0===hb.z||(xa=3*pa,R[xa]=hb.x,R[xa+1]=hb.y,R[xa+2]=hb.z,ya=m.color,v=m.groundColor,M.gammaInput?(Ha=u*u,A(S,xa,ya,Ha),A(Pb,xa,v,Ha)):(G(S,xa,ya,u),G(Pb,xa,v,u)),pa+=1))):m instanceof
THREE.AreaLight&&(ca+=1,m.visible&&(Q=3*ta,M.gammaInput?A(O,Q,t,u*u):G(O,Q,t,u),rb.copy(m.matrixWorld.getPosition()),a.matrixWorldInverse.multiplyVector3(rb),T[Q]=rb.x,T[Q+1]=rb.y,T[Q+2]=rb.z,hc.copy(m.normal),m.matrixWorld.rotateAxis(hc),a.matrixWorldInverse.rotateAxis(hc),Ca[Q]=hc.x,Ca[Q+1]=hc.y,Ca[Q+2]=hc.z,Nb.copy(m.right),m.matrixWorld.rotateAxis(Nb),a.matrixWorldInverse.rotateAxis(Nb),aa[Q]=Nb.x,aa[Q+1]=Nb.y,aa[Q+2]=Nb.z,ic.cross(Nb,hc),ic.normalize(),$[Q]=ic.x,$[Q+1]=ic.y,$[Q+2]=ic.z,ob[ta]=
m.texture,Wa[Q]=m.width,Wa[Q+1]=m.height,Wa[Q+2]=m.texture?1:0,da[Q]=m.constantAttenuation,da[Q+1]=m.linearAttenuation,da[Q+2]=m.quadraticAttenuation,ta+=1)));k=3*na;for(p=Math.max(y.length,3*ia);k<p;k++)y[k]=0;k=3*N;for(p=Math.max(Mb.length,3*Ea);k<p;k++)Mb[k]=0;k=3*Ba;for(p=Math.max(sb.length,3*ja);k<p;k++)sb[k]=0;k=3*pa;for(p=Math.max(S.length,3*K);k<p;k++)S[k]=0;k=3*pa;for(p=Math.max(Pb.length,3*K);k<p;k++)Pb[k]=0;k=3*ta;for(p=Math.max(O.length,3*ca);k<p;k++)O[k]=0;w.directional.length=na;w.point.length=
N;w.spot.length=Ba;w.hemi.length=pa;w.area.length=ta;w.ambient[0]=q;w.ambient[1]=s;w.ambient[2]=r;jc=!1}var fa=Tb;j.ambientLightColor.value=fa.ambient;j.directionalLightColor.value=fa.directional.colors;j.directionalLightDirection.value=fa.directional.positions;j.pointLightColor.value=fa.point.colors;j.pointLightPosition.value=fa.point.positions;j.pointLightDistance.value=fa.point.distances;j.spotLightColor.value=fa.spot.colors;j.spotLightPosition.value=fa.spot.positions;j.spotLightDistance.value=
fa.spot.distances;j.spotLightDirection.value=fa.spot.directions;j.spotLightAngleCos.value=fa.spot.anglesCos;j.spotLightExponent.value=fa.spot.exponents;j.hemisphereLightSkyColor.value=fa.hemi.skyColors;j.hemisphereLightGroundColor.value=fa.hemi.groundColors;j.hemisphereLightDirection.value=fa.hemi.positions;j.areaLightColor.value=fa.area.colors;j.areaLightPosition.value=fa.area.positions;j.areaLightNormal.value=fa.area.normals;j.areaLightRight.value=fa.area.rights;j.areaLightUp.value=fa.area.ups;
j.areaLightSize.value=fa.area.sizes;j.areaLightAttenuation.value=fa.area.attenuations;j.areaLightTexture.value=fa.area.textures}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){j.opacity.value=d.opacity;M.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);
d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var gb;d.map?gb=d.map:d.specularMap?gb=d.specularMap:d.normalMap?gb=d.normalMap:d.bumpMap&&(gb=d.bumpMap);if(void 0!==gb){var pb=gb.offset,wa=gb.repeat;j.offsetRepeat.value.set(pb.x,pb.y,wa.x,wa.y)}j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=
d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity,j.dashSize.value=d.dashSize,j.totalSize.value=d.dashSize+d.gapSize,j.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=d.opacity,j.size.value=d.size,j.scale.value=U.height/2,j.map.value=d.map):d instanceof
THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,M.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(M.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=
d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&j.shadowMatrix)for(var X=0,Y=0,Z=b.length;Y<Z;Y++){var qa=b[Y];if(qa.castShadow&&(qa instanceof THREE.SpotLight||qa instanceof THREE.DirectionalLight&&!qa.shadowCascade))j.shadowMap.value[X]=qa.shadowMap,j.shadowMapSize.value[X]=
qa.shadowMapSize,j.shadowMatrix.value[X]=qa.shadowMatrix,j.shadowDarkness.value[X]=qa.shadowDarkness,j.shadowBias.value[X]=qa.shadowBias,X++}var Xa=d.uniformsList,ua,sa,Pa,Ja,Ka,Ga,Oa,La,qb,Db,Qa;qb=0;for(Db=Xa.length;qb<Db;qb++)if(Ja=g.uniforms[Xa[qb][1]])if(ua=Xa[qb][0],Pa=ua.type,sa=ua.value,"i"===Pa)n.uniform1i(Ja,sa);else if("f"===Pa)n.uniform1f(Ja,sa);else if("v2"===Pa)n.uniform2f(Ja,sa.x,sa.y);else if("v3"===Pa)n.uniform3f(Ja,sa.x,sa.y,sa.z);else if("v4"===Pa)n.uniform4f(Ja,sa.x,sa.y,sa.z,
sa.w);else if("c"===Pa)n.uniform3f(Ja,sa.r,sa.g,sa.b);else if("iv1"===Pa)n.uniform1iv(Ja,sa);else if("iv"===Pa)n.uniform3iv(Ja,sa);else if("fv1"===Pa)n.uniform1fv(Ja,sa);else if("fv"===Pa)n.uniform3fv(Ja,sa);else if("v2v"===Pa){void 0===ua._array&&(ua._array=new Float32Array(2*sa.length));Oa=0;for(La=sa.length;Oa<La;Oa++)Qa=2*Oa,ua._array[Qa]=sa[Oa].x,ua._array[Qa+1]=sa[Oa].y;n.uniform2fv(Ja,ua._array)}else if("v3v"===Pa){void 0===ua._array&&(ua._array=new Float32Array(3*sa.length));Oa=0;for(La=sa.length;Oa<
La;Oa++)Qa=3*Oa,ua._array[Qa]=sa[Oa].x,ua._array[Qa+1]=sa[Oa].y,ua._array[Qa+2]=sa[Oa].z;n.uniform3fv(Ja,ua._array)}else if("v4v"===Pa){void 0===ua._array&&(ua._array=new Float32Array(4*sa.length));Oa=0;for(La=sa.length;Oa<La;Oa++)Qa=4*Oa,ua._array[Qa]=sa[Oa].x,ua._array[Qa+1]=sa[Oa].y,ua._array[Qa+2]=sa[Oa].z,ua._array[Qa+3]=sa[Oa].w;n.uniform4fv(Ja,ua._array)}else if("m4"===Pa)void 0===ua._array&&(ua._array=new Float32Array(16)),sa.flattenToArray(ua._array),n.uniformMatrix4fv(Ja,!1,ua._array);else if("m4v"===
Pa){void 0===ua._array&&(ua._array=new Float32Array(16*sa.length));Oa=0;for(La=sa.length;Oa<La;Oa++)sa[Oa].flattenToArrayOffset(ua._array,16*Oa);n.uniformMatrix4fv(Ja,!1,ua._array)}else if("t"===Pa){if(Ka=sa,Ga=z(),n.uniform1i(Ja,Ga),Ka)if(Ka.image instanceof Array&&6===Ka.image.length){var ib=Ka,ub=Ga;if(6===ib.image.length)if(ib.needsUpdate){ib.image.__webglTextureCube||(ib.image.__webglTextureCube=n.createTexture(),M.info.memory.textures++);n.activeTexture(n.TEXTURE0+ub);n.bindTexture(n.TEXTURE_CUBE_MAP,
ib.image.__webglTextureCube);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,ib.flipY);for(var bb=ib instanceof THREE.CompressedTexture,lb=[],tb=0;6>tb;tb++){var vb=lb,Eb=tb,Fb;if(M.autoScaleCubemaps&&!bb){var za=ib.image[tb],wb=ba;if(za.width<=wb&&za.height<=wb)Fb=za;else{var pd=Math.max(za.width,za.height),qd=Math.floor(za.width*wb/pd),kc=Math.floor(za.height*wb/pd),jb=document.createElement("canvas");jb.width=qd;jb.height=kc;jb.getContext("2d").drawImage(za,0,0,za.width,za.height,0,0,qd,kc);Fb=jb}}else Fb=
ib.image[tb];vb[Eb]=Fb}var Qb=lb[0],mb=0===(Qb.width&Qb.width-1)&&0===(Qb.height&Qb.height-1),kb=L(ib.format),bc=L(ib.type);E(n.TEXTURE_CUBE_MAP,ib,mb);for(tb=0;6>tb;tb++)if(bb)for(var Rb,Ya=lb[tb].mipmaps,Za=0,$b=Ya.length;Za<$b;Za++)Rb=Ya[Za],n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+tb,Za,kb,Rb.width,Rb.height,0,Rb.data);else n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+tb,0,kb,kb,bc,lb[tb]);ib.generateMipmaps&&mb&&n.generateMipmap(n.TEXTURE_CUBE_MAP);ib.needsUpdate=!1;if(ib.onUpdate)ib.onUpdate()}else n.activeTexture(n.TEXTURE0+
ub),n.bindTexture(n.TEXTURE_CUBE_MAP,ib.image.__webglTextureCube)}else if(Ka instanceof THREE.WebGLRenderTargetCube){var ac=Ka;n.activeTexture(n.TEXTURE0+Ga);n.bindTexture(n.TEXTURE_CUBE_MAP,ac.__webglTexture)}else M.setTexture(Ka,Ga)}else if("tv"===Pa){void 0===ua._array&&(ua._array=[]);Oa=0;for(La=ua.value.length;Oa<La;Oa++)ua._array[Oa]=z();n.uniform1iv(Ja,ua._array);Oa=0;for(La=ua.value.length;Oa<La;Oa++)Ka=ua.value[Oa],Ga=ua._array[Oa],Ka&&M.setTexture(Ka,Ga)}if((d instanceof THREE.ShaderMaterial||
d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition){var Hb=a.matrixWorld.getPosition();n.uniform3f(h.cameraPosition,Hb.x,Hb.y,Hb.z)}(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&n.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)}n.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);h.normalMatrix&&n.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);
null!==h.modelMatrix&&n.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements);return g}function z(){var a=ra;a>=Qa&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Qa);ra+=1;return a}function y(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function A(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function G(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;
a[b+2]=c.b*d}function H(a,b,c){Ja!==a&&(a?n.enable(n.POLYGON_OFFSET_FILL):n.disable(n.POLYGON_OFFSET_FILL),Ja=a);if(a&&(Ga!==b||Ba!==c))n.polygonOffset(b,c),Ga=b,Ba=c}function J(a){a=a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function T(a,b){var c;"fragment"===a?c=n.createShader(n.FRAGMENT_SHADER):"vertex"===a&&(c=n.createShader(n.VERTEX_SHADER));n.shaderSource(c,b);n.compileShader(c);return!n.getShaderParameter(c,n.COMPILE_STATUS)?(console.error(n.getShaderInfoLog(c)),
console.error(J(b)),null):c}function E(a,b,c){c?(n.texParameteri(a,n.TEXTURE_WRAP_S,L(b.wrapS)),n.texParameteri(a,n.TEXTURE_WRAP_T,L(b.wrapT)),n.texParameteri(a,n.TEXTURE_MAG_FILTER,L(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,L(b.minFilter))):(n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_MAG_FILTER,F(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,F(b.minFilter)));if(Pa&&b.type!==THREE.FloatType&&
(1<b.anisotropy||b.__oldAnisotropy))n.texParameterf(a,Pa.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,ja)),b.__oldAnisotropy=b.anisotropy}function O(a,b){n.bindRenderbuffer(n.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,
n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,b.width,b.height)}function F(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?n.NEAREST:n.LINEAR}function L(a){if(a===THREE.RepeatWrapping)return n.REPEAT;if(a===THREE.ClampToEdgeWrapping)return n.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return n.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return n.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return n.NEAREST_MIPMAP_NEAREST;
if(a===THREE.NearestMipMapLinearFilter)return n.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return n.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return n.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return n.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return n.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return n.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return n.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return n.UNSIGNED_SHORT_5_6_5;
if(a===THREE.ByteType)return n.BYTE;if(a===THREE.ShortType)return n.SHORT;if(a===THREE.UnsignedShortType)return n.UNSIGNED_SHORT;if(a===THREE.IntType)return n.INT;if(a===THREE.UnsignedIntType)return n.UNSIGNED_INT;if(a===THREE.FloatType)return n.FLOAT;if(a===THREE.AlphaFormat)return n.ALPHA;if(a===THREE.RGBFormat)return n.RGB;if(a===THREE.RGBAFormat)return n.RGBA;if(a===THREE.LuminanceFormat)return n.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return n.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return n.FUNC_ADD;
if(a===THREE.SubtractEquation)return n.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return n.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return n.ZERO;if(a===THREE.OneFactor)return n.ONE;if(a===THREE.SrcColorFactor)return n.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return n.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return n.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return n.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return n.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return n.ONE_MINUS_DST_ALPHA;
if(a===THREE.DstColorFactor)return n.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return n.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return n.SRC_ALPHA_SATURATE;if(void 0!==ub){if(a===THREE.RGB_S3TC_DXT1_Format)return ub.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return ub.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return ub.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return ub.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function P(a,
b){var c=n.createFramebuffer(),d=n.createTexture();n.bindTexture(n.TEXTURE_2D,d);n.texImage2D(n.TEXTURE_2D,0,a,2,2,0,a,b,null);n.bindFramebuffer(n.FRAMEBUFFER,c);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,d,0);c=n.checkFramebufferStatus(n.FRAMEBUFFER);n.bindFramebuffer(n.FRAMEBUFFER,null);n.bindTexture(n.TEXTURE_2D,null);return c===n.FRAMEBUFFER_COMPLETE}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var U=void 0!==a.canvas?a.canvas:document.createElement("canvas"),
S=void 0!==a.precision?a.precision:"highp",da=void 0!==a.alpha?a.alpha:!0,R=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,I=void 0!==a.antialias?a.antialias:!1,N=void 0!==a.stencil?a.stencil:!0,wa=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,Q=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),Aa=void 0!==a.clearAlpha?a.clearAlpha:0;this.domElement=U;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?
window.devicePixelRatio:1;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=
[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var M=this,aa=[],na=0,ea=null,pa=null,W=-1,$=null,oa=null,Ea=0,ra=0,fa=-1,ia=-1,Fa=-1,Wa=-1,Ca=-1,ob=-1,gb=-1,Xa=-1,Ja=null,Ga=null,Ba=null,xa=null,pb=0,ta=0,Ka=0,La=0,ya=0,Ha=0,Ia={},Mb=new THREE.Frustum,sb=new THREE.Matrix4,Pb=new THREE.Matrix4,Sb=new THREE.Vector3,rb=new THREE.Vector3,hb=new THREE.Vector3,hc=new THREE.Vector3,Nb=new THREE.Vector3,ic=new THREE.Vector3,
jc=!0,Tb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]},area:{length:0,colors:[],positions:[],normals:[],rights:[],ups:[],sizes:[],attenuations:[],textures:[]}},n,qb,Fb,Qb,Pa,ub;try{if(!(n=U.getContext("experimental-webgl",{alpha:da,premultipliedAlpha:R,antialias:I,stencil:N,preserveDrawingBuffer:wa})))throw"Error creating WebGL context.";
}catch(Db){console.error(Db)}qb=n.getExtension("OES_texture_float");Fb=n.getExtension("OES_texture_float_linear");Qb=n.getExtension("OES_standard_derivatives");Pa=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");ub=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");qb||console.log("THREE.WebGLRenderer: Float textures not supported.");
Fb||console.log("THREE.WebGLRenderer: Linear filtering for float textures not supported.");Qb||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Pa||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");ub||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");n.clearColor(0,0,0,1);n.clearDepth(1);n.clearStencil(0);n.enable(n.DEPTH_TEST);n.depthFunc(n.LEQUAL);n.frontFace(n.CCW);n.cullFace(n.BACK);n.enable(n.CULL_FACE);n.enable(n.BLEND);
n.blendEquation(n.FUNC_ADD);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.clearColor(Q.r,Q.g,Q.b,Aa);this.context=n;var Qa=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),nc=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS);n.getParameter(n.MAX_TEXTURE_SIZE);var ba=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),ja=Pa?n.getParameter(Pa.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,ga=0<nc,Ra=ga&&qb;ub&&n.getParameter(n.COMPRESSED_TEXTURE_FORMATS);var vb=n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT),Eb=n.getShaderPrecisionFormat(n.VERTEX_SHADER,
n.MEDIUM_FLOAT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.LOW_FLOAT);var bb=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT),lb=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.LOW_FLOAT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_INT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_INT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.LOW_INT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_INT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,
n.MEDIUM_INT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.LOW_INT);var wb=qb&&P(n.RGB,n.FLOAT),Zb=qb&&P(n.RGBA,n.FLOAT),ad=qb&&P(n.LUMINANCE,n.FLOAT),bd=qb&&P(n.ALPHA,n.FLOAT),cd=qb&&P(n.LUMINANCE_ALPHA,n.FLOAT),dd=0<vb.precision&&0<bb.precision,Hc=0<Eb.precision&&0<lb.precision;"highp"===S&&!dd&&(Hc?(S="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(S="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===S&&!Hc&&(S="lowp",
console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return n};this.supportsVertexTextures=function(){return ga};this.supportsLuminanceFloatRenderTarget=function(){return ad};this.supportsAlphaFloatRenderTarget=function(){return bd};this.supportsLuminanceAlphaFloatRenderTarget=function(){return cd};this.supportsRGBFloatRenderTarget=function(){return wb};this.supportsRGBAFloatRenderTarget=function(){return Zb};this.getMaxAnisotropy=function(){return ja};this.getPrecision=
function(){return S};this.setSize=function(a,b){U.width=a*this.devicePixelRatio;U.height=b*this.devicePixelRatio;U.style.width=a+"px";U.style.height=b+"px";this.setViewport(0,0,U.width,U.height)};this.setViewport=function(a,b,c,d){pb=void 0!==a?a:0;ta=void 0!==b?b:0;Ka=void 0!==c?c:U.width;La=void 0!==d?d:U.height;n.viewport(pb,ta,Ka,La)};this.setScissor=function(a,b,c,d){n.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)};this.setClearColorHex=
function(a,b){Q.setHex(a);Aa=b;n.clearColor(Q.r,Q.g,Q.b,Aa)};this.setClearColor=function(a,b){Q.copy(a);Aa=b;n.clearColor(Q.r,Q.g,Q.b,Aa)};this.getClearColor=function(){return Q};this.getClearAlpha=function(){return Aa};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=n.COLOR_BUFFER_BIT;if(void 0===b||b)d|=n.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=n.STENCIL_BUFFER_BIT;n.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);
this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=function(a,b){ea=null;W=$=Xa=gb=Fa=-1;jc=!0;ia=fa=-1;this.shadowMapPlugin.update(a,b)};var od=function(a){a=a.target;a.removeEventListener("dispose",od);a.__webglInit=void 0;void 0!==a.__webglVertexBuffer&&n.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&n.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&n.deleteBuffer(a.__webglTangentBuffer);
void 0!==a.__webglColorBuffer&&n.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&n.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&n.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&n.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&n.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&n.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&n.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&
n.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.geometryGroups)for(var c in a.geometryGroups){var d=a.geometryGroups[c];if(void 0!==d.numMorphTargets)for(var e=0,f=d.numMorphTargets;e<f;e++)n.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void 0!==d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)n.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d)}b(a);M.info.memory.geometries--},yc=function(a){a=a.target;a.removeEventListener("dispose",yc);a.image&&a.image.__webglTextureCube?n.deleteTexture(a.image.__webglTextureCube):
a.__webglInit&&(a.__webglInit=!1,n.deleteTexture(a.__webglTexture));M.info.memory.textures--},Ic=function(a){a=a.target;a.removeEventListener("dispose",Ic);if(a&&a.__webglTexture)if(n.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)n.deleteFramebuffer(a.__webglFramebuffer[b]),n.deleteRenderbuffer(a.__webglRenderbuffer[b]);else n.deleteFramebuffer(a.__webglFramebuffer),n.deleteRenderbuffer(a.__webglRenderbuffer);M.info.memory.textures--},Jc=function(a){a=
a.target;a.removeEventListener("dispose",Jc);Kc(a)},Kc=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=aa.length;a<c;a++)if(d=aa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=aa.length;a<c;a++)d=aa[a],d.program!==b&&e.push(d);aa=e;n.deleteProgram(b);M.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=n.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&
(a.__webglNormalBuffer=n.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=n.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=n.createBuffer());a.hasPositions&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,a.positionArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.position),n.vertexAttribPointer(b.attributes.position,3,n.FLOAT,!1,0,0));if(a.hasNormals){n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===
THREE.FlatShading){var d,e,f,g,h,j,l,k,p,m,q,s=3*a.count;for(q=0;q<s;q+=9)m=a.normalArray,d=m[q],e=m[q+1],f=m[q+2],g=m[q+3],j=m[q+4],k=m[q+5],h=m[q+6],l=m[q+7],p=m[q+8],d=(d+g+h)/3,e=(e+j+l)/3,f=(f+k+p)/3,m[q]=d,m[q+1]=e,m[q+2]=f,m[q+3]=d,m[q+4]=e,m[q+5]=f,m[q+6]=d,m[q+7]=e,m[q+8]=f}n.bufferData(n.ARRAY_BUFFER,a.normalArray,n.DYNAMIC_DRAW);n.enableVertexAttribArray(b.attributes.normal);n.vertexAttribPointer(b.attributes.normal,3,n.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUvBuffer),
n.bufferData(n.ARRAY_BUFFER,a.uvArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.uv),n.vertexAttribPointer(b.attributes.uv,2,n.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,a.colorArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.color),n.vertexAttribPointer(b.attributes.color,3,n.FLOAT,!1,0,0));n.drawArrays(n.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,
e,f){if(!1!==d.visible)if(c=D(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==$&&($=d,b=!0),b&&l(),f instanceof THREE.Mesh)if(f=e.attributes.index){d=e.offsets;1<d.length&&(b=!0);c=0;for(var g=d.length;c<g;c++){var h=d[c].index;if(b){var j=e.attributes.position,p=j.itemSize;n.bindBuffer(n.ARRAY_BUFFER,j.buffer);k(a.position);n.vertexAttribPointer(a.position,p,n.FLOAT,!1,0,4*h*p);p=e.attributes.normal;if(0<=a.normal&&p){var m=p.itemSize;n.bindBuffer(n.ARRAY_BUFFER,p.buffer);
k(a.normal);n.vertexAttribPointer(a.normal,m,n.FLOAT,!1,0,4*h*m)}p=e.attributes.uv;0<=a.uv&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.uv),n.vertexAttribPointer(a.uv,m,n.FLOAT,!1,0,4*h*m));p=e.attributes.color;0<=a.color&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,4*h*m));p=e.attributes.tangent;0<=a.tangent&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.tangent),n.vertexAttribPointer(a.tangent,m,n.FLOAT,
!1,0,4*h*m));n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,f.buffer)}n.drawElements(n.TRIANGLES,d[c].count,n.UNSIGNED_SHORT,2*d[c].start);M.info.render.calls++;M.info.render.vertices+=d[c].count;M.info.render.faces+=d[c].count/3}}else b&&(j=e.attributes.position,p=j.itemSize,n.bindBuffer(n.ARRAY_BUFFER,j.buffer),k(a.position),n.vertexAttribPointer(a.position,p,n.FLOAT,!1,0,0),p=e.attributes.normal,0<=a.normal&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.normal),n.vertexAttribPointer(a.normal,
m,n.FLOAT,!1,0,0)),p=e.attributes.uv,0<=a.uv&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.uv),n.vertexAttribPointer(a.uv,m,n.FLOAT,!1,0,0)),p=e.attributes.color,0<=a.color&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,0)),p=e.attributes.tangent,0<=a.tangent&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.tangent),n.vertexAttribPointer(a.tangent,m,n.FLOAT,!1,0,0))),n.drawArrays(n.TRIANGLES,0,j.numItems/3),
M.info.render.calls++,M.info.render.vertices+=j.numItems/3,M.info.render.faces+=j.numItems/3/3;else f instanceof THREE.ParticleSystem&&b&&(j=e.attributes.position,p=j.itemSize,n.bindBuffer(n.ARRAY_BUFFER,j.buffer),k(a.position),n.vertexAttribPointer(a.position,p,n.FLOAT,!1,0,0),p=e.attributes.color,0<=a.color&&p&&(m=p.itemSize,n.bindBuffer(n.ARRAY_BUFFER,p.buffer),k(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,0)),n.drawArrays(n.POINTS,0,j.numItems/3),M.info.render.calls++,M.info.render.points+=
j.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,h;c=D(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==$&&($=c,a=!0);a&&l();if(!d.morphTargets&&0<=b.position)a&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),k(b.position),n.vertexAttribPointer(b.position,3,n.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),
k(c.position),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0)):0<=c.position&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),k(c.position),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var j=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;j<d.numSupportedMorphTargets&&j<h.length;)0<=c["morphTarget"+j]&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[j]]),k(c["morphTarget"+j]),n.vertexAttribPointer(c["morphTarget"+j],3,n.FLOAT,
!1,0,0)),0<=c["morphNormal"+j]&&d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[j]]),k(c["morphNormal"+j]),n.vertexAttribPointer(c["morphNormal"+j],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[h[j]],j++}else{h=[];g=f.morphTargetInfluences;var m,q=g.length;for(m=0;m<q;m++)j=g[m],0<j&&h.push([j,m]);h.length>d.numSupportedMorphTargets?(h.sort(p),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(p):0===h.length&&h.push([0,0]);for(j=0;j<
d.numSupportedMorphTargets;)h[j]?(m=h[j][1],0<=c["morphTarget"+j]&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),k(c["morphTarget"+j]),n.vertexAttribPointer(c["morphTarget"+j],3,n.FLOAT,!1,0,0)),0<=c["morphNormal"+j]&&d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),k(c["morphNormal"+j]),n.vertexAttribPointer(c["morphNormal"+j],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[m]):f.__webglMorphTargetInfluences[j]=0,j++}null!==d.program.uniforms.morphTargetInfluences&&
n.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(n.bindBuffer(n.ARRAY_BUFFER,c.buffer),k(b[c.buffer.belongsToAttribute]),n.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,n.FLOAT,!1,0,0))}0<=b.color&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglColorBuffer),k(b.color),n.vertexAttribPointer(b.color,
3,n.FLOAT,!1,0,0));0<=b.normal&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglNormalBuffer),k(b.normal),n.vertexAttribPointer(b.normal,3,n.FLOAT,!1,0,0));0<=b.tangent&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglTangentBuffer),k(b.tangent),n.vertexAttribPointer(b.tangent,4,n.FLOAT,!1,0,0));0<=b.uv&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUVBuffer),k(b.uv),n.vertexAttribPointer(b.uv,2,n.FLOAT,!1,0,0));0<=b.uv2&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUV2Buffer),k(b.uv2),n.vertexAttribPointer(b.uv2,2,n.FLOAT,!1,0,0));
d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),k(b.skinIndex),n.vertexAttribPointer(b.skinIndex,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),k(b.skinWeight),n.vertexAttribPointer(b.skinWeight,4,n.FLOAT,!1,0,0));0<=b.lineDistance&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglLineDistanceBuffer),k(b.lineDistance),n.vertexAttribPointer(b.lineDistance,1,n.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,
d!==xa&&(n.lineWidth(d),xa=d),a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),n.drawElements(n.LINES,e.__webglLineCount,n.UNSIGNED_SHORT,0)):(a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),n.drawElements(n.TRIANGLES,e.__webglFaceCount,n.UNSIGNED_SHORT,0)),M.info.render.calls++,M.info.render.vertices+=e.__webglFaceCount,M.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?n.LINE_STRIP:n.LINES,d=d.linewidth,d!==xa&&(n.lineWidth(d),xa=
d),n.drawArrays(f,0,e.__webglLineCount),M.info.render.calls++):f instanceof THREE.ParticleSystem?(n.drawArrays(n.POINTS,0,e.__webglParticleCount),M.info.render.calls++,M.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(n.drawArrays(n.TRIANGLE_STRIP,0,e.__webglVertexCount),M.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,j=a.__lights,
l=a.fog;W=-1;jc=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);sb.multiply(b.projectionMatrix,b.matrixWorldInverse);Mb.setFromMatrix(sb);this.autoUpdateObjects&&this.initWebGLObjects(a);s(this.renderPluginsPre,a,b);M.info.render.calls=0;M.info.render.vertices=0;M.info.render.faces=0;M.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);
h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||Mb.contains(g))){y(g,b);var k=f,p=k.buffer,t=void 0,ya=t=void 0,ya=k.object.material;if(ya instanceof THREE.MeshFaceMaterial)t=p.materialIndex,t=ya.materials[t],t.transparent?(k.transparent=t,k.opaque=null):(k.opaque=t,k.transparent=null);else if(t=ya)t.transparent?(k.transparent=t,k.opaque=null):(k.opaque=t,k.transparent=null);
f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(Sb.copy(g.matrixWorld.getPosition()),sb.multiplyVector3(Sb),f.z=Sb.z),f.id=g.id)}this.sortObjects&&h.sort(m);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(y(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),
this.setDepthWrite(d.depthWrite),H(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),r(a.__webglObjects,!1,"",b,j,l,!0,d),q(a.__webglObjectsImmediate,"",b,j,l,!1,d)):(d=null,this.setBlending(THREE.NoBlending),r(a.__webglObjects,!0,"opaque",b,j,l,!1,d),q(a.__webglObjectsImmediate,"opaque",b,j,l,!1,d),r(a.__webglObjects,!1,"transparent",b,j,l,!0,d),q(a.__webglObjectsImmediate,"transparent",b,j,l,!0,d));s(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&
c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(n.bindTexture(n.TEXTURE_CUBE_MAP,c.__webglTexture),n.generateMipmap(n.TEXTURE_CUBE_MAP),n.bindTexture(n.TEXTURE_CUBE_MAP,null)):(n.bindTexture(n.TEXTURE_2D,c.__webglTexture),n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=D(a,b,c,d,e);$=-1;M.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,
n,Mb):e.render(function(a){M.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var b=a.__objectsAdded[0],l=a,k=void 0,m=void 0,q=void 0,s=void 0;if(!b.__webglInit)if(b.__webglInit=!0,b._modelViewMatrix=new THREE.Matrix4,b._normalMatrix=new THREE.Matrix3,void 0!==b.geometry&&void 0===b.geometry.__webglInit&&(b.geometry.__webglInit=!0,b.geometry.addEventListener("dispose",
od)),b instanceof THREE.Mesh)if(m=b.geometry,q=b.material,m instanceof THREE.Geometry){if(void 0===m.geometryGroups){var r=m,ya=void 0,Ia=void 0,Ha=void 0,y=void 0,z=void 0,A=void 0,D={},Mb=r.morphTargets.length,Fa=r.morphNormals.length,G=q instanceof THREE.MeshFaceMaterial;r.geometryGroups={};ya=0;for(Ia=r.faces.length;ya<Ia;ya++)Ha=r.faces[ya],y=G?Ha.materialIndex:0,void 0===D[y]&&(D[y]={hash:y,counter:0}),A=D[y].hash+"_"+D[y].counter,void 0===r.geometryGroups[A]&&(r.geometryGroups[A]={faces3:[],
faces4:[],materialIndex:y,vertices:0,numMorphTargets:Mb,numMorphNormals:Fa}),z=Ha instanceof THREE.Face3?3:4,65535<r.geometryGroups[A].vertices+z&&(D[y].counter+=1,A=D[y].hash+"_"+D[y].counter,void 0===r.geometryGroups[A]&&(r.geometryGroups[A]={faces3:[],faces4:[],materialIndex:y,vertices:0,numMorphTargets:Mb,numMorphNormals:Fa})),Ha instanceof THREE.Face3?r.geometryGroups[A].faces3.push(ya):r.geometryGroups[A].faces4.push(ya),r.geometryGroups[A].vertices+=z;r.geometryGroupsList=[];var E=void 0;for(E in r.geometryGroups)r.geometryGroups[E].id=
Ea++,r.geometryGroupsList.push(r.geometryGroups[E])}for(k in m.geometryGroups)if(s=m.geometryGroups[k],!s.__webglVertexBuffer){var F=s;F.__webglVertexBuffer=n.createBuffer();F.__webglNormalBuffer=n.createBuffer();F.__webglTangentBuffer=n.createBuffer();F.__webglColorBuffer=n.createBuffer();F.__webglUVBuffer=n.createBuffer();F.__webglUV2Buffer=n.createBuffer();F.__webglSkinIndicesBuffer=n.createBuffer();F.__webglSkinWeightsBuffer=n.createBuffer();F.__webglFaceBuffer=n.createBuffer();F.__webglLineBuffer=
n.createBuffer();var H=void 0,J=void 0;if(F.numMorphTargets){F.__webglMorphTargetsBuffers=[];H=0;for(J=F.numMorphTargets;H<J;H++)F.__webglMorphTargetsBuffers.push(n.createBuffer())}if(F.numMorphNormals){F.__webglMorphNormalsBuffers=[];H=0;for(J=F.numMorphNormals;H<J;H++)F.__webglMorphNormalsBuffers.push(n.createBuffer())}M.info.memory.geometries++;d(s,b);m.verticesNeedUpdate=!0;m.morphTargetsNeedUpdate=!0;m.elementsNeedUpdate=!0;m.uvsNeedUpdate=!0;m.normalsNeedUpdate=!0;m.tangentsNeedUpdate=!0;m.colorsNeedUpdate=
!0}}else m instanceof THREE.BufferGeometry&&h(m);else if(b instanceof THREE.Ribbon){if(m=b.geometry,!m.__webglVertexBuffer){var I=m;I.__webglVertexBuffer=n.createBuffer();I.__webglColorBuffer=n.createBuffer();I.__webglNormalBuffer=n.createBuffer();M.info.memory.geometries++;var L=m,P=b,S=L.vertices.length;L.__vertexArray=new Float32Array(3*S);L.__colorArray=new Float32Array(3*S);L.__normalArray=new Float32Array(3*S);L.__webglVertexCount=S;c(L,P);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0;m.normalsNeedUpdate=
!0}}else if(b instanceof THREE.Line){if(m=b.geometry,!m.__webglVertexBuffer){var R=m;R.__webglVertexBuffer=n.createBuffer();R.__webglColorBuffer=n.createBuffer();R.__webglLineDistanceBuffer=n.createBuffer();M.info.memory.geometries++;var O=m,T=b,hb=O.vertices.length;O.__vertexArray=new Float32Array(3*hb);O.__colorArray=new Float32Array(3*hb);O.__lineDistanceArray=new Float32Array(1*hb);O.__webglLineCount=hb;c(O,T);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0;m.lineDistancesNeedUpdate=!0}}else if(b instanceof
THREE.ParticleSystem&&(m=b.geometry,!m.__webglVertexBuffer))if(m instanceof THREE.Geometry){var U=m;U.__webglVertexBuffer=n.createBuffer();U.__webglColorBuffer=n.createBuffer();M.info.memory.geometries++;var Ca=m,W=b,aa=Ca.vertices.length;Ca.__vertexArray=new Float32Array(3*aa);Ca.__colorArray=new Float32Array(3*aa);Ca.__sortArray=[];Ca.__webglParticleCount=aa;c(Ca,W);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}else m instanceof THREE.BufferGeometry&&h(m);if(!b.__webglActive){if(b instanceof THREE.Mesh)if(m=
b.geometry,m instanceof THREE.BufferGeometry)v(l.__webglObjects,m,b);else for(k in m.geometryGroups)s=m.geometryGroups[k],v(l.__webglObjects,s,b);else b instanceof THREE.Ribbon||b instanceof THREE.Line||b instanceof THREE.ParticleSystem?(m=b.geometry,v(l.__webglObjects,m,b)):b instanceof THREE.ImmediateRenderObject||b.immediateRenderCallback?l.__webglObjectsImmediate.push({object:b,opaque:null,transparent:null}):b instanceof THREE.Sprite?l.__webglSprites.push(b):b instanceof THREE.LensFlare&&l.__webglFlares.push(b);
b.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var $=a.__objectsRemoved[0],Wa=a;$ instanceof THREE.Mesh||$ instanceof THREE.ParticleSystem||$ instanceof THREE.Ribbon||$ instanceof THREE.Line?x(Wa.__webglObjects,$):$ instanceof THREE.Sprite?t(Wa.__webglSprites,$):$ instanceof THREE.LensFlare?t(Wa.__webglFlares,$):($ instanceof THREE.ImmediateRenderObject||$.immediateRenderCallback)&&x(Wa.__webglObjectsImmediate,$);$.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var rb=
0,hc=a.__webglObjects.length;rb<hc;rb++){var da=a.__webglObjects[rb].object,N=da.geometry,na=void 0,ob=void 0,ea=void 0;if(da instanceof THREE.Mesh)if(N instanceof THREE.BufferGeometry)(N.verticesNeedUpdate||N.elementsNeedUpdate||N.uvsNeedUpdate||N.normalsNeedUpdate||N.colorsNeedUpdate||N.tangentsNeedUpdate)&&j(N,n.DYNAMIC_DRAW,!N.dynamic),N.verticesNeedUpdate=!1,N.elementsNeedUpdate=!1,N.uvsNeedUpdate=!1,N.normalsNeedUpdate=!1,N.colorsNeedUpdate=!1,N.tangentsNeedUpdate=!1;else{for(var Ba=0,fa=N.geometryGroupsList.length;Ba<
fa;Ba++)if(na=N.geometryGroupsList[Ba],ea=e(da,na),N.buffersNeedUpdate&&d(na,da),ob=ea.attributes&&u(ea),N.verticesNeedUpdate||N.morphTargetsNeedUpdate||N.elementsNeedUpdate||N.uvsNeedUpdate||N.normalsNeedUpdate||N.colorsNeedUpdate||N.tangentsNeedUpdate||ob){var Q=na,oa=da,ba=n.DYNAMIC_DRAW,pa=!N.dynamic,Nb=ea;if(Q.__inittedArrays){var ta=f(Nb),ic=Nb.vertexColors?Nb.vertexColors:!1,jc=g(Nb),Aa=ta===THREE.SmoothShading,K=void 0,ca=void 0,ia=void 0,V=void 0,xa=void 0,Pa=void 0,ga=void 0,gb=void 0,ja=
void 0,Ja=void 0,ra=void 0,X=void 0,Y=void 0,Z=void 0,qa=void 0,pb=void 0,ua=void 0,sa=void 0,wa=void 0,Ka=void 0,Xa=void 0,Tb=void 0,La=void 0,Ga=void 0,Qa=void 0,qb=void 0,Db=void 0,ib=void 0,Ra=void 0,ub=void 0,lb=void 0,tb=void 0,bb=void 0,Fb=void 0,vb=void 0,za=void 0,Eb=void 0,wb=void 0,Qb=void 0,kc=void 0,jb=void 0,nc=void 0,mb=void 0,kb=void 0,bc=void 0,Rb=void 0,Ya=0,Za=0,$b=0,ac=0,Hb=0,Bb=0,Ua=0,Gb=0,nb=0,ka=0,va=0,C=0,Sa=void 0,xb=Q.__vertexArray,Zb=Q.__uvArray,zc=Q.__uv2Array,Ub=Q.__normalArray,
cb=Q.__tangentArray,yb=Q.__colorArray,db=Q.__skinIndexArray,eb=Q.__skinWeightArray,ed=Q.__morphTargetsArrays,fd=Q.__morphNormalsArrays,gd=Q.__webglCustomAttributesList,B=void 0,cc=Q.__faceArray,Ob=Q.__lineArray,Ib=oa.geometry,Hc=Ib.elementsNeedUpdate,yc=Ib.uvsNeedUpdate,Ic=Ib.normalsNeedUpdate,Jc=Ib.tangentsNeedUpdate,Kc=Ib.colorsNeedUpdate,ad=Ib.morphTargetsNeedUpdate,rc=Ib.vertices,Ma=Q.faces3,Na=Q.faces4,Cb=Ib.faces,hd=Ib.faceVertexUvs[0],id=Ib.faceVertexUvs[1],sc=Ib.skinIndices,oc=Ib.skinWeights,
pc=Ib.morphTargets,Lc=Ib.morphNormals;if(Ib.verticesNeedUpdate){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],X=rc[V.a],Y=rc[V.b],Z=rc[V.c],xb[Za]=X.x,xb[Za+1]=X.y,xb[Za+2]=X.z,xb[Za+3]=Y.x,xb[Za+4]=Y.y,xb[Za+5]=Y.z,xb[Za+6]=Z.x,xb[Za+7]=Z.y,xb[Za+8]=Z.z,Za+=9;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],X=rc[V.a],Y=rc[V.b],Z=rc[V.c],qa=rc[V.d],xb[Za]=X.x,xb[Za+1]=X.y,xb[Za+2]=X.z,xb[Za+3]=Y.x,xb[Za+4]=Y.y,xb[Za+5]=Y.z,xb[Za+6]=Z.x,xb[Za+7]=Z.y,xb[Za+8]=Z.z,xb[Za+9]=qa.x,xb[Za+10]=qa.y,xb[Za+11]=qa.z,Za+=
12;n.bindBuffer(n.ARRAY_BUFFER,Q.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,xb,ba)}if(ad){jb=0;for(nc=pc.length;jb<nc;jb++){K=va=0;for(ca=Ma.length;K<ca;K++)bc=Ma[K],V=Cb[bc],X=pc[jb].vertices[V.a],Y=pc[jb].vertices[V.b],Z=pc[jb].vertices[V.c],mb=ed[jb],mb[va]=X.x,mb[va+1]=X.y,mb[va+2]=X.z,mb[va+3]=Y.x,mb[va+4]=Y.y,mb[va+5]=Y.z,mb[va+6]=Z.x,mb[va+7]=Z.y,mb[va+8]=Z.z,Nb.morphNormals&&(Aa?(Rb=Lc[jb].vertexNormals[bc],Ka=Rb.a,Xa=Rb.b,Tb=Rb.c):Tb=Xa=Ka=Lc[jb].faceNormals[bc],kb=fd[jb],kb[va]=Ka.x,
kb[va+1]=Ka.y,kb[va+2]=Ka.z,kb[va+3]=Xa.x,kb[va+4]=Xa.y,kb[va+5]=Xa.z,kb[va+6]=Tb.x,kb[va+7]=Tb.y,kb[va+8]=Tb.z),va+=9;K=0;for(ca=Na.length;K<ca;K++)bc=Na[K],V=Cb[bc],X=pc[jb].vertices[V.a],Y=pc[jb].vertices[V.b],Z=pc[jb].vertices[V.c],qa=pc[jb].vertices[V.d],mb=ed[jb],mb[va]=X.x,mb[va+1]=X.y,mb[va+2]=X.z,mb[va+3]=Y.x,mb[va+4]=Y.y,mb[va+5]=Y.z,mb[va+6]=Z.x,mb[va+7]=Z.y,mb[va+8]=Z.z,mb[va+9]=qa.x,mb[va+10]=qa.y,mb[va+11]=qa.z,Nb.morphNormals&&(Aa?(Rb=Lc[jb].vertexNormals[bc],Ka=Rb.a,Xa=Rb.b,Tb=Rb.c,
La=Rb.d):La=Tb=Xa=Ka=Lc[jb].faceNormals[bc],kb=fd[jb],kb[va]=Ka.x,kb[va+1]=Ka.y,kb[va+2]=Ka.z,kb[va+3]=Xa.x,kb[va+4]=Xa.y,kb[va+5]=Xa.z,kb[va+6]=Tb.x,kb[va+7]=Tb.y,kb[va+8]=Tb.z,kb[va+9]=La.x,kb[va+10]=La.y,kb[va+11]=La.z),va+=12;n.bindBuffer(n.ARRAY_BUFFER,Q.__webglMorphTargetsBuffers[jb]);n.bufferData(n.ARRAY_BUFFER,ed[jb],ba);Nb.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,Q.__webglMorphNormalsBuffers[jb]),n.bufferData(n.ARRAY_BUFFER,fd[jb],ba))}}if(oc.length){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],
ib=oc[V.a],Ra=oc[V.b],ub=oc[V.c],eb[ka]=ib.x,eb[ka+1]=ib.y,eb[ka+2]=ib.z,eb[ka+3]=ib.w,eb[ka+4]=Ra.x,eb[ka+5]=Ra.y,eb[ka+6]=Ra.z,eb[ka+7]=Ra.w,eb[ka+8]=ub.x,eb[ka+9]=ub.y,eb[ka+10]=ub.z,eb[ka+11]=ub.w,tb=sc[V.a],bb=sc[V.b],Fb=sc[V.c],db[ka]=tb.x,db[ka+1]=tb.y,db[ka+2]=tb.z,db[ka+3]=tb.w,db[ka+4]=bb.x,db[ka+5]=bb.y,db[ka+6]=bb.z,db[ka+7]=bb.w,db[ka+8]=Fb.x,db[ka+9]=Fb.y,db[ka+10]=Fb.z,db[ka+11]=Fb.w,ka+=12;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],ib=oc[V.a],Ra=oc[V.b],ub=oc[V.c],lb=oc[V.d],eb[ka]=
ib.x,eb[ka+1]=ib.y,eb[ka+2]=ib.z,eb[ka+3]=ib.w,eb[ka+4]=Ra.x,eb[ka+5]=Ra.y,eb[ka+6]=Ra.z,eb[ka+7]=Ra.w,eb[ka+8]=ub.x,eb[ka+9]=ub.y,eb[ka+10]=ub.z,eb[ka+11]=ub.w,eb[ka+12]=lb.x,eb[ka+13]=lb.y,eb[ka+14]=lb.z,eb[ka+15]=lb.w,tb=sc[V.a],bb=sc[V.b],Fb=sc[V.c],vb=sc[V.d],db[ka]=tb.x,db[ka+1]=tb.y,db[ka+2]=tb.z,db[ka+3]=tb.w,db[ka+4]=bb.x,db[ka+5]=bb.y,db[ka+6]=bb.z,db[ka+7]=bb.w,db[ka+8]=Fb.x,db[ka+9]=Fb.y,db[ka+10]=Fb.z,db[ka+11]=Fb.w,db[ka+12]=vb.x,db[ka+13]=vb.y,db[ka+14]=vb.z,db[ka+15]=vb.w,ka+=16;0<
ka&&(n.bindBuffer(n.ARRAY_BUFFER,Q.__webglSkinIndicesBuffer),n.bufferData(n.ARRAY_BUFFER,db,ba),n.bindBuffer(n.ARRAY_BUFFER,Q.__webglSkinWeightsBuffer),n.bufferData(n.ARRAY_BUFFER,eb,ba))}if(Kc&&ic){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],ga=V.vertexColors,gb=V.color,3===ga.length&&ic===THREE.VertexColors?(Ga=ga[0],Qa=ga[1],qb=ga[2]):qb=Qa=Ga=gb,yb[nb]=Ga.r,yb[nb+1]=Ga.g,yb[nb+2]=Ga.b,yb[nb+3]=Qa.r,yb[nb+4]=Qa.g,yb[nb+5]=Qa.b,yb[nb+6]=qb.r,yb[nb+7]=qb.g,yb[nb+8]=qb.b,nb+=9;K=0;for(ca=Na.length;K<
ca;K++)V=Cb[Na[K]],ga=V.vertexColors,gb=V.color,4===ga.length&&ic===THREE.VertexColors?(Ga=ga[0],Qa=ga[1],qb=ga[2],Db=ga[3]):Db=qb=Qa=Ga=gb,yb[nb]=Ga.r,yb[nb+1]=Ga.g,yb[nb+2]=Ga.b,yb[nb+3]=Qa.r,yb[nb+4]=Qa.g,yb[nb+5]=Qa.b,yb[nb+6]=qb.r,yb[nb+7]=qb.g,yb[nb+8]=qb.b,yb[nb+9]=Db.r,yb[nb+10]=Db.g,yb[nb+11]=Db.b,nb+=12;0<nb&&(n.bindBuffer(n.ARRAY_BUFFER,Q.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,yb,ba))}if(Jc&&Ib.hasTangents){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],ja=V.vertexTangents,pb=ja[0],
ua=ja[1],sa=ja[2],cb[Ua]=pb.x,cb[Ua+1]=pb.y,cb[Ua+2]=pb.z,cb[Ua+3]=pb.w,cb[Ua+4]=ua.x,cb[Ua+5]=ua.y,cb[Ua+6]=ua.z,cb[Ua+7]=ua.w,cb[Ua+8]=sa.x,cb[Ua+9]=sa.y,cb[Ua+10]=sa.z,cb[Ua+11]=sa.w,Ua+=12;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],ja=V.vertexTangents,pb=ja[0],ua=ja[1],sa=ja[2],wa=ja[3],cb[Ua]=pb.x,cb[Ua+1]=pb.y,cb[Ua+2]=pb.z,cb[Ua+3]=pb.w,cb[Ua+4]=ua.x,cb[Ua+5]=ua.y,cb[Ua+6]=ua.z,cb[Ua+7]=ua.w,cb[Ua+8]=sa.x,cb[Ua+9]=sa.y,cb[Ua+10]=sa.z,cb[Ua+11]=sa.w,cb[Ua+12]=wa.x,cb[Ua+13]=wa.y,cb[Ua+14]=wa.z,
cb[Ua+15]=wa.w,Ua+=16;n.bindBuffer(n.ARRAY_BUFFER,Q.__webglTangentBuffer);n.bufferData(n.ARRAY_BUFFER,cb,ba)}if(Ic&&ta){K=0;for(ca=Ma.length;K<ca;K++)if(V=Cb[Ma[K]],xa=V.vertexNormals,Pa=V.normal,3===xa.length&&Aa)for(za=0;3>za;za++)wb=xa[za],Ub[Bb]=wb.x,Ub[Bb+1]=wb.y,Ub[Bb+2]=wb.z,Bb+=3;else for(za=0;3>za;za++)Ub[Bb]=Pa.x,Ub[Bb+1]=Pa.y,Ub[Bb+2]=Pa.z,Bb+=3;K=0;for(ca=Na.length;K<ca;K++)if(V=Cb[Na[K]],xa=V.vertexNormals,Pa=V.normal,4===xa.length&&Aa)for(za=0;4>za;za++)wb=xa[za],Ub[Bb]=wb.x,Ub[Bb+1]=
wb.y,Ub[Bb+2]=wb.z,Bb+=3;else for(za=0;4>za;za++)Ub[Bb]=Pa.x,Ub[Bb+1]=Pa.y,Ub[Bb+2]=Pa.z,Bb+=3;n.bindBuffer(n.ARRAY_BUFFER,Q.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,Ub,ba)}if(yc&&hd&&jc){K=0;for(ca=Ma.length;K<ca;K++)if(ia=Ma[K],Ja=hd[ia],void 0!==Ja)for(za=0;3>za;za++)Qb=Ja[za],Zb[$b]=Qb.x,Zb[$b+1]=Qb.y,$b+=2;K=0;for(ca=Na.length;K<ca;K++)if(ia=Na[K],Ja=hd[ia],void 0!==Ja)for(za=0;4>za;za++)Qb=Ja[za],Zb[$b]=Qb.x,Zb[$b+1]=Qb.y,$b+=2;0<$b&&(n.bindBuffer(n.ARRAY_BUFFER,Q.__webglUVBuffer),n.bufferData(n.ARRAY_BUFFER,
Zb,ba))}if(yc&&id&&jc){K=0;for(ca=Ma.length;K<ca;K++)if(ia=Ma[K],ra=id[ia],void 0!==ra)for(za=0;3>za;za++)kc=ra[za],zc[ac]=kc.x,zc[ac+1]=kc.y,ac+=2;K=0;for(ca=Na.length;K<ca;K++)if(ia=Na[K],ra=id[ia],void 0!==ra)for(za=0;4>za;za++)kc=ra[za],zc[ac]=kc.x,zc[ac+1]=kc.y,ac+=2;0<ac&&(n.bindBuffer(n.ARRAY_BUFFER,Q.__webglUV2Buffer),n.bufferData(n.ARRAY_BUFFER,zc,ba))}if(Hc){K=0;for(ca=Ma.length;K<ca;K++)cc[Hb]=Ya,cc[Hb+1]=Ya+1,cc[Hb+2]=Ya+2,Hb+=3,Ob[Gb]=Ya,Ob[Gb+1]=Ya+1,Ob[Gb+2]=Ya,Ob[Gb+3]=Ya+2,Ob[Gb+
4]=Ya+1,Ob[Gb+5]=Ya+2,Gb+=6,Ya+=3;K=0;for(ca=Na.length;K<ca;K++)cc[Hb]=Ya,cc[Hb+1]=Ya+1,cc[Hb+2]=Ya+3,cc[Hb+3]=Ya+1,cc[Hb+4]=Ya+2,cc[Hb+5]=Ya+3,Hb+=6,Ob[Gb]=Ya,Ob[Gb+1]=Ya+1,Ob[Gb+2]=Ya,Ob[Gb+3]=Ya+3,Ob[Gb+4]=Ya+1,Ob[Gb+5]=Ya+2,Ob[Gb+6]=Ya+2,Ob[Gb+7]=Ya+3,Gb+=8,Ya+=4;n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,Q.__webglFaceBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,cc,ba);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,Q.__webglLineBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Ob,ba)}if(gd){za=0;for(Eb=gd.length;za<Eb;za++)if(B=
gd[za],B.__original.needsUpdate){C=0;if(1===B.size)if(void 0===B.boundTo||"vertices"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],B.array[C]=B.value[V.a],B.array[C+1]=B.value[V.b],B.array[C+2]=B.value[V.c],C+=3;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],B.array[C]=B.value[V.a],B.array[C+1]=B.value[V.b],B.array[C+2]=B.value[V.c],B.array[C+3]=B.value[V.d],C+=4}else{if("faces"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)Sa=B.value[Ma[K]],B.array[C]=Sa,B.array[C+1]=Sa,B.array[C+2]=Sa,C+=3;K=0;
for(ca=Na.length;K<ca;K++)Sa=B.value[Na[K]],B.array[C]=Sa,B.array[C+1]=Sa,B.array[C+2]=Sa,B.array[C+3]=Sa,C+=4}}else if(2===B.size)if(void 0===B.boundTo||"vertices"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],X=B.value[V.a],Y=B.value[V.b],Z=B.value[V.c],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=Y.x,B.array[C+3]=Y.y,B.array[C+4]=Z.x,B.array[C+5]=Z.y,C+=6;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],X=B.value[V.a],Y=B.value[V.b],Z=B.value[V.c],qa=B.value[V.d],B.array[C]=X.x,B.array[C+1]=
X.y,B.array[C+2]=Y.x,B.array[C+3]=Y.y,B.array[C+4]=Z.x,B.array[C+5]=Z.y,B.array[C+6]=qa.x,B.array[C+7]=qa.y,C+=8}else{if("faces"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)Z=Y=X=Sa=B.value[Ma[K]],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=Y.x,B.array[C+3]=Y.y,B.array[C+4]=Z.x,B.array[C+5]=Z.y,C+=6;K=0;for(ca=Na.length;K<ca;K++)qa=Z=Y=X=Sa=B.value[Na[K]],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=Y.x,B.array[C+3]=Y.y,B.array[C+4]=Z.x,B.array[C+5]=Z.y,B.array[C+6]=qa.x,B.array[C+7]=qa.y,C+=8}}else if(3===
B.size){var ha;ha="c"===B.type?["r","g","b"]:["x","y","z"];if(void 0===B.boundTo||"vertices"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],X=B.value[V.a],Y=B.value[V.b],Z=B.value[V.c],B.array[C]=X[ha[0]],B.array[C+1]=X[ha[1]],B.array[C+2]=X[ha[2]],B.array[C+3]=Y[ha[0]],B.array[C+4]=Y[ha[1]],B.array[C+5]=Y[ha[2]],B.array[C+6]=Z[ha[0]],B.array[C+7]=Z[ha[1]],B.array[C+8]=Z[ha[2]],C+=9;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],X=B.value[V.a],Y=B.value[V.b],Z=B.value[V.c],qa=B.value[V.d],B.array[C]=
X[ha[0]],B.array[C+1]=X[ha[1]],B.array[C+2]=X[ha[2]],B.array[C+3]=Y[ha[0]],B.array[C+4]=Y[ha[1]],B.array[C+5]=Y[ha[2]],B.array[C+6]=Z[ha[0]],B.array[C+7]=Z[ha[1]],B.array[C+8]=Z[ha[2]],B.array[C+9]=qa[ha[0]],B.array[C+10]=qa[ha[1]],B.array[C+11]=qa[ha[2]],C+=12}else if("faces"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)Z=Y=X=Sa=B.value[Ma[K]],B.array[C]=X[ha[0]],B.array[C+1]=X[ha[1]],B.array[C+2]=X[ha[2]],B.array[C+3]=Y[ha[0]],B.array[C+4]=Y[ha[1]],B.array[C+5]=Y[ha[2]],B.array[C+6]=Z[ha[0]],B.array[C+
7]=Z[ha[1]],B.array[C+8]=Z[ha[2]],C+=9;K=0;for(ca=Na.length;K<ca;K++)qa=Z=Y=X=Sa=B.value[Na[K]],B.array[C]=X[ha[0]],B.array[C+1]=X[ha[1]],B.array[C+2]=X[ha[2]],B.array[C+3]=Y[ha[0]],B.array[C+4]=Y[ha[1]],B.array[C+5]=Y[ha[2]],B.array[C+6]=Z[ha[0]],B.array[C+7]=Z[ha[1]],B.array[C+8]=Z[ha[2]],B.array[C+9]=qa[ha[0]],B.array[C+10]=qa[ha[1]],B.array[C+11]=qa[ha[2]],C+=12}else if("faceVertices"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)Sa=B.value[Ma[K]],X=Sa[0],Y=Sa[1],Z=Sa[2],B.array[C]=X[ha[0]],B.array[C+
1]=X[ha[1]],B.array[C+2]=X[ha[2]],B.array[C+3]=Y[ha[0]],B.array[C+4]=Y[ha[1]],B.array[C+5]=Y[ha[2]],B.array[C+6]=Z[ha[0]],B.array[C+7]=Z[ha[1]],B.array[C+8]=Z[ha[2]],C+=9;K=0;for(ca=Na.length;K<ca;K++)Sa=B.value[Na[K]],X=Sa[0],Y=Sa[1],Z=Sa[2],qa=Sa[3],B.array[C]=X[ha[0]],B.array[C+1]=X[ha[1]],B.array[C+2]=X[ha[2]],B.array[C+3]=Y[ha[0]],B.array[C+4]=Y[ha[1]],B.array[C+5]=Y[ha[2]],B.array[C+6]=Z[ha[0]],B.array[C+7]=Z[ha[1]],B.array[C+8]=Z[ha[2]],B.array[C+9]=qa[ha[0]],B.array[C+10]=qa[ha[1]],B.array[C+
11]=qa[ha[2]],C+=12}}else if(4===B.size)if(void 0===B.boundTo||"vertices"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)V=Cb[Ma[K]],X=B.value[V.a],Y=B.value[V.b],Z=B.value[V.c],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=X.z,B.array[C+3]=X.w,B.array[C+4]=Y.x,B.array[C+5]=Y.y,B.array[C+6]=Y.z,B.array[C+7]=Y.w,B.array[C+8]=Z.x,B.array[C+9]=Z.y,B.array[C+10]=Z.z,B.array[C+11]=Z.w,C+=12;K=0;for(ca=Na.length;K<ca;K++)V=Cb[Na[K]],X=B.value[V.a],Y=B.value[V.b],Z=B.value[V.c],qa=B.value[V.d],B.array[C]=X.x,
B.array[C+1]=X.y,B.array[C+2]=X.z,B.array[C+3]=X.w,B.array[C+4]=Y.x,B.array[C+5]=Y.y,B.array[C+6]=Y.z,B.array[C+7]=Y.w,B.array[C+8]=Z.x,B.array[C+9]=Z.y,B.array[C+10]=Z.z,B.array[C+11]=Z.w,B.array[C+12]=qa.x,B.array[C+13]=qa.y,B.array[C+14]=qa.z,B.array[C+15]=qa.w,C+=16}else if("faces"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)Z=Y=X=Sa=B.value[Ma[K]],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=X.z,B.array[C+3]=X.w,B.array[C+4]=Y.x,B.array[C+5]=Y.y,B.array[C+6]=Y.z,B.array[C+7]=Y.w,B.array[C+8]=
Z.x,B.array[C+9]=Z.y,B.array[C+10]=Z.z,B.array[C+11]=Z.w,C+=12;K=0;for(ca=Na.length;K<ca;K++)qa=Z=Y=X=Sa=B.value[Na[K]],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=X.z,B.array[C+3]=X.w,B.array[C+4]=Y.x,B.array[C+5]=Y.y,B.array[C+6]=Y.z,B.array[C+7]=Y.w,B.array[C+8]=Z.x,B.array[C+9]=Z.y,B.array[C+10]=Z.z,B.array[C+11]=Z.w,B.array[C+12]=qa.x,B.array[C+13]=qa.y,B.array[C+14]=qa.z,B.array[C+15]=qa.w,C+=16}else if("faceVertices"===B.boundTo){K=0;for(ca=Ma.length;K<ca;K++)Sa=B.value[Ma[K]],X=Sa[0],Y=Sa[1],
Z=Sa[2],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=X.z,B.array[C+3]=X.w,B.array[C+4]=Y.x,B.array[C+5]=Y.y,B.array[C+6]=Y.z,B.array[C+7]=Y.w,B.array[C+8]=Z.x,B.array[C+9]=Z.y,B.array[C+10]=Z.z,B.array[C+11]=Z.w,C+=12;K=0;for(ca=Na.length;K<ca;K++)Sa=B.value[Na[K]],X=Sa[0],Y=Sa[1],Z=Sa[2],qa=Sa[3],B.array[C]=X.x,B.array[C+1]=X.y,B.array[C+2]=X.z,B.array[C+3]=X.w,B.array[C+4]=Y.x,B.array[C+5]=Y.y,B.array[C+6]=Y.z,B.array[C+7]=Y.w,B.array[C+8]=Z.x,B.array[C+9]=Z.y,B.array[C+10]=Z.z,B.array[C+11]=Z.w,
B.array[C+12]=qa.x,B.array[C+13]=qa.y,B.array[C+14]=qa.z,B.array[C+15]=qa.w,C+=16}n.bindBuffer(n.ARRAY_BUFFER,B.buffer);n.bufferData(n.ARRAY_BUFFER,B.array,ba)}}pa&&(delete Q.__inittedArrays,delete Q.__colorArray,delete Q.__normalArray,delete Q.__tangentArray,delete Q.__uvArray,delete Q.__uv2Array,delete Q.__faceArray,delete Q.__vertexArray,delete Q.__lineArray,delete Q.__skinIndexArray,delete Q.__skinWeightArray)}}N.verticesNeedUpdate=!1;N.morphTargetsNeedUpdate=!1;N.elementsNeedUpdate=!1;N.uvsNeedUpdate=
!1;N.normalsNeedUpdate=!1;N.colorsNeedUpdate=!1;N.tangentsNeedUpdate=!1;N.buffersNeedUpdate=!1;ea.attributes&&w(ea)}else if(da instanceof THREE.Ribbon){ea=e(da,N);ob=ea.attributes&&u(ea);if(N.verticesNeedUpdate||N.colorsNeedUpdate||N.normalsNeedUpdate||ob){var Vb=N,Mc=n.DYNAMIC_DRAW,Ac=void 0,Bc=void 0,Cc=void 0,Nc=void 0,Ta=void 0,Oc=void 0,Pc=void 0,Qc=void 0,rd=void 0,zb=void 0,vc=void 0,$a=void 0,Jb=void 0,sd=Vb.vertices,td=Vb.colors,ud=Vb.normals,bd=sd.length,cd=td.length,dd=ud.length,Rc=Vb.__vertexArray,
Sc=Vb.__colorArray,Tc=Vb.__normalArray,Dd=Vb.colorsNeedUpdate,Ed=Vb.normalsNeedUpdate,jd=Vb.__webglCustomAttributesList;if(Vb.verticesNeedUpdate){for(Ac=0;Ac<bd;Ac++)Nc=sd[Ac],Ta=3*Ac,Rc[Ta]=Nc.x,Rc[Ta+1]=Nc.y,Rc[Ta+2]=Nc.z;n.bindBuffer(n.ARRAY_BUFFER,Vb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Rc,Mc)}if(Dd){for(Bc=0;Bc<cd;Bc++)Oc=td[Bc],Ta=3*Bc,Sc[Ta]=Oc.r,Sc[Ta+1]=Oc.g,Sc[Ta+2]=Oc.b;n.bindBuffer(n.ARRAY_BUFFER,Vb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Sc,Mc)}if(Ed){for(Cc=0;Cc<
dd;Cc++)Pc=ud[Cc],Ta=3*Cc,Tc[Ta]=Pc.x,Tc[Ta+1]=Pc.y,Tc[Ta+2]=Pc.z;n.bindBuffer(n.ARRAY_BUFFER,Vb.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,Tc,Mc)}if(jd){Qc=0;for(rd=jd.length;Qc<rd;Qc++)if($a=jd[Qc],$a.needsUpdate&&(void 0===$a.boundTo||"vertices"===$a.boundTo)){Ta=0;vc=$a.value.length;if(1===$a.size)for(zb=0;zb<vc;zb++)$a.array[zb]=$a.value[zb];else if(2===$a.size)for(zb=0;zb<vc;zb++)Jb=$a.value[zb],$a.array[Ta]=Jb.x,$a.array[Ta+1]=Jb.y,Ta+=2;else if(3===$a.size)if("c"===$a.type)for(zb=0;zb<
vc;zb++)Jb=$a.value[zb],$a.array[Ta]=Jb.r,$a.array[Ta+1]=Jb.g,$a.array[Ta+2]=Jb.b,Ta+=3;else for(zb=0;zb<vc;zb++)Jb=$a.value[zb],$a.array[Ta]=Jb.x,$a.array[Ta+1]=Jb.y,$a.array[Ta+2]=Jb.z,Ta+=3;else if(4===$a.size)for(zb=0;zb<vc;zb++)Jb=$a.value[zb],$a.array[Ta]=Jb.x,$a.array[Ta+1]=Jb.y,$a.array[Ta+2]=Jb.z,$a.array[Ta+3]=Jb.w,Ta+=4;n.bindBuffer(n.ARRAY_BUFFER,$a.buffer);n.bufferData(n.ARRAY_BUFFER,$a.array,Mc)}}}N.verticesNeedUpdate=!1;N.colorsNeedUpdate=!1;N.normalsNeedUpdate=!1;ea.attributes&&w(ea)}else if(da instanceof
THREE.Line){ea=e(da,N);ob=ea.attributes&&u(ea);if(N.verticesNeedUpdate||N.colorsNeedUpdate||N.lineDistancesNeedUpdate||ob){var Wb=N,Uc=n.DYNAMIC_DRAW,Dc=void 0,Ec=void 0,Fc=void 0,Vc=void 0,fb=void 0,Wc=void 0,vd=Wb.vertices,wd=Wb.colors,xd=Wb.lineDistances,Fd=vd.length,Gd=wd.length,Hd=xd.length,Xc=Wb.__vertexArray,Yc=Wb.__colorArray,yd=Wb.__lineDistanceArray,Id=Wb.colorsNeedUpdate,Jd=Wb.lineDistancesNeedUpdate,kd=Wb.__webglCustomAttributesList,Zc=void 0,zd=void 0,Ab=void 0,wc=void 0,Kb=void 0,ab=
void 0;if(Wb.verticesNeedUpdate){for(Dc=0;Dc<Fd;Dc++)Vc=vd[Dc],fb=3*Dc,Xc[fb]=Vc.x,Xc[fb+1]=Vc.y,Xc[fb+2]=Vc.z;n.bindBuffer(n.ARRAY_BUFFER,Wb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Xc,Uc)}if(Id){for(Ec=0;Ec<Gd;Ec++)Wc=wd[Ec],fb=3*Ec,Yc[fb]=Wc.r,Yc[fb+1]=Wc.g,Yc[fb+2]=Wc.b;n.bindBuffer(n.ARRAY_BUFFER,Wb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Yc,Uc)}if(Jd){for(Fc=0;Fc<Hd;Fc++)yd[Fc]=xd[Fc];n.bindBuffer(n.ARRAY_BUFFER,Wb.__webglLineDistanceBuffer);n.bufferData(n.ARRAY_BUFFER,yd,Uc)}if(kd){Zc=
0;for(zd=kd.length;Zc<zd;Zc++)if(ab=kd[Zc],ab.needsUpdate&&(void 0===ab.boundTo||"vertices"===ab.boundTo)){fb=0;wc=ab.value.length;if(1===ab.size)for(Ab=0;Ab<wc;Ab++)ab.array[Ab]=ab.value[Ab];else if(2===ab.size)for(Ab=0;Ab<wc;Ab++)Kb=ab.value[Ab],ab.array[fb]=Kb.x,ab.array[fb+1]=Kb.y,fb+=2;else if(3===ab.size)if("c"===ab.type)for(Ab=0;Ab<wc;Ab++)Kb=ab.value[Ab],ab.array[fb]=Kb.r,ab.array[fb+1]=Kb.g,ab.array[fb+2]=Kb.b,fb+=3;else for(Ab=0;Ab<wc;Ab++)Kb=ab.value[Ab],ab.array[fb]=Kb.x,ab.array[fb+1]=
Kb.y,ab.array[fb+2]=Kb.z,fb+=3;else if(4===ab.size)for(Ab=0;Ab<wc;Ab++)Kb=ab.value[Ab],ab.array[fb]=Kb.x,ab.array[fb+1]=Kb.y,ab.array[fb+2]=Kb.z,ab.array[fb+3]=Kb.w,fb+=4;n.bindBuffer(n.ARRAY_BUFFER,ab.buffer);n.bufferData(n.ARRAY_BUFFER,ab.array,Uc)}}}N.verticesNeedUpdate=!1;N.colorsNeedUpdate=!1;N.lineDistancesNeedUpdate=!1;ea.attributes&&w(ea)}else if(da instanceof THREE.ParticleSystem)if(N instanceof THREE.BufferGeometry)(N.verticesNeedUpdate||N.colorsNeedUpdate)&&j(N,n.DYNAMIC_DRAW,!N.dynamic),
N.verticesNeedUpdate=!1,N.colorsNeedUpdate=!1;else{ea=e(da,N);ob=ea.attributes&&u(ea);if(N.verticesNeedUpdate||N.colorsNeedUpdate||da.sortParticles||ob){var dc=N,ld=n.DYNAMIC_DRAW,Gc=da,Lb=void 0,ec=void 0,fc=void 0,ma=void 0,gc=void 0,qc=void 0,$c=dc.vertices,md=$c.length,nd=dc.colors,Ad=nd.length,tc=dc.__vertexArray,uc=dc.__colorArray,lc=dc.__sortArray,Bd=dc.verticesNeedUpdate,Cd=dc.colorsNeedUpdate,mc=dc.__webglCustomAttributesList,Xb=void 0,xc=void 0,Da=void 0,Yb=void 0,Va=void 0,la=void 0;if(Gc.sortParticles){Pb.copy(sb);
Pb.multiplySelf(Gc.matrixWorld);for(Lb=0;Lb<md;Lb++)fc=$c[Lb],Sb.copy(fc),Pb.multiplyVector3(Sb),lc[Lb]=[Sb.z,Lb];lc.sort(p);for(Lb=0;Lb<md;Lb++)fc=$c[lc[Lb][1]],ma=3*Lb,tc[ma]=fc.x,tc[ma+1]=fc.y,tc[ma+2]=fc.z;for(ec=0;ec<Ad;ec++)ma=3*ec,qc=nd[lc[ec][1]],uc[ma]=qc.r,uc[ma+1]=qc.g,uc[ma+2]=qc.b;if(mc){Xb=0;for(xc=mc.length;Xb<xc;Xb++)if(la=mc[Xb],void 0===la.boundTo||"vertices"===la.boundTo)if(ma=0,Yb=la.value.length,1===la.size)for(Da=0;Da<Yb;Da++)gc=lc[Da][1],la.array[Da]=la.value[gc];else if(2===
la.size)for(Da=0;Da<Yb;Da++)gc=lc[Da][1],Va=la.value[gc],la.array[ma]=Va.x,la.array[ma+1]=Va.y,ma+=2;else if(3===la.size)if("c"===la.type)for(Da=0;Da<Yb;Da++)gc=lc[Da][1],Va=la.value[gc],la.array[ma]=Va.r,la.array[ma+1]=Va.g,la.array[ma+2]=Va.b,ma+=3;else for(Da=0;Da<Yb;Da++)gc=lc[Da][1],Va=la.value[gc],la.array[ma]=Va.x,la.array[ma+1]=Va.y,la.array[ma+2]=Va.z,ma+=3;else if(4===la.size)for(Da=0;Da<Yb;Da++)gc=lc[Da][1],Va=la.value[gc],la.array[ma]=Va.x,la.array[ma+1]=Va.y,la.array[ma+2]=Va.z,la.array[ma+
3]=Va.w,ma+=4}}else{if(Bd)for(Lb=0;Lb<md;Lb++)fc=$c[Lb],ma=3*Lb,tc[ma]=fc.x,tc[ma+1]=fc.y,tc[ma+2]=fc.z;if(Cd)for(ec=0;ec<Ad;ec++)qc=nd[ec],ma=3*ec,uc[ma]=qc.r,uc[ma+1]=qc.g,uc[ma+2]=qc.b;if(mc){Xb=0;for(xc=mc.length;Xb<xc;Xb++)if(la=mc[Xb],la.needsUpdate&&(void 0===la.boundTo||"vertices"===la.boundTo))if(Yb=la.value.length,ma=0,1===la.size)for(Da=0;Da<Yb;Da++)la.array[Da]=la.value[Da];else if(2===la.size)for(Da=0;Da<Yb;Da++)Va=la.value[Da],la.array[ma]=Va.x,la.array[ma+1]=Va.y,ma+=2;else if(3===
la.size)if("c"===la.type)for(Da=0;Da<Yb;Da++)Va=la.value[Da],la.array[ma]=Va.r,la.array[ma+1]=Va.g,la.array[ma+2]=Va.b,ma+=3;else for(Da=0;Da<Yb;Da++)Va=la.value[Da],la.array[ma]=Va.x,la.array[ma+1]=Va.y,la.array[ma+2]=Va.z,ma+=3;else if(4===la.size)for(Da=0;Da<Yb;Da++)Va=la.value[Da],la.array[ma]=Va.x,la.array[ma+1]=Va.y,la.array[ma+2]=Va.z,la.array[ma+3]=Va.w,ma+=4}}if(Bd||Gc.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,dc.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,tc,ld);if(Cd||Gc.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,
dc.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,uc,ld);if(mc){Xb=0;for(xc=mc.length;Xb<xc;Xb++)if(la=mc[Xb],la.needsUpdate||Gc.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,la.buffer),n.bufferData(n.ARRAY_BUFFER,la.array,ld)}}N.verticesNeedUpdate=!1;N.colorsNeedUpdate=!1;ea.attributes&&w(ea)}}};this.initMaterial=function(a,b,c,d){var e,f,g,h,j,l;a.addEventListener("dispose",Jc);var k,m,p,q,s;a instanceof THREE.MeshDepthMaterial?s="depth":a instanceof THREE.MeshNormalMaterial?s="normal":a instanceof
THREE.MeshBasicMaterial?s="basic":a instanceof THREE.MeshLambertMaterial?s="lambert":a instanceof THREE.MeshPhongMaterial?s="phong":a instanceof THREE.LineBasicMaterial?s="basic":a instanceof THREE.LineDashedMaterial?s="dashed":a instanceof THREE.ParticleBasicMaterial&&(s="particle_basic");if(s){var r=THREE.ShaderLib[s];a.uniforms=THREE.UniformsUtils.clone(r.uniforms);a.vertexShader=r.vertexShader;a.fragmentShader=r.fragmentShader}var t,ya,v;e=j=f=g=ya=v=r=0;for(h=b.length;e<h;e++)t=b[e],t.onlyShadow||
(t instanceof THREE.DirectionalLight&&j++,t instanceof THREE.PointLight&&f++,t instanceof THREE.SpotLight&&g++,t instanceof THREE.HemisphereLight&&ya++,t instanceof THREE.AreaLight&&(v++,t.texture&&r++));e=j;h=ya;j=v;l=r;r=t=0;for(v=b.length;r<v;r++)ya=b[r],ya.castShadow&&(ya instanceof THREE.SpotLight&&t++,ya instanceof THREE.DirectionalLight&&!ya.shadowCascade&&t++);q=t;Ra&&d&&d.useVertexTexture?p=1024:(b=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof
THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),p=b);a:{ya=a.fragmentShader;v=a.vertexShader;r=a.uniforms;b=a.attributes;t=a.defines;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:p,useVertexTexture:Ra&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxAreaLights:j,areaTextures:0<l,maxShadows:q,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,
shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};var u,Ia,Ha;d=[];s?d.push(s):(d.push(ya),d.push(v));for(Ia in t)d.push(Ia),d.push(t[Ia]);for(u in c)d.push(u),d.push(c[u]);s=d.join();u=0;for(Ia=aa.length;u<Ia;u++)if(d=aa[u],d.code===s){d.usedTimes++;m=d.program;break a}u="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?u="SHADOWMAP_TYPE_PCF":c.shadowMapType===
THREE.PCFSoftShadowMap&&(u="SHADOWMAP_TYPE_PCF_SOFT");Ia=[];for(Ha in t)d=t[Ha],!1!==d&&(d="#define "+Ha+" "+d,Ia.push(d));d=Ia.join("\n");Ha=n.createProgram();Ia=["precision "+S+" float;",d,ga?"#define VERTEX_TEXTURES":"",M.gammaInput?"#define GAMMA_INPUT":"",M.gammaOutput?"#define GAMMA_OUTPUT":"",M.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+
c.maxHemiLights,"#define MAX_AREA_LIGHTS "+c.maxAreaLights,c.areaTextures?"#define AREA_TEXTURE":"","#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":
"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?
"#define "+u:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
u=["precision "+S+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_AREA_LIGHTS "+c.maxAreaLights,c.areaTextures?"#define AREA_TEXTURE":"","#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",M.gammaInput?"#define GAMMA_INPUT":"",M.gammaOutput?"#define GAMMA_OUTPUT":
"",M.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",
c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+u:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");u=T("fragment",u+ya);Ia=T("vertex",Ia+v);n.attachShader(Ha,Ia);n.attachShader(Ha,u);n.linkProgram(Ha);n.getProgramParameter(Ha,n.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+
n.getProgramParameter(Ha,n.VALIDATE_STATUS)+", gl error ["+n.getError()+"]");n.deleteShader(u);n.deleteShader(Ia);Ha.uniforms={};Ha.attributes={};var w;u="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?u.push("boneTexture"):u.push("boneGlobalMatrices");for(w in r)u.push(w);w=u;u=0;for(Ia=w.length;u<Ia;u++)d=w[u],Ha.uniforms[d]=n.getUniformLocation(Ha,d);u="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");
for(w=0;w<c.maxMorphTargets;w++)u.push("morphTarget"+w);for(w=0;w<c.maxMorphNormals;w++)u.push("morphNormal"+w);for(m in b)u.push(m);m=u;w=0;for(u=m.length;w<u;w++)b=m[w],Ha.attributes[b]=n.getAttribLocation(Ha,b);Ha.id=na++;aa.push({program:Ha,code:s,usedTimes:1});M.info.memory.programs=aa.length;m=Ha}a.program=m;w=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;u="morphTarget";for(m=0;m<this.maxMorphTargets;m++)Ha=u+m,0<=w[Ha]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=
0;u="morphNormal";for(m=0;m<this.maxMorphNormals;m++)Ha=u+m,0<=w[Ha]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(k in a.uniforms)a.uniformsList.push([a.uniforms[k],k])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?n.disable(n.CULL_FACE):(b===THREE.FrontFaceDirectionCW?n.frontFace(n.CW):n.frontFace(n.CCW),a===THREE.CullFaceBack?n.cullFace(n.BACK):a===THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK),n.enable(n.CULL_FACE))};this.setMaterialFaces=function(a){var b=
a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;fa!==b&&(b?n.disable(n.CULL_FACE):n.enable(n.CULL_FACE),fa=b);ia!==a&&(a?n.frontFace(n.CW):n.frontFace(n.CCW),ia=a)};this.setDepthTest=function(a){gb!==a&&(a?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST),gb=a)};this.setDepthWrite=function(a){Xa!==a&&(n.depthMask(a),Xa=a)};this.setBlending=function(a,b,c,d){a!==Fa&&(a===THREE.NoBlending?n.disable(n.BLEND):a===THREE.AdditiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,
n.ONE)):a===THREE.SubtractiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR)):a===THREE.CustomBlending?n.enable(n.BLEND):(n.enable(n.BLEND),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)),Fa=a);if(a===THREE.CustomBlending){if(b!==Wa&&(n.blendEquation(L(b)),Wa=b),
c!==Ca||d!==ob)n.blendFunc(L(c),L(d)),Ca=c,ob=d}else ob=Ca=Wa=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",yc),a.__webglTexture=n.createTexture(),M.info.memory.textures++);n.activeTexture(n.TEXTURE0+b);n.bindTexture(n.TEXTURE_2D,a.__webglTexture);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,a.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);n.pixelStorei(n.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===
(c.width&c.width-1)&&0===(c.height&c.height-1),e=L(a.format),f=L(a.type);E(n.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,j=g.length;h<j;h++)c=g[h],n.texImage2D(n.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else n.texImage2D(n.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){h=0;for(j=g.length;h<j;h++)c=g[h],n.compressedTexImage2D(n.TEXTURE_2D,h,e,c.width,c.height,0,c.data)}else if(0<
g.length&&d){h=0;for(j=g.length;h<j;h++)c=g[h],n.texImage2D(n.TEXTURE_2D,h,e,e,f,c);a.generateMipmaps=!1}else n.texImage2D(n.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&n.generateMipmap(n.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&
(a.stencilBuffer=!0);a.addEventListener("dispose",Ic);a.__webglTexture=n.createTexture();M.info.memory.textures++;var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=L(a.format),e=L(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture);E(n.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=n.createFramebuffer();a.__webglRenderbuffer[f]=n.createRenderbuffer();n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,
a.height,0,d,e,null);var g=a,h=n.TEXTURE_CUBE_MAP_POSITIVE_X+f;n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer[f]);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,h,g.__webglTexture,0);O(a.__webglRenderbuffer[f],a)}c&&n.generateMipmap(n.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=n.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:n.createRenderbuffer(),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),E(n.TEXTURE_2D,a,c),n.texImage2D(n.TEXTURE_2D,
0,d,a.width,a.height,0,d,e,null),d=n.TEXTURE_2D,n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a.__webglRenderbuffer):O(a.__webglRenderbuffer,a),c&&n.generateMipmap(n.TEXTURE_2D);
b?n.bindTexture(n.TEXTURE_CUBE_MAP,null):n.bindTexture(n.TEXTURE_2D,null);n.bindRenderbuffer(n.RENDERBUFFER,null);n.bindFramebuffer(n.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Ka,a=La,d=pb,e=ta);b!==pa&&(n.bindFramebuffer(n.FRAMEBUFFER,b),n.viewport(d,e,c,a),pa=b);ya=c;Ha=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(a,b,c){THREE.EventDispatcher.call(this);this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);
this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;return a};
THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];
this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;a.getHSV(e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};THREE.GeometryUtils={merge:function(a,b){var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,j=a.faces,k=f.faces,l=a.faceVertexUvs[0],f=f.faceVertexUvs[0];b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var m=0,p=h.length;m<p;m++){var s=h[m].clone();c&&c.multiplyVector3(s);g.push(s)}m=0;for(p=k.length;m<p;m++){var s=k[m],r,q,v=s.vertexNormals,u=s.vertexColors;s instanceof THREE.Face3?
r=new THREE.Face3(s.a+e,s.b+e,s.c+e):s instanceof THREE.Face4&&(r=new THREE.Face4(s.a+e,s.b+e,s.c+e,s.d+e));r.normal.copy(s.normal);d&&d.multiplyVector3(r.normal);g=0;for(h=v.length;g<h;g++)q=v[g].clone(),d&&d.multiplyVector3(q),r.vertexNormals.push(q);r.color.copy(s.color);g=0;for(h=u.length;g<h;g++)q=u[g],r.vertexColors.push(q.clone());r.materialIndex=s.materialIndex;r.centroid.copy(s.centroid);c&&c.multiplyVector3(r.centroid);j.push(r)}m=0;for(p=f.length;m<p;m++){c=f[m];d=[];g=0;for(h=c.length;g<
h;g++)d.push(new THREE.Vector2(c[g].x,c[g].y));l.push(d)}},removeMaterials:function(a,b){for(var c={},d=0,e=b.length;d<e;d++)c[b[d]]=!0;for(var f,g=[],d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f.materialIndex in c||g.push(f);a.faces=g},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);
h.multiplyScalar(f);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];b=b.vertices[a.d];var g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,
e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,j=0,k=[],l,m,p,s;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(l=g[d.a],m=g[d.b],p=g[d.c],
d._area=THREE.GeometryUtils.triangleArea(l,m,p)):d instanceof THREE.Face4&&(l=g[d.a],m=g[d.b],p=g[d.c],s=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(l,m,s),d._area2=THREE.GeometryUtils.triangleArea(m,p,s),d._area=d._area1+d._area2),j+=d._area,k[e]=j;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*j,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d=THREE.GeometryUtils.__v1,e=THREE.GeometryUtils.__v2;d.sub(b,a);e.sub(c,a);d.crossSelf(e);
return 0.5*d.length()},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].x&&(d[e].x-=Math.floor(d[e].x)),1!==d[e].y&&(d[e].y-=Math.floor(d[e].y))},flipV:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=
a[b],e=0,f=d.length;e<f;e++)d[e].y=1-d[e].y},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=a.faces[b],d instanceof THREE.Face4){e=d.a;var j=d.b,k=d.c,l=d.d,m=new THREE.Face3,p=new THREE.Face3;m.color.copy(d.color);p.color.copy(d.color);m.materialIndex=d.materialIndex;p.materialIndex=d.materialIndex;m.a=e;m.b=j;m.c=l;p.a=j;p.b=k;p.c=l;4===d.vertexColors.length&&
(m.vertexColors[0]=d.vertexColors[0].clone(),m.vertexColors[1]=d.vertexColors[1].clone(),m.vertexColors[2]=d.vertexColors[3].clone(),p.vertexColors[0]=d.vertexColors[1].clone(),p.vertexColors[1]=d.vertexColors[2].clone(),p.vertexColors[2]=d.vertexColors[3].clone());f.push(m,p);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(m=a.faceVertexUvs[d][b],j=m[1],k=m[2],l=m[3],m=[m[0].clone(),j.clone(),l.clone()],j=[j.clone(),k.clone(),l.clone()],h[d].push(m,j));d=0;for(e=a.faceUvs.length;d<
e;d++)a.faceUvs[d].length&&(j=a.faceUvs[d][b],g[d].push(j,j))}else{f.push(d);d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,j=f.c,g=
a.vertices[g],h=a.vertices[h],j=a.vertices[j],k=a.vertices[f.d];b.push(g.clone());b.push(h.clone());b.push(j.clone());b.push(k.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,j=f.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],b.push(g.clone()),b.push(h.clone()),b.push(j.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,j,k,l,m,p,s,r,q,v,u,w,x,t,D=[],z=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)z[c]=[];c=0;for(d=a.faces.length;c<
d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,k=a.vertices[f],l=a.vertices[g],m=a.vertices[h],s=k.distanceTo(l),r=l.distanceTo(m),p=k.distanceTo(m),s>b||r>b||p>b){j=a.vertices.length;x=e.clone();t=e.clone();s>=r&&s>=p?(k=k.clone(),k.lerpSelf(l,0.5),x.a=f,x.b=j,x.c=h,t.a=j,t.b=g,t.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),x.vertexNormals[1].copy(f),t.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),
f.lerpSelf(e.vertexColors[1],0.5),x.vertexColors[1].copy(f),t.vertexColors[0].copy(f)),e=0):r>=s&&r>=p?(k=l.clone(),k.lerpSelf(m,0.5),x.a=f,x.b=g,x.c=j,t.a=j,t.b=h,t.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),x.vertexNormals[2].copy(f),t.vertexNormals[0].copy(f),t.vertexNormals[1].copy(e.vertexNormals[2]),t.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),x.vertexColors[2].copy(f),
t.vertexColors[0].copy(f),t.vertexColors[1].copy(e.vertexColors[2]),t.vertexColors[2].copy(e.vertexColors[0])),e=1):(k=k.clone(),k.lerpSelf(m,0.5),x.a=f,x.b=g,x.c=j,t.a=j,t.b=g,t.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),x.vertexNormals[2].copy(f),t.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),x.vertexColors[2].copy(f),t.vertexColors[0].copy(f)),e=2);D.push(x,t);a.vertices.push(k);
f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],t=k[0],h=k[1],x=k[2],0===e?(l=t.clone(),l.lerpSelf(h,0.5),k=[t.clone(),l.clone(),x.clone()],h=[l.clone(),h.clone(),x.clone()]):1===e?(l=h.clone(),l.lerpSelf(x,0.5),k=[t.clone(),h.clone(),l.clone()],h=[l.clone(),x.clone(),t.clone()]):(l=t.clone(),l.lerpSelf(x,0.5),k=[t.clone(),h.clone(),l.clone()],h=[l.clone(),h.clone(),x.clone()]),z[f].push(k,h))}else{D.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)z[f].push(a.faceVertexUvs[f][c])}else if(f=
e.a,g=e.b,h=e.c,j=e.d,k=a.vertices[f],l=a.vertices[g],m=a.vertices[h],p=a.vertices[j],s=k.distanceTo(l),r=l.distanceTo(m),q=m.distanceTo(p),v=k.distanceTo(p),s>b||r>b||q>b||v>b){u=a.vertices.length;w=a.vertices.length+1;x=e.clone();t=e.clone();s>=r&&s>=q&&s>=v||q>=r&&q>=s&&q>=v?(s=k.clone(),s.lerpSelf(l,0.5),l=m.clone(),l.lerpSelf(p,0.5),x.a=f,x.b=u,x.c=w,x.d=j,t.a=u,t.b=g,t.c=h,t.d=w,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),
g.lerpSelf(e.vertexNormals[3],0.5),x.vertexNormals[1].copy(f),x.vertexNormals[2].copy(g),t.vertexNormals[0].copy(f),t.vertexNormals[3].copy(g)),4===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),x.vertexColors[1].copy(f),x.vertexColors[2].copy(g),t.vertexColors[0].copy(f),t.vertexColors[3].copy(g)),e=0):(s=l.clone(),s.lerpSelf(m,0.5),l=p.clone(),l.lerpSelf(k,0.5),x.a=f,x.b=g,x.c=u,x.d=w,t.a=w,t.b=
u,t.c=h,t.d=j,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),x.vertexNormals[2].copy(f),x.vertexNormals[3].copy(g),t.vertexNormals[0].copy(g),t.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),x.vertexColors[2].copy(f),x.vertexColors[3].copy(g),t.vertexColors[0].copy(g),
t.vertexColors[1].copy(f)),e=1);D.push(x,t);a.vertices.push(s,l);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],t=k[0],h=k[1],x=k[2],k=k[3],0===e?(l=t.clone(),l.lerpSelf(h,0.5),m=x.clone(),m.lerpSelf(k,0.5),t=[t.clone(),l.clone(),m.clone(),k.clone()],h=[l.clone(),h.clone(),x.clone(),m.clone()]):(l=h.clone(),l.lerpSelf(x,0.5),m=k.clone(),m.lerpSelf(t,0.5),t=[t.clone(),h.clone(),l.clone(),m.clone()],h=[m.clone(),l.clone(),x.clone(),k.clone()]),z[f].push(t,
h))}else{D.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)z[f].push(a.faceVertexUvs[f][c])}a.faces=D;a.faceVertexUvs=z},setMaterialIndex:function(a,b,c,d){a=a.faces;d=d||a.length-1;for(c=c||0;c<=d;c++)a[c].materialIndex=b}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b);b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);f.sourceFile=a;return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;b=0;for(var g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var g=0,h=a.length;g<h;++g){var j={};
e[g]=j;var k=new XMLHttpRequest;k.onload=b(k,j);k.onerror=d;j=a[g];k.open("GET",j,!0);k.responseType="arraybuffer";k.send(null)}else k=new XMLHttpRequest,k.onload=function(){var a=THREE.ImageUtils.parseDDS(k.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){e[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}f.format=a.format;f.needsUpdate=!0;c&&c(f)}},k.onerror=
d,k.open("GET",a,!0),k.responseType="arraybuffer",k.send(null);return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var j=h[21];switch(j){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(j&255,j>>8&255,j>>16&255,j>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.isCubemap=h[28]&512?!0:!1;d.width=h[4];d.height=h[3];for(var h=h[1]+4,f=d.width,g=d.height,j=d.isCubemap?
6:1,k=0;k<j;k++){for(var l=0;l<d.mipmapCount;l++){var m=Math.max(4,f)/4*Math.max(4,g)/4*e,p={data:new Uint8Array(a,h,m),width:f,height:g};d.mipmaps.push(p);h+=m;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}f=d.width;g=d.height}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,
0,d,e).data,j=g.createImageData(d,e),k=j.data,l=0;l<d;l++)for(var m=0;m<e;m++){var p=0>m-1?0:m-1,s=m+1>e-1?e-1:m+1,r=0>l-1?0:l-1,q=l+1>d-1?d-1:l+1,v=[],u=[0,0,h[4*(m*d+l)]/255*b];v.push([-1,0,h[4*(m*d+r)]/255*b]);v.push([-1,-1,h[4*(p*d+r)]/255*b]);v.push([0,-1,h[4*(p*d+l)]/255*b]);v.push([1,-1,h[4*(p*d+q)]/255*b]);v.push([1,0,h[4*(m*d+q)]/255*b]);v.push([1,1,h[4*(s*d+q)]/255*b]);v.push([0,1,h[4*(s*d+l)]/255*b]);v.push([-1,1,h[4*(s*d+r)]/255*b]);p=[];r=v.length;for(s=0;s<r;s++){var q=v[s],w=v[(s+1)%
r],q=[q[0]-u[0],q[1]-u[1],q[2]-u[2]],w=[w[0]-u[0],w[1]-u[1],w[2]-u[2]];p.push(c([q[1]*w[2]-q[2]*w[1],q[2]*w[0]-q[0]*w[2],q[0]*w[1]-q[1]*w[0]]))}v=[0,0,0];for(s=0;s<p.length;s++)v[0]+=p[s][0],v[1]+=p[s][1],v[2]+=p[s][2];v[0]/=p.length;v[1]/=p.length;v[2]/=p.length;u=4*(m*d+l);k[u]=255*((v[0]+1)/2)|0;k[u+1]=255*((v[1]+1)/2)|0;k[u+2]=255*v[2]|0;k[u+3]=255}g.putImageData(j,0,0);return f},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=
Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvReflect = reflect( I, worldNormal );\nvRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_AREA_LIGHTS > 0\nuniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightNormal[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightRight[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightUp[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightSize[ MAX_AREA_LIGHTS ];\nuniform vec3 areaLightAttenuation[ MAX_AREA_LIGHTS ];\n#ifdef AREA_TEXTURE\nuniform sampler2D areaLightTexture[ MAX_AREA_LIGHTS ];\n#endif\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.area_lights_utils,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_AREA_LIGHTS > 0\nvec3 areaDiffuse  = vec3( 0.0 );\nvec3 areaSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\nfloat w = areaLightSize[ i ].x;\nfloat h = areaLightSize[ i ].y;\nvec3 vertexPosition = -vViewPosition.xyz;\nvec3 proj = projectOnPlane( vertexPosition, areaLightPosition[ i ], areaLightNormal[ i ] );\nvec3 dir = proj - areaLightPosition[ i ];\nvec2 diagonal = vec2( dot( dir, areaLightRight[ i ] ), dot( dir, areaLightUp[ i ] ) );\nvec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );\nvec3 nearestPointInside = areaLightPosition[ i ] + ( areaLightRight[ i ] * nearest2D.x + areaLightUp[ i ] * nearest2D.y );\nvec3 lightDir = normalize( nearestPointInside - vertexPosition );\nfloat NdotL = max( dot( areaLightNormal[ i ], -lightDir ), 0.0 );\nfloat NdotL2 = max( dot( normal, lightDir ), 0.0 );\nvec3 areaDiffuseWeight = vec3( sqrt( NdotL * NdotL2 ) );\nfloat dist = distance( vertexPosition, nearestPointInside );\nfloat attenuation = calculateAttenuation( dist, areaLightAttenuation[ i ].x, areaLightAttenuation[ i ].y, areaLightAttenuation[ i ].z );\nvec3 areaDiffuseTerm = uDiffuseColor * areaDiffuseWeight * areaLightColor[ i ] * attenuation;\n#ifdef AREA_TEXTURE\nif ( areaLightSize[ i ].z > 0.0 ) {\nfloat d = distance( vertexPosition, nearestPointInside );\nvec2 co = ( diagonal.xy + vec2( w, h ) ) / ( 2.0 * vec2( w, h ) );\nco.y = 1.0 - co.y;\nvec3 ve = vertexPosition - areaLightPosition[ i ];\nvec4 diff = vec4( 0.0 );\nif ( dot( ve, areaLightNormal[ i ] ) < 0.0 ) {\ndiff = vec4( 0.0 );\n} else {\nfloat lod = max( pow( d, 0.1 ), 0.0 ) * 5.0;\nvec4 t00 = texture2D( areaLightTexture[ i ], co, lod );\nvec4 t01 = texture2D( areaLightTexture[ i ], co, lod + 1.0 );\ndiff = mix( t00, t01, 0.5 );\n}\nareaDiffuseTerm *= diff.xyz;\n}\n#endif\nareaDiffuse += areaDiffuseTerm;\nvec3 R = reflect( normalize( -vertexPosition ), normal );\nvec3 E = linePlaneIntersect( vertexPosition, R, areaLightPosition[ i ], areaLightNormal[ i ] );\nfloat specAngle = dot( R, areaLightNormal[ i ] );\nif ( dot( vertexPosition - areaLightPosition[ i ], areaLightNormal[ i ] ) >= 0.0 && specAngle > 0.0 ) {\nvec3 dirSpec = E - areaLightPosition[ i ];\nvec2 dirSpec2D = vec2( dot( dirSpec, areaLightRight[ i ] ), dot( dirSpec, areaLightUp[ i ] ) );\nvec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -w, w ), clamp( dirSpec2D.y, -h, h ) );\nfloat specFactor = 1.0 - clamp( length( nearestSpec2D - dirSpec2D ) * 0.05 * uShininess, 0.0, 1.0 );\nvec3 areaSpecularWeight = specFactor * specAngle * areaDiffuseWeight;\nvec3 areaSpecularTerm = uSpecularColor * areaSpecularWeight * areaLightColor[ i ] * attenuation;\n#ifdef AREA_TEXTURE\nif ( areaLightSize[ i ].z > 0.0 ) {\nfloat hard = 16.0;\nfloat gloss = 16.0;\nvec3 specPlane = areaLightPosition[ i ] + ( areaLightRight[ i ] * dirSpec2D.x + areaLightUp[ i ] * dirSpec2D.y );\nfloat dist = max( distance( vertexPosition, specPlane ), 0.0 );\nfloat d = ( ( 1.0 / hard ) / 2.0 ) * ( dist / gloss );\nw = max( w, 0.0 );\nh = max( h, 0.0 );\nvec2 co = dirSpec2D / ( d + 1.0 );\nco /= 2.0 * vec2( w, h );\nco = co + vec2( 0.5 );\nco.y = 1.0 - co.y;\nfloat lod = ( 2.0 / hard * max( dist, 0.0 ) );\nvec4 t00 = texture2D( areaLightTexture[ i ], co, lod );\nvec4 t01 = texture2D( areaLightTexture[ i ], co, lod + 1.0 );\nvec4 spec = mix( t00, t01, 0.5 );\nareaSpecularTerm *= spec.xyz;\n}\n#endif\nareaSpecular += areaSpecularTerm;\n}\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#if MAX_AREA_LIGHTS > 0\ntotalDiffuse += areaDiffuse;\ntotalSpecular += areaSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"}}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=
String(a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,j,k,l,m,p,s,r,q,v,u=b.glyphs[a]||b.glyphs["?"];if(u){if(u.o){b=u._cachedOutline||(u._cachedOutline=u.o.split(" "));k=b.length;for(a=0;a<k;)switch(j=b[a++],j){case "m":j=b[a++]*c+d;l=b[a++]*c;e.moveTo(j,l);break;case "l":j=b[a++]*c+d;l=b[a++]*c;e.lineTo(j,l);break;case "q":j=b[a++]*
c+d;l=b[a++]*c;s=b[a++]*c+d;r=b[a++]*c;e.quadraticCurveTo(s,r,j,l);if(g=f[f.length-1]){m=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++){var w=g/h;THREE.Shape.Utils.b2(w,m,s,j);THREE.Shape.Utils.b2(w,p,r,l)}}break;case "b":if(j=b[a++]*c+d,l=b[a++]*c,s=b[a++]*c+d,r=b[a++]*-c,q=b[a++]*c+d,v=b[a++]*-c,e.bezierCurveTo(j,l,s,r,q,v),g=f[f.length-1]){m=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++)w=g/h,THREE.Shape.Utils.b3(w,m,s,q,j),THREE.Shape.Utils.b3(w,p,r,v,l)}}}return{offset:u.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],j,k,l;if(0<b(a))for(k=0;k<e;k++)g[k]=k;else for(k=0;k<e;k++)g[k]=e-1-k;var m=2*e;for(k=e-1;2<e;){if(0>=m--){console.log("Warning, unable to triangulate polygon!");break}j=k;e<=j&&(j=0);k=j+1;e<=k&&(k=0);l=k+1;e<=l&&(l=0);var p;a:{var s=p=void 0,r=void 0,q=void 0,v=void 0,u=void 0,w=void 0,x=void 0,t=
void 0,s=a[g[j]].x,r=a[g[j]].y,q=a[g[k]].x,v=a[g[k]].y,u=a[g[l]].x,w=a[g[l]].y;if(1E-10>(q-s)*(w-r)-(v-r)*(u-s))p=!1;else{var D=void 0,z=void 0,y=void 0,A=void 0,G=void 0,H=void 0,J=void 0,T=void 0,E=void 0,O=void 0,E=T=J=t=x=void 0,D=u-q,z=w-v,y=s-u,A=r-w,G=q-s,H=v-r;for(p=0;p<e;p++)if(!(p===j||p===k||p===l))if(x=a[g[p]].x,t=a[g[p]].y,J=x-s,T=t-r,E=x-q,O=t-v,x-=u,t-=w,E=D*O-z*E,J=G*T-H*J,T=y*t-A*x,0<=E&&0<=T&&0<=J){p=!1;break a}p=!0}}if(p){f.push([a[g[j]],a[g[k]],a[g[l]]]);h.push([g[j],g[k],g[l]]);
j=k;for(l=k+1;l<e;j++,l++)g[j]=g[l];e--;m=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,j;g<=h;)if(d=Math.floor(g+(h-g)/2),j=c[d]-f,0>j)g=d+1;else if(0<j)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=0.5*(c-a);d=0.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,j,k,l,m=a[0]instanceof THREE.Vector3;l=m?new THREE.Vector3:new THREE.Vector2;j=0;for(k=a.length;j<k;j++)h=a[j],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),m&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),l.addSelf(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:l.divideScalar(k)};m&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,j;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,j=g/c.maxX,j=b.getUtoTmapping(j,g),g=b.getPoint(j),h=b.getNormalVector(j).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(j);j=j.getPoint(g?1:0);h.push(j.x);h.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,j,k,l,m,p,s,r,q;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];j=f[3];m=f[0];p=f[1];0<c.length?(g=c[c.length-1],s=g.x,
r=g.y):(g=this.actions[d-1].args,s=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)q=f/a,g=THREE.Shape.Utils.b2(q,s,m,h),q=THREE.Shape.Utils.b2(q,r,p,j),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];j=f[5];m=f[0];p=f[1];k=f[2];l=f[3];0<c.length?(g=c[c.length-1],s=g.x,r=g.y):(g=this.actions[d-1].args,s=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)q=f/a,g=THREE.Shape.Utils.b3(q,s,m,k,h),q=THREE.Shape.Utils.b3(q,r,p,l,j),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;q=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;q=q.concat(f[0]);q=new THREE.SplineCurve(q);for(f=1;f<=g;f++)c.push(q.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];j=f[1];p=f[2];k=f[3];g=f[4];m=!!f[5];s=g-k;r=2*a;for(f=1;f<=r;f++)q=f/r,m||(q=1-q),q=k+q*s,g=h+p*Math.cos(q),q=j+p*Math.sin(q),c.push(new THREE.Vector2(g,q));break;case THREE.PathActions.ELLIPSE:h=f[0];j=f[1];p=f[2];l=f[3];k=f[4];g=f[5];m=!!f[6];s=g-k;r=2*a;for(f=1;f<=r;f++)q=f/r,m||
(q=1-q),q=k+q*s,g=h+p*Math.cos(q),q=j+l*Math.sin(q),c.push(new THREE.Vector2(g,q))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};
THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};
THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,j,k,l,m,p,s,r=[];for(j=0;j<b.length;j++){k=b[j];Array.prototype.push.apply(d,k);f=Number.POSITIVE_INFINITY;for(e=0;e<k.length;e++){p=k[e];s=[];for(m=0;m<c.length;m++)l=c[m],l=p.distanceToSquared(l),s.push(l),l<f&&(f=l,g=e,h=m)}e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;var q=[k[g],c[h],c[e]];m=THREE.FontUtils.Triangulate.area(q);var v=[k[g],k[f],c[h]];p=THREE.FontUtils.Triangulate.area(v);s=h;l=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;q=[k[g],c[h],c[e]];q=THREE.FontUtils.Triangulate.area(q);v=[k[g],k[f],c[h]];v=THREE.FontUtils.Triangulate.area(v);m+p>q+v&&(h=s,g=l,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:k.length-1);m=c.slice(0,h);p=c.slice(h);s=k.slice(g);l=k.slice(0,g);f=[k[g],k[f],c[h]];r.push([k[g],c[h],c[e]]);r.push(f);c=m.concat(s).concat(l).concat(p)}return{shape:c,
isolatedPts:r,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,j,k={};f=0;for(g=d.length;f<g;f++)j=d[f].x+":"+d[f].y,void 0!==k[j]&&console.log("Duplicate point",j),k[j]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++){var k=a.hierarchy[c].keys[d].morphTargets[j];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var l={};for(k in h){for(j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++)if(a.hierarchy[c].keys[d].morphTargets[j]===k){l[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[j];break}j===a.hierarchy[c].keys[d].morphTargets.length&&(l[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=l}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,j,k,l;l=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,p=this.hierarchy.length;m<p;m++){a=this.hierarchy[m];j=a.animationCache;for(var s=0;3>s;s++){c=b[s];g=j.prevKey[c];h=j.nextKey[c];if(h.time<=l){if(k<l)if(this.loop){g=this.data.hierarchy[m].keys[0];for(h=this.getNextKeyWith(c,m,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,m,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,m,h.index+1);while(h.time<k)}j.prevKey[c]=g;j.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+m),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+
(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",m,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",m,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,j,k;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];j=a[c[2]];k=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],j[0],k[0],e,c,g);d[1]=this.interpolate(f[1],h[1],j[1],k[1],e,c,g);d[2]=this.interpolate(f[2],h[2],j[2],k[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,j;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((j=g<h)&&!this.loop){a=0;for(var k=this.hierarchy.length;a<k;a++){var l=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=l.length-1;e=this.hierarchy[a];if(l.length){for(l=
0;l<f.length;l++)g=f[l],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var l=b.keys,m=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(l.length){this.JITCompile&&m&&(d instanceof
THREE.Bone?d.skinMatrix=m.originalMatrix:d.matrix=m.originalMatrix);b=m.prevKey;c=m.nextKey;if(b&&c){if(c.time<=h){if(j&&this.loop){b=l[0];for(c=l[1];c.time<g;)b=c,c=l[b.index+1]}else if(!j)for(var p=l.length-1;c.time<g&&c.index!==p;)b=c,c=l[b.index+1];m.prevKey=b;m.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var j=new THREE.PerspectiveCamera(90,1,a,b);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,p=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=p;c.activeCubeFace=5;a.render(b,j,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.AsteriskGeometry=function(a,b){THREE.Geometry.call(this);for(var c=0.707*a,d=0.707*b,c=[[a,0,0],[b,0,0],[-a,0,0],[-b,0,0],[0,a,0],[0,b,0],[0,-a,0],[0,-b,0],[0,0,a],[0,0,b],[0,0,-a],[0,0,-b],[c,c,0],[d,d,0],[-c,-c,0],[-d,-d,0],[c,-c,0],[d,-d,0],[-c,c,0],[-d,d,0],[c,0,c],[d,0,d],[-c,0,-c],[-d,0,-d],[c,0,-c],[d,0,-d],[-c,0,c],[-d,0,d],[0,c,c],[0,d,d],[0,-c,-c],[0,-d,-d],[0,c,-c],[0,d,-d],[0,-c,c],[0,-d,d]],d=0,e=c.length;d<e;d++)this.vertices.push(new THREE.Vector3(c[d][0],c[d][1],c[d][2]))};
THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);a=a||50;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;b=void 0!==b?Math.max(3,b):8;var e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.Vector2((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),
this.faceVertexUvs[0].push([f[e],f[e+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,q){var v,u=h.widthSegments,w=h.heightSegments,x=e/2,t=f/2,D=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)v="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)v="y",w=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)v="x",u=h.depthSegments;var z=u+1,y=w+1,A=e/u,G=f/w,H=new THREE.Vector3;H[v]=0<g?1:-1;for(e=0;e<y;e++)for(f=0;f<z;f++){var J=new THREE.Vector3;J[a]=(f*A-x)*c;J[b]=(e*G-t)*d;J[v]=g;h.vertices.push(J)}for(e=
0;e<w;e++)for(f=0;f<u;f++)a=new THREE.Face4(f+z*e+D,f+z*(e+1)+D,f+1+z*(e+1)+D,f+1+z*e+D),a.normal.copy(H),a.vertexNormals.push(H.clone(),H.clone(),H.clone(),H.clone()),a.materialIndex=q,h.faces.push(a),h.faceVertexUvs[0].push([new THREE.Vector2(f/u,1-e/w),new THREE.Vector2(f/u,1-(e+1)/w),new THREE.Vector2((f+1)/u,1-(e+1)/w),new THREE.Vector2((f+1)/u,1-e/w)])}THREE.Geometry.call(this);var h=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=
f||1;a=this.width/2;b=this.height/2;c=this.depth/2;g("z","y",-1,-1,this.depth,this.height,a,0);g("z","y",1,-1,this.depth,this.height,-a,1);g("x","z",1,1,this.width,this.depth,b,2);g("x","z",1,-1,this.width,this.depth,-b,3);g("x","y",1,-1,this.width,this.height,c,4);g("x","y",-1,-1,this.width,this.height,-c,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;e=e||1;var h,j,k=[],l=[];for(j=0;j<=e;j++){var m=[],p=[],s=j/e,r=s*(b-a)+a;for(h=0;h<=d;h++){var q=h/d,v=new THREE.Vector3;v.x=r*Math.sin(2*q*Math.PI);v.y=-s*c+g;v.z=r*Math.cos(2*q*Math.PI);this.vertices.push(v);m.push(this.vertices.length-1);p.push(new THREE.Vector2(q,1-s))}k.push(m);l.push(p)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(m=this.vertices[k[0][h]].clone(),
p=this.vertices[k[0][h+1]].clone()):(m=this.vertices[k[1][h]].clone(),p=this.vertices[k[1][h+1]].clone());m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*c).normalize();for(j=0;j<e;j++){var s=k[j][h],r=k[j+1][h],q=k[j+1][h+1],v=k[j][h+1],u=m.clone(),w=m.clone(),x=p.clone(),t=p.clone(),D=l[j][h].clone(),z=l[j+1][h].clone(),y=l[j+1][h+1].clone(),A=l[j][h+1].clone();this.faces.push(new THREE.Face4(s,r,q,v,[u,w,x,t]));this.faceVertexUvs[0].push([D,z,y,A])}}if(!f&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)s=k[0][h],r=k[0][h+1],q=this.vertices.length-1,u=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),D=l[0][h].clone(),z=l[0][h+1].clone(),y=new THREE.Vector2(z.u,0),this.faces.push(new THREE.Face3(s,r,q,[u,w,x])),this.faceVertexUvs[0].push([D,z,y])}if(!f&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)s=k[j][h+1],r=k[j][h],q=this.vertices.length-1,u=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,
-1,0),x=new THREE.Vector3(0,-1,0),D=l[j][h+1].clone(),z=l[j][h].clone(),y=new THREE.Vector2(z.u,1),this.faces.push(new THREE.Face3(s,r,q,[u,w,x])),this.faceVertexUvs[0].push([D,z,y])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,j=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);j.copy(a).addSelf(g);if(h.equals(j))return g.clone();
h.copy(b).addSelf(f);j.copy(c).addSelf(g);f=d.dot(g);g=j.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),a=new THREE.Vector2(a,c)):a=d.multiplyScalar(g).addSelf(h).subSelf(a).clone();return a}function e(c,d){var e,f;for(I=c.length;0<=--I;){e=I;f=I-1;0>f&&(f=c.length-
1);for(var g=0,h=s+2*l,g=0;g<h;g++){var j=S*g,k=S*(g+1),m=d+e+j,j=d+f+j,p=d+f+k,k=d+e+k,q=c,r=g,t=h,u=e,v=f,m=m+T,j=j+T,p=p+T,k=k+T;J.faces.push(new THREE.Face4(m,j,p,k,null,null,w));m=x.generateSideWallUV(J,a,q,b,m,j,p,k,r,t,u,v);J.faceVertexUvs[0].push(m)}}}function f(a,b,c){J.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=T;d+=T;e+=T;J.faces.push(new THREE.Face3(c,d,e,null,null,u));c=f?x.generateBottomUV(J,a,b,c,d,e):x.generateTopUV(J,a,b,c,d,e);J.faceVertexUvs[0].push(c)}var h=
void 0!==b.amount?b.amount:100,j=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:j-2,l=void 0!==b.bevelSegments?b.bevelSegments:3,m=void 0!==b.bevelEnabled?b.bevelEnabled:!0,p=void 0!==b.curveSegments?b.curveSegments:12,s=void 0!==b.steps?b.steps:1,r=b.extrudePath,q,v=!1,u=b.material,w=b.extrudeMaterial,x=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,t,D,z,y;r&&(q=r.getSpacedPoints(s),v=!0,m=!1,t=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,
s,!1),D=new THREE.Vector3,z=new THREE.Vector3,y=new THREE.Vector3);m||(k=j=l=0);var A,G,H,J=this,T=this.vertices.length,p=a.extractPoints(p),E=p.shape,p=p.holes;if(r=!THREE.Shape.Utils.isClockWise(E)){E=E.reverse();G=0;for(H=p.length;G<H;G++)A=p[G],THREE.Shape.Utils.isClockWise(A)&&(p[G]=A.reverse());r=!1}var O=THREE.Shape.Utils.triangulateShape(E,p),r=E;G=0;for(H=p.length;G<H;G++)A=p[G],E=E.concat(A);var F,L,P,U,S=E.length,da=O.length,R=[],I=0,N=r.length;F=N-1;for(L=I+1;I<N;I++,F++,L++)F===N&&(F=
0),L===N&&(L=0),R[I]=d(r[I],r[F],r[L]);var wa=[],Q,Aa=R.concat();G=0;for(H=p.length;G<H;G++){A=p[G];Q=[];I=0;N=A.length;F=N-1;for(L=I+1;I<N;I++,F++,L++)F===N&&(F=0),L===N&&(L=0),Q[I]=d(A[I],A[F],A[L]);wa.push(Q);Aa=Aa.concat(Q)}for(F=0;F<l;F++){A=F/l;P=j*(1-A);L=k*Math.sin(A*Math.PI/2);I=0;for(N=r.length;I<N;I++)U=c(r[I],R[I],L),f(U.x,U.y,-P);G=0;for(H=p.length;G<H;G++){A=p[G];Q=wa[G];I=0;for(N=A.length;I<N;I++)U=c(A[I],Q[I],L),f(U.x,U.y,-P)}}L=k;for(I=0;I<S;I++)U=m?c(E[I],Aa[I],L):E[I],v?(z.copy(t.normals[0]).multiplyScalar(U.x),
D.copy(t.binormals[0]).multiplyScalar(U.y),y.copy(q[0]).addSelf(z).addSelf(D),f(y.x,y.y,y.z)):f(U.x,U.y,0);for(A=1;A<=s;A++)for(I=0;I<S;I++)U=m?c(E[I],Aa[I],L):E[I],v?(z.copy(t.normals[A]).multiplyScalar(U.x),D.copy(t.binormals[A]).multiplyScalar(U.y),y.copy(q[A]).addSelf(z).addSelf(D),f(y.x,y.y,y.z)):f(U.x,U.y,h/s*A);for(F=l-1;0<=F;F--){A=F/l;P=j*(1-A);L=k*Math.sin(A*Math.PI/2);I=0;for(N=r.length;I<N;I++)U=c(r[I],R[I],L),f(U.x,U.y,h+P);G=0;for(H=p.length;G<H;G++){A=p[G];Q=wa[G];I=0;for(N=A.length;I<
N;I++)U=c(A[I],Q[I],L),v?f(U.x,U.y+q[s-1].y,q[s-1].x+P):f(U.x,U.y,h+P)}}if(m){j=0*S;for(I=0;I<da;I++)h=O[I],g(h[2]+j,h[1]+j,h[0]+j,!0);j=S*(s+2*l);for(I=0;I<da;I++)h=O[I],g(h[0]+j,h[1]+j,h[2]+j,!1)}else{for(I=0;I<da;I++)h=O[I],g(h[2],h[1],h[0],!0);for(I=0;I<da;I++)h=O[I],g(h[0]+S*s,h[1]+S*s,h[2]+S*s,!1)}h=0;e(r,h);h+=r.length;G=0;for(H=p.length;G<H;G++)A=p[G],e(A,h),h+=A.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,e),new THREE.Vector2(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;var j=a.vertices[f].y;f=a.vertices[f].z;var k=a.vertices[g].x,
l=a.vertices[g].y;g=a.vertices[g].z;var m=a.vertices[h].x,p=a.vertices[h].y;a=a.vertices[h].z;return 0.01>Math.abs(c-j)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-f),new THREE.Vector2(k,1-g),new THREE.Vector2(m,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(j,1-f),new THREE.Vector2(l,1-g),new THREE.Vector2(p,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var j=e.shape,k=e.holes;if(!THREE.Shape.Utils.isClockWise(j)){j=j.reverse();e=0;for(f=k.length;e<f;e++)g=k[e],THREE.Shape.Utils.isClockWise(g)&&(k[e]=g.reverse())}var l=THREE.Shape.Utils.triangulateShape(j,k);e=0;for(f=k.length;e<f;e++)g=k[e],
j=j.concat(g);k=j.length;f=l.length;for(e=0;e<k;e++)g=j[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)k=l[e],j=k[0]+h,g=k[1]+h,k=k[2]+h,this.faces.push(new THREE.Face3(j,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,j,g,k))};THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);var g=b+1;for(c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.Vector2(1-c/b,d/e),new THREE.Vector2(1-
(c+1)/b,d/e),new THREE.Vector2(1-(c+1)/b,(d+1)/e),new THREE.Vector2(1-c/b,(d+1)/e)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;c=a/2;var e=b/2;d=this.widthSegments;var f=this.heightSegments,g=d+1,h=f+1,j=this.width/d,k=this.height/f,l=new THREE.Vector3(0,0,1);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*j-c,-(a*k-e),0));for(a=0;a<f;a++)for(b=0;b<d;b++)c=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),c.normal.copy(l),c.vertexNormals.push(l.clone(),l.clone(),
l.clone(),l.clone()),this.faces.push(c),this.faceVertexUvs[0].push([new THREE.Vector2(b/d,1-a/f),new THREE.Vector2(b/d,1-(a+1)/f),new THREE.Vector2((b+1)/d,1-(a+1)/f),new THREE.Vector2((b+1)/d,1-a/f)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.radius=a||50;this.widthSegments=Math.max(3,Math.floor(b)||8);this.heightSegments=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=[],j=[];for(c=0;c<=this.heightSegments;c++){var k=[],l=[];for(b=0;b<=this.widthSegments;b++){var m=b/this.widthSegments,p=c/this.heightSegments,s=new THREE.Vector3;s.x=-this.radius*Math.cos(d+m*e)*Math.sin(f+p*g);s.y=this.radius*
Math.cos(f+p*g);s.z=this.radius*Math.sin(d+m*e)*Math.sin(f+p*g);this.vertices.push(s);k.push(this.vertices.length-1);l.push(new THREE.Vector2(m,1-p))}h.push(k);j.push(l)}for(c=0;c<this.heightSegments;c++)for(b=0;b<this.widthSegments;b++){d=h[c][b+1];e=h[c][b];f=h[c+1][b];g=h[c+1][b+1];var k=this.vertices[d].clone().normalize(),l=this.vertices[e].clone().normalize(),m=this.vertices[f].clone().normalize(),p=this.vertices[g].clone().normalize(),s=j[c][b+1].clone(),r=j[c][b].clone(),q=j[c+1][b].clone(),
v=j[c+1][b+1].clone();Math.abs(this.vertices[d].y)===this.radius?(this.faces.push(new THREE.Face3(d,f,g,[k,m,p])),this.faceVertexUvs[0].push([s,q,v])):Math.abs(this.vertices[f].y)===this.radius?(this.faces.push(new THREE.Face3(d,e,f,[k,l,m])),this.faceVertexUvs[0].push([s,r,q])):(this.faces.push(new THREE.Face4(d,e,f,g,[k,l,m,p])),this.faceVertexUvs[0].push([s,r,q,v]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};
THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.Vector2(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){e=(this.tubularSegments+1)*c+d-1;var f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,j=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);j.normal.addSelf(b[e]);j.normal.addSelf(b[f]);j.normal.addSelf(b[g]);
j.normal.addSelf(b[h]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var j=2*(a/this.radialSegments)*this.p*Math.PI;g=2*(b/this.tubularSegments)*Math.PI;f=h(j,g,this.q,this.p,this.radius,this.heightScale);j=h(j+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(j,f);d.add(j,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();j=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=j*d.x+g*e.x;f.y+=j*d.y+g*e.y;f.z+=j*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}}for(a=
0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){e=(a+1)%this.radialSegments;f=(b+1)%this.tubularSegments;c=this.grid[a][b];d=this.grid[e][b];e=this.grid[e][f];f=this.grid[a][f];g=new THREE.Vector2(a/this.radialSegments,b/this.tubularSegments);var j=new THREE.Vector2((a+1)/this.radialSegments,b/this.tubularSegments),k=new THREE.Vector2((a+1)/this.radialSegments,(b+1)/this.tubularSegments),l=new THREE.Vector2(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,
d,e,f));this.faceVertexUvs[0].push([g,j,k,l])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h;e=this.segments+1;var j,k,l;f=new THREE.Vector3;var m,p,s;b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);m=b.tangents;p=b.normals;s=b.binormals;this.tangents=m;this.normals=p;this.binormals=s;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);l=a.getPointAt(d);d=m[b];
g=p[b];h=s[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,l,c,255)),this.debug.add(new THREE.ArrowHelper(g,l,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,l,c,65280)));for(d=0;d<this.radiusSegments;d++)j=2*(d/this.radiusSegments)*Math.PI,k=-this.radius*Math.cos(j),j=this.radius*Math.sin(j),f.copy(l),f.x+=k*g.x+j*h.x,f.y+=k*g.y+j*h.y,f.z+=k*g.z+j*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)e=this.closed?
(b+1)%this.segments:b+1,f=(d+1)%this.radiusSegments,a=this.grid[b][d],c=this.grid[e][d],e=this.grid[e][f],f=this.grid[b][f],m=new THREE.Vector2(b/this.segments,d/this.radiusSegments),p=new THREE.Vector2((b+1)/this.segments,d/this.radiusSegments),s=new THREE.Vector2((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.Vector2(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,e,f)),this.faceVertexUvs[0].push([m,p,s,g]);this.computeCentroids();this.computeFaceNormals();
this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,j=new THREE.Matrix4;b+=1;var k,l,m;this.tangents=e;this.normals=f;this.binormals=g;for(k=0;k<b;k++)l=k/(b-1),e[k]=a.getTangentAt(l),e[k].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(e[0].x);l=Math.abs(e[0].y);m=Math.abs(e[0].z);k<=a&&(a=k,d.set(1,0,0));l<=a&&(a=l,d.set(0,1,0));m<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(k=1;k<b;k++)f[k]=f[k-1].clone(),g[k]=g[k-1].clone(),h.cross(e[k-1],e[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[k-1].dot(e[k])),j.makeRotationAxis(h,d).multiplyVector3(f[k])),g[k].cross(e[k],f[k]);if(c){d=Math.acos(f[0].dot(f[b-1]));d/=b-1;0<e[0].dot(h.cross(f[0],f[b-1]))&&(d=-d);for(k=1;k<b;k++)j.makeRotationAxis(e[k],d*k).multiplyVector3(f[k]),g[k].cross(e[k],f[k])}};THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=j.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),j.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
j.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){m[a.index]||(m[a.index]=[]);m[b.index]||(m[b.index]=[]);var c=m[a.index][b.index];void 0===c&&(m[a.index][b.index]=m[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+0.5,a.y));return a}
THREE.Geometry.call(this);c=c||1;d=d||0;for(var j=this,k=0,l=a.length;k<l;k++)e(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));var m=[];a=this.vertices;k=0;for(l=b.length;k<l;k++)f(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(l=this.vertices.length;k<l;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var h,j,k,l,m=b+1;for(h=0;h<=c;h++){l=h/c;for(j=0;j<=b;j++)k=j/b,k=a(k,l),e.push(k)}var p,s,r,q;for(h=0;h<c;h++)for(j=0;j<b;j++)a=h*m+j,e=h*m+j+1,l=(h+1)*m+j,k=(h+1)*m+j+1,p=new THREE.Vector2(j/b,h/c),s=new THREE.Vector2((j+1)/b,h/c),r=new THREE.Vector2(j/b,(h+1)/c),q=new THREE.Vector2((j+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(a,e,l)),f.push(new THREE.Face3(e,
k,l)),g.push([p,s,r]),g.push([s,q,r])):(f.push(new THREE.Face4(a,e,k,l)),g.push([p,s,q,r]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.Vector2(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x+=g*2E-6*(Math.random()-0.5);f.y+=g*2E-6*(Math.random()-0.5);f.z+=g*2E-6*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var j=c[h],k=f,l=a[j[0]],m=a[j[1]],p=a[j[2]],s=new THREE.Vector3,r=new THREE.Vector3;s.sub(p,m);r.sub(l,m);s.crossSelf(r);s.normalize();l=s.dot(l);if(s.dot(k)>=l){for(k=
0;3>k;k++){s=[j[k],j[(k+1)%3]];l=!0;for(m=0;m<g.length;m++)if(g[m][0]===s[1]&&g[m][1]===s[0]){g[m]=g[g.length-1];g.pop();l=!1;break}l&&g.push(s)}c[h]=c[c.length-1];c.pop()}else h++}for(m=0;m<g.length;m++)c.push([g[m][0],g[m][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===f[g[h]]&&(f[g[h]]=e++,this.vertices.push(a[g[h]])),g[h]=f[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=this.faces[d],
this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;THREE.DirectionalLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.sub(a.target.position,a.position);this.color=a.color.clone();var d=THREE.Math.clamp(a.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;var d=this.color.getHex(),e=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1});
this.lightArrow=new THREE.ArrowHelper(this.direction,null,c,d);this.lightSphere=new THREE.Mesh(e,g);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=!1;this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.add(this.lightArrow);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;a.target.properties.targetInverse&&(b=new THREE.SphereGeometry(b,
8,4),c=new THREE.MeshBasicMaterial({color:d,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(b,c),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,a=new THREE.LineDashedMaterial({color:d,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),
d.computeLineDistances(),this.targetLine=new THREE.Line(d,a),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.color.copy(this.light.color);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);
this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};THREE.HemisphereLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;var d=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.r*=d;this.color.g*=d;this.color.b*=d;var e=this.color.getHex();this.groundColor=a.groundColor.clone();this.groundColor.r*=d;this.groundColor.g*=d;this.groundColor.b*=d;for(var d=this.groundColor.getHex(),f=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0,0.5*Math.PI),g=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0.5*
Math.PI,Math.PI),h=new THREE.MeshBasicMaterial({color:e,fog:!1}),j=new THREE.MeshBasicMaterial({color:d,fog:!1}),k=0,l=f.faces.length;k<l;k++)f.faces[k].materialIndex=0;k=0;for(l=g.faces.length;k<l;k++)g.faces[k].materialIndex=1;THREE.GeometryUtils.merge(f,g);this.lightSphere=new THREE.Mesh(f,new THREE.MeshFaceMaterial([h,j]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(b+c),0),c,e);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,
1,0),new THREE.Vector3(0,-1.1*(b+c),0),c,d);b=new THREE.Object3D;b.rotation.x=0.5*-Math.PI;b.add(this.lightSphere);b.add(this.lightArrow);b.add(this.lightArrowGround);this.add(b);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.groundColor.copy(this.light.groundColor);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.groundColor.r*=a;this.groundColor.g*=a;this.groundColor.b*=a;this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());
this.lookAt(this.target)};THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.color=a.color.clone();var c=THREE.Math.clamp(a.intensity,0,1);this.color.r*=c;this.color.g*=c;this.color.b*=c;var d=this.color.getHex(),c=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),f=new THREE.IcosahedronGeometry(1,2),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),d=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,
opacity:0.1,transparent:!0});this.lightSphere=new THREE.Mesh(c,g);this.lightRays=new THREE.Line(e,h,THREE.LinePieces);this.lightDistance=new THREE.Mesh(f,d);c=a.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};
THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointLightHelper.prototype.update=function(){this.color.copy(this.light.color);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);a=this.light.distance;0===a?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(a,a,a))};THREE.SpotLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.sub(a.target.position,a.position);this.color=a.color.clone();var d=THREE.Math.clamp(a.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;var d=this.color.getHex(),e=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.CylinderGeometry(1E-4,1,1,8,1,!0),h=new THREE.Matrix4;h.rotateX(-Math.PI/2);h.translate(new THREE.Vector3(0,
-0.5,0));g.applyMatrix(h);var j=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),k=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightArrow=new THREE.ArrowHelper(this.direction,null,c,d);this.lightSphere=new THREE.Mesh(e,j);this.lightCone=new THREE.Mesh(g,k);c=a.distance?a.distance:1E4;e=2*c*Math.tan(0.5*a.angle);this.lightCone.scale.set(e,e,c);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=
!1;this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightArrow);this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(a.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;a.target.properties.targetInverse&&(b=new THREE.SphereGeometry(b,8,4),f=new THREE.MeshBasicMaterial({color:d,
wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(b,f),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,a=new THREE.LineDashedMaterial({color:d,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),d.computeLineDistances(),this.targetLine=
new THREE.Line(d,a),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.lookAt(this.light.target.position);var a=this.light.distance?this.light.distance:1E4,b=2*a*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(b,b,a);this.color.copy(this.light.color);a=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=a;this.color.g*=a;this.color.b*=a;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);
this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var j=h[1];d[j]||(d[j]={start:Infinity,end:-Infinity});h=d[j];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=j)}}for(j in d)h=d[j],this.createAnimation(j,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";b.shaderSource(e,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,e,f,g,h,j,k,l,m,p,s;this.init=function(r){b=r.context;c=r;d=r.getPrecision();e=new Float32Array(16);f=new Uint16Array(6);r=0;e[r++]=-1;e[r++]=-1;
e[r++]=0;e[r++]=0;e[r++]=1;e[r++]=-1;e[r++]=1;e[r++]=0;e[r++]=1;e[r++]=1;e[r++]=1;e[r++]=1;e[r++]=-1;e[r++]=1;e[r++]=0;e[r++]=1;r=0;f[r++]=0;f[r++]=1;f[r++]=2;f[r++]=0;f[r++]=2;f[r++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);j=b.createTexture();k=b.createTexture();b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,k);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(l=!1,m=a(THREE.ShaderFlares.lensFlare,d)):(l=!0,m=a(THREE.ShaderFlares.lensFlareVertexTexture,d));p={};s={};p.vertex=b.getAttribLocation(m,"position");p.uv=b.getAttribLocation(m,"uv");s.renderType=b.getUniformLocation(m,"renderType");s.map=b.getUniformLocation(m,"map");s.occlusionMap=b.getUniformLocation(m,"occlusionMap");s.opacity=
b.getUniformLocation(m,"opacity");s.color=b.getUniformLocation(m,"color");s.scale=b.getUniformLocation(m,"scale");s.rotation=b.getUniformLocation(m,"rotation");s.screenPosition=b.getUniformLocation(m,"screenPosition")};this.render=function(a,d,e,f){a=a.__webglFlares;var w=a.length;if(w){var x=new THREE.Vector3,t=f/e,D=0.5*e,z=0.5*f,y=16/f,A=new THREE.Vector2(y*t,y),G=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1),J=s,y=p;b.useProgram(m);b.enableVertexAttribArray(p.vertex);b.enableVertexAttribArray(p.uv);
b.uniform1i(J.occlusionMap,0);b.uniform1i(J.map,1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(y.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(y.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.disable(b.CULL_FACE);b.depthMask(!1);var T,E,O,F,L;for(T=0;T<w;T++)if(y=16/f,A.set(y*t,y),F=a[T],x.set(F.matrixWorld.elements[12],F.matrixWorld.elements[13],F.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(x),d.projectionMatrix.multiplyVector3(x),G.copy(x),H.x=G.x*D+
D,H.y=G.y*z+z,l||0<H.x&&H.x<e&&0<H.y&&H.y<f){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,H.x-8,H.y-8,16,16,0);b.uniform1i(J.renderType,0);b.uniform2f(J.scale,A.x,A.y);b.uniform3f(J.screenPosition,G.x,G.y,G.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,k);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,H.x-8,H.y-8,16,16,0);b.uniform1i(J.renderType,1);b.disable(b.DEPTH_TEST);
b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,j);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);F.positionScreen.copy(G);F.customUpdateCallback?F.customUpdateCallback(F):F.updateLensFlares();b.uniform1i(J.renderType,2);b.enable(b.BLEND);E=0;for(O=F.lensFlares.length;E<O;E++)L=F.lensFlares[E],0.001<L.opacity&&0.001<L.scale&&(G.x=L.x,G.y=L.y,G.z=L.z,y=L.size*L.scale/f,A.x=y*t,A.y=y,b.uniform3f(J.screenPosition,G.x,G.y,G.z),b.uniform2f(J.scale,A.x,A.y),b.uniform1f(J.rotation,L.rotation),b.uniform1f(J.opacity,
L.opacity),b.uniform3f(J.color,L.color.r,L.color.g,L.color.b),c.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst),c.setTexture(L.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,j=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(l,m){var p,s,r,q,v,u,w,x,t,D=[];q=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);p=0;for(s=l.__lights.length;p<s;p++)if(r=l.__lights[p],r.castShadow)if(r instanceof THREE.DirectionalLight&&r.shadowCascade)for(v=0;v<r.shadowCascadeCount;v++){var z;if(r.shadowCascadeArray[v])z=r.shadowCascadeArray[v];else{t=r;w=v;z=new THREE.DirectionalLight;z.isVirtual=!0;z.onlyShadow=!0;z.castShadow=!0;z.shadowCameraNear=t.shadowCameraNear;z.shadowCameraFar=t.shadowCameraFar;z.shadowCameraLeft=t.shadowCameraLeft;z.shadowCameraRight=t.shadowCameraRight;
z.shadowCameraBottom=t.shadowCameraBottom;z.shadowCameraTop=t.shadowCameraTop;z.shadowCameraVisible=t.shadowCameraVisible;z.shadowDarkness=t.shadowDarkness;z.shadowBias=t.shadowCascadeBias[w];z.shadowMapWidth=t.shadowCascadeWidth[w];z.shadowMapHeight=t.shadowCascadeHeight[w];z.pointsWorld=[];z.pointsFrustum=[];x=z.pointsWorld;u=z.pointsFrustum;for(var y=0;8>y;y++)x[y]=new THREE.Vector3,u[y]=new THREE.Vector3;x=t.shadowCascadeNearZ[w];t=t.shadowCascadeFarZ[w];u[0].set(-1,-1,x);u[1].set(1,-1,x);u[2].set(-1,
1,x);u[3].set(1,1,x);u[4].set(-1,-1,t);u[5].set(1,-1,t);u[6].set(-1,1,t);u[7].set(1,1,t);z.originalCamera=m;u=new THREE.Gyroscope;u.position=r.shadowCascadeOffset;u.add(z);u.add(z.target);m.add(u);r.shadowCascadeArray[v]=z;console.log("Created virtualLight",z)}w=r;x=v;t=w.shadowCascadeArray[x];t.position.copy(w.position);t.target.position.copy(w.target.position);t.lookAt(t.target);t.shadowCameraVisible=w.shadowCameraVisible;t.shadowDarkness=w.shadowDarkness;t.shadowBias=w.shadowCascadeBias[x];u=w.shadowCascadeNearZ[x];
w=w.shadowCascadeFarZ[x];t=t.pointsFrustum;t[0].z=u;t[1].z=u;t[2].z=u;t[3].z=u;t[4].z=w;t[5].z=w;t[6].z=w;t[7].z=w;D[q]=z;q++}else D[q]=r,q++;p=0;for(s=D.length;p<s;p++){r=D[p];r.shadowMap||(v=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(v=THREE.NearestFilter),r.shadowMap=new THREE.WebGLRenderTarget(r.shadowMapWidth,r.shadowMapHeight,{minFilter:v,magFilter:v,format:THREE.RGBAFormat}),r.shadowMapSize=new THREE.Vector2(r.shadowMapWidth,r.shadowMapHeight),r.shadowMatrix=new THREE.Matrix4);
if(!r.shadowCamera){if(r instanceof THREE.SpotLight)r.shadowCamera=new THREE.PerspectiveCamera(r.shadowCameraFov,r.shadowMapWidth/r.shadowMapHeight,r.shadowCameraNear,r.shadowCameraFar);else if(r instanceof THREE.DirectionalLight)r.shadowCamera=new THREE.OrthographicCamera(r.shadowCameraLeft,r.shadowCameraRight,r.shadowCameraTop,r.shadowCameraBottom,r.shadowCameraNear,r.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}l.add(r.shadowCamera);b.autoUpdateScene&&l.updateMatrixWorld()}r.shadowCameraVisible&&
!r.cameraHelper&&(r.cameraHelper=new THREE.CameraHelper(r.shadowCamera),r.shadowCamera.add(r.cameraHelper));q=r.shadowMap;u=r.shadowMatrix;v=r.shadowCamera;v.position.copy(r.matrixWorld.getPosition());v.lookAt(r.target.matrixWorld.getPosition());v.updateMatrixWorld();v.matrixWorldInverse.getInverse(v.matrixWorld);if(r.isVirtual&&z.originalCamera==m){t=m;w=r.shadowCamera;x=r.pointsFrustum;y=r.pointsWorld;j.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(var A=0;8>A;A++){var G=
y[A];G.copy(x[A]);THREE.ShadowMapPlugin.__projector.unprojectVector(G,t);w.matrixWorldInverse.multiplyVector3(G);G.x<j.x&&(j.x=G.x);G.x>k.x&&(k.x=G.x);G.y<j.y&&(j.y=G.y);G.y>k.y&&(k.y=G.y);G.z<j.z&&(j.z=G.z);G.z>k.z&&(k.z=G.z)}w.left=j.x;w.right=k.x;w.top=k.y;w.bottom=j.y;w.updateProjectionMatrix()}r.cameraHelper&&(r.cameraHelper.visible=r.shadowCameraVisible);r.shadowCameraVisible&&r.cameraHelper.update();u.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);u.multiplySelf(v.projectionMatrix);u.multiplySelf(v.matrixWorldInverse);
h.multiply(v.projectionMatrix,v.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(q);b.clear();t=l.__webglObjects;r=0;for(q=t.length;r<q;r++)if(w=t[r],u=w.object,w.render=!1,u.visible&&u.castShadow&&(!(u instanceof THREE.Mesh||u instanceof THREE.ParticleSystem)||!u.frustumCulled||g.contains(u)))u._modelViewMatrix.multiply(v.matrixWorldInverse,u.matrixWorld),w.render=!0;r=0;for(q=t.length;r<q;r++)w=t[r],w.render&&(u=w.object,w=w.buffer,y=u.material instanceof THREE.MeshFaceMaterial?u.material.materials[0]:
u.material,x=0<u.geometry.morphTargets.length&&y.morphTargets,y=u instanceof THREE.SkinnedMesh&&y.skinning,x=u.customDepthMaterial?u.customDepthMaterial:y?x?f:e:x?d:c,w instanceof THREE.BufferGeometry?b.renderBufferDirect(v,l.__lights,null,x,w,u):b.renderBuffer(v,l.__lights,null,x,w,u));t=l.__webglObjectsImmediate;r=0;for(q=t.length;r<q;r++)w=t[r],u=w.object,u.visible&&u.castShadow&&(u._modelViewMatrix.multiply(v.matrixWorldInverse,u.matrixWorld),b.renderImmediateObject(v,l.__lights,null,c,u))}p=
b.getClearColor();s=b.getClearAlpha();a.clearColor(p.r,p.g,p.b,s);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,e,f,g,h,j,k,l;this.init=function(a){b=a.context;c=a;d=a.getPrecision();e=new Float32Array(16);f=new Uint16Array(6);a=0;e[a++]=-1;e[a++]=-1;e[a++]=0;e[a++]=0;e[a++]=1;e[a++]=-1;e[a++]=1;e[a++]=0;e[a++]=1;e[a++]=1;e[a++]=1;e[a++]=1;e[a++]=-1;e[a++]=1;e[a++]=0;e[a++]=1;a=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,
e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);a=THREE.ShaderSprite.sprite;var p=b.createProgram(),s=b.createShader(b.FRAGMENT_SHADER),r=b.createShader(b.VERTEX_SHADER),q="precision "+d+" float;\n";b.shaderSource(s,q+a.fragmentShader);b.shaderSource(r,q+a.vertexShader);b.compileShader(s);b.compileShader(r);b.attachShader(p,s);b.attachShader(p,r);b.linkProgram(p);j=p;k={};l={};k.position=b.getAttribLocation(j,"position");k.uv=b.getAttribLocation(j,
"uv");l.uvOffset=b.getUniformLocation(j,"uvOffset");l.uvScale=b.getUniformLocation(j,"uvScale");l.rotation=b.getUniformLocation(j,"rotation");l.scale=b.getUniformLocation(j,"scale");l.alignment=b.getUniformLocation(j,"alignment");l.color=b.getUniformLocation(j,"color");l.map=b.getUniformLocation(j,"map");l.opacity=b.getUniformLocation(j,"opacity");l.useScreenCoordinates=b.getUniformLocation(j,"useScreenCoordinates");l.sizeAttenuation=b.getUniformLocation(j,"sizeAttenuation");l.screenPosition=b.getUniformLocation(j,
"screenPosition");l.modelViewMatrix=b.getUniformLocation(j,"modelViewMatrix");l.projectionMatrix=b.getUniformLocation(j,"projectionMatrix");l.fogType=b.getUniformLocation(j,"fogType");l.fogDensity=b.getUniformLocation(j,"fogDensity");l.fogNear=b.getUniformLocation(j,"fogNear");l.fogFar=b.getUniformLocation(j,"fogFar");l.fogColor=b.getUniformLocation(j,"fogColor");l.alphaTest=b.getUniformLocation(j,"alphaTest")};this.render=function(d,e,f,r){var q=d.__webglSprites,v=q.length;if(v){var u=k,w=l,x=r/
f;f*=0.5;var t=0.5*r;b.useProgram(j);b.enableVertexAttribArray(u.position);b.enableVertexAttribArray(u.uv);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(u.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(u.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.uniformMatrix4fv(w.projectionMatrix,!1,e.projectionMatrix.elements);b.activeTexture(b.TEXTURE0);b.uniform1i(w.map,0);var D=u=0,z=d.fog;z?(b.uniform3f(w.fogColor,z.color.r,z.color.g,z.color.b),
z instanceof THREE.Fog?(b.uniform1f(w.fogNear,z.near),b.uniform1f(w.fogFar,z.far),b.uniform1i(w.fogType,1),D=u=1):z instanceof THREE.FogExp2&&(b.uniform1f(w.fogDensity,z.density),b.uniform1i(w.fogType,2),D=u=2)):(b.uniform1i(w.fogType,0),D=u=0);for(var y,A,G=[],z=0;z<v;z++)y=q[z],A=y.material,y.visible&&0!==A.opacity&&(A.useScreenCoordinates?y.z=-y.position.z:(y._modelViewMatrix.multiply(e.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]));q.sort(a);for(z=0;z<v;z++)y=q[z],A=
y.material,y.visible&&0!==A.opacity&&(A.map&&A.map.image&&A.map.image.width)&&(b.uniform1f(w.alphaTest,A.alphaTest),!0===A.useScreenCoordinates?(b.uniform1i(w.useScreenCoordinates,1),b.uniform3f(w.screenPosition,(y.position.x*c.devicePixelRatio-f)/f,(t-y.position.y*c.devicePixelRatio)/t,Math.max(0,Math.min(1,y.position.z))),G[0]=c.devicePixelRatio,G[1]=c.devicePixelRatio):(b.uniform1i(w.useScreenCoordinates,0),b.uniform1i(w.sizeAttenuation,A.sizeAttenuation?1:0),b.uniformMatrix4fv(w.modelViewMatrix,
!1,y._modelViewMatrix.elements),G[0]=1,G[1]=1),e=d.fog&&A.fog?D:0,u!==e&&(b.uniform1i(w.fogType,e),u=e),e=1/(A.scaleByViewport?r:1),G[0]*=e*x*y.scale.x,G[1]*=e*y.scale.y,b.uniform2f(w.uvScale,A.uvScale.x,A.uvScale.y),b.uniform2f(w.uvOffset,A.uvOffset.x,A.uvOffset.y),b.uniform2f(w.alignment,A.alignment.x,A.alignment.y),b.uniform1f(w.opacity,A.opacity),b.uniform3f(w.color,A.color.r,A.color.g,A.color.b),b.uniform1f(w.rotation,y.rotation),b.uniform2fv(w.scale,G),c.setBlending(A.blending,A.blendEquation,
A.blendSrc,A.blendDst),c.setDepthTest(A.depthTest),c.setDepthWrite(A.depthWrite),c.setTexture(A.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(j,k){var l,m,p,s,r,q;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&j.updateMatrixWorld();k.matrixWorldInverse.getInverse(k.matrixWorld);h.multiply(k.projectionMatrix,
k.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(this.renderTarget);b.clear();q=j.__webglObjects;l=0;for(m=q.length;l<m;l++)if(p=q[l],r=p.object,p.render=!1,r.visible&&(!(r instanceof THREE.Mesh||r instanceof THREE.ParticleSystem)||!r.frustumCulled||g.contains(r)))r._modelViewMatrix.multiply(k.matrixWorldInverse,r.matrixWorld),p.render=!0;var v;l=0;for(m=q.length;l<m;l++)if(p=q[l],p.render&&(r=p.object,p=p.buffer,!(r instanceof THREE.ParticleSystem)||r.customDepthMaterial))(v=r.material instanceof
THREE.MeshFaceMaterial?r.material.materials[0]:r.material)&&b.setMaterialFaces(r.material),s=0<r.geometry.morphTargets.length&&v.morphTargets,v=r instanceof THREE.SkinnedMesh&&v.skinning,s=r.customDepthMaterial?r.customDepthMaterial:v?s?f:e:s?d:c,p instanceof THREE.BufferGeometry?b.renderBufferDirect(k,j.__lights,null,s,p,r):b.renderBuffer(k,j.__lights,null,s,p,r);q=j.__webglObjectsImmediate;l=0;for(m=q.length;l<m;l++)p=q[l],r=p.object,r.visible&&(r._modelViewMatrix.multiply(k.matrixWorldInverse,
r.matrixWorld),b.renderImmediateObject(k,j.__lights,null,c,r));l=b.getClearColor();m=b.getClearAlpha();a.clearColor(l.r,l.g,l.b,m);a.enable(a.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*
Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));b=this.target;
c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",
c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed;a*=this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*f.autoRotateSpeed}function d(a){a.preventDefault();w===u.ROTATE?(j.set(a.clientX,a.clientY),k.sub(j,h),f.rotateLeft(2*Math.PI*k.x/g*f.userRotateSpeed),f.rotateUp(2*Math.PI*k.y/g*f.userRotateSpeed),h.copy(j)):w===u.ZOOM&&(m.set(a.clientX,a.clientY),p.sub(m,l),0<p.y?f.zoomIn():f.zoomOut(),l.copy(m))}function e(){f.userRotate&&(document.removeEventListener("mousemove",d,!1),document.removeEventListener("mouseup",e,!1),w=u.NONE)}THREE.EventDispatcher.call(this);
this.object=a;this.domElement=void 0!==b?b:document;this.center=new THREE.Vector3;this.userZoom=!0;this.userZoomSpeed=1;this.userRotate=!0;this.userRotateSpeed=1;this.autoRotate=!1;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minDistance=0;this.maxDistance=Infinity;var f=this,g=1800,h=new THREE.Vector2,j=new THREE.Vector2,k=new THREE.Vector2,l=new THREE.Vector2,m=new THREE.Vector2,p=new THREE.Vector2,s=0,r=0,q=1,v=new THREE.Vector3,u={NONE:-1,ROTATE:0,ZOOM:1},w=u.NONE,
x={type:"change"};this.rotateLeft=function(a){void 0===a&&(a=c());r-=a};this.rotateRight=function(a){void 0===a&&(a=c());r+=a};this.rotateUp=function(a){void 0===a&&(a=c());s-=a};this.rotateDown=function(a){void 0===a&&(a=c());s+=a};this.zoomIn=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));q/=a};this.zoomOut=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));q*=a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*
b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+r,e=e+s,e=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,e)),e=Math.max(1E-6,Math.min(Math.PI-1E-6,e)),f=b.length()*q,f=Math.max(this.minDistance,Math.min(this.maxDistance,f));b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);s=r=0;q=1;0<v.distanceTo(this.object.position)&&(this.dispatchEvent(x),v.copy(this.object.position))};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){f.userRotate&&(a.preventDefault(),0===a.button||2===a.button?(w=u.ROTATE,h.set(a.clientX,a.clientY)):1===a.button&&(w=u.ZOOM,l.set(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",e,!1))},!1);this.domElement.addEventListener("mousewheel",function(a){f.userZoom&&(0<a.wheelDelta?f.zoomOut():f.zoomIn())},!1)};THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),r=b.getLength(),q=g.length,v=0;f=q-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<q-1;f++)v=d*r.chunks[f]/r.total,b.keys[f]={time:v,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=2*Math.PI;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===
document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);a=
this.phi%g;this.phi=0<=a?a:a+g;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);
this.object.lookAt(this.target.position)};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=
new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),
this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),m=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,m),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),m=new THREE.MeshBasicMaterial({color:65280}),p=0;p<b.points.length;p++)c=new THREE.Mesh(g,
m),c.position.copy(b.points[p]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),!1)};this.handleResize()};THREE.PathControlsIdCounter=0;THREE.PointerLockControls=function(a){var b=this,c=new THREE.Object3D;c.add(a);var d=new THREE.Object3D;d.position.y=10;d.add(c);var e=!1,f=!1,g=!1,h=!1,j=!1,k=!1,l=new THREE.Vector3,m=Math.PI/2;document.addEventListener("mousemove",function(a){if(!1!==b.enabled){var e=a.movementY||a.mozMovementY||a.webkitMovementY||0;d.rotation.y-=0.002*(a.movementX||a.mozMovementX||a.webkitMovementX||0);c.rotation.x-=0.002*e;c.rotation.x=Math.max(-m,Math.min(m,c.rotation.x))}},!1);document.addEventListener("keydown",
function(a){switch(a.keyCode){case 38:case 87:e=!0;break;case 37:case 65:g=!0;break;case 40:case 83:f=!0;break;case 39:case 68:h=!0;break;case 32:!0===k&&(l.y+=10),k=!1}},!1);document.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:e=!1;break;case 37:case 65:g=!1;break;case 40:case 83:f=!1;break;case 39:case 68:h=!1}},!1);this.enabled=!1;this.getObject=function(){return d};this.isOnObject=function(a){k=j=a};this.update=function(a){!1!==b.enabled&&(a*=0.1,l.x+=0.08*-l.x*a,l.z+=
0.08*-l.z*a,l.y-=0.25*a,e&&(l.z-=0.12*a),f&&(l.z+=0.12*a),g&&(l.x-=0.12*a),h&&(l.x+=0.12*a),!0===j&&(l.y=Math.max(0,l.y)),d.translateX(l.x),d.translateY(l.y),d.translateZ(l.z),10>d.position.y&&(l.y=0,d.position.y=10,k=!0))}};THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,h=1,j=0,k=0,l=0,m=0,p=0,s=0,r=0;this.handleResize=function(){s=window.innerWidth/2;r=window.innerHeight/2};this.update=function(a){if(this.mouseLook){var b=
a*this.lookSpeed;this.rotateHorizontally(b*m);this.rotateVertically(b*p)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<j||this.autoForward&&!(0>j)?1:j));this.object.translateX(b*k);this.object.translateY(b*l);g&&(this.roll+=this.rollSpeed*a*h);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);
c.cross(d,e).normalize();d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=Math.cos(this.roll);
this.object.matrix.multiplySelf(f);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.elements[4]*
a;this.object.position.y+=this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};
this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){m=(a.clientX-s)/window.innerWidth;p=(a.clientY-r)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();
switch(a.button){case 0:j=1;break;case 2:j=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:j=0;break;case 2:j=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:j=1;break;case 37:case 65:k=-1;break;case 40:case 83:j=-1;break;case 39:case 68:k=1;break;case 81:g=!0;h=1;break;case 69:g=!0;h=-1;break;case 82:l=1;break;case 70:l=-1}},!1);this.domElement.addEventListener("keyup",
function(a){switch(a.keyCode){case 38:case 87:j=0;break;case 37:case 65:k=0;break;case 40:case 83:j=0;break;case 39:case 68:k=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:l=0;break;case 70:l=0}},!1);this.handleResize()};THREE.TrackballControls=function(a,b){function c(a){h.enabled&&(window.removeEventListener("keydown",c),m=l,l===j.NONE&&(a.keyCode===h.keys[j.ROTATE]&&!h.noRotate?l=j.ROTATE:a.keyCode===h.keys[j.ZOOM]&&!h.noZoom?l=j.ZOOM:a.keyCode===h.keys[j.PAN]&&!h.noPan&&(l=j.PAN)))}function d(a){h.enabled&&(l===j.ROTATE&&!h.noRotate?r=h.getMouseProjectionOnBall(a.clientX,a.clientY):l===j.ZOOM&&!h.noZoom?v=h.getMouseOnScreen(a.clientX,a.clientY):l===j.PAN&&!h.noPan&&(w=h.getMouseOnScreen(a.clientX,a.clientY)))}
function e(a){h.enabled&&(a.preventDefault(),a.stopPropagation(),l=j.NONE,document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",e))}function f(a){if(h.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);q.y+=0.05*(1/b)}}function g(a){if(h.enabled)switch(a.preventDefault(),a.touches.length){case 1:s=r=h.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:q=v=h.getMouseOnScreen(a.touches[0].pageX,
a.touches[0].pageY);break;case 3:u=w=h.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY)}}THREE.EventDispatcher.call(this);var h=this,j={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=
0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var k=new THREE.Vector3,l=j.NONE,m=j.NONE,p=new THREE.Vector3,s=new THREE.Vector3,r=new THREE.Vector3,q=new THREE.Vector2,v=new THREE.Vector2,u=new THREE.Vector2,w=new THREE.Vector2,x={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+this.screen.height)/4};this.handleEvent=
function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-h.screen.offsetLeft)/h.radius),0.5*((b-h.screen.offsetTop)/h.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*h.screen.width-h.screen.offsetLeft)/h.radius,(0.5*h.screen.height+h.screen.offsetTop-b)/h.radius,0),d=c.length();1<d?c.normalize():c.z=Math.sqrt(1-d*d);p.copy(h.object.position).subSelf(h.target);d=h.object.up.clone().setLength(c.y);
d.addSelf(h.object.up.clone().crossSelf(p).setLength(c.x));d.addSelf(p.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(s.dot(r)/s.length()/r.length());if(a){var b=(new THREE.Vector3).cross(s,r).normalize(),c=new THREE.Quaternion,a=a*h.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(p);c.multiplyVector3(h.object.up);c.multiplyVector3(r);h.staticMoving?s.copy(r):(c.setFromAxisAngle(b,a*(h.dynamicDampingFactor-1)),c.multiplyVector3(s))}};this.zoomCamera=function(){var a=
1+(v.y-q.y)*h.zoomSpeed;1!==a&&0<a&&(p.multiplyScalar(a),h.staticMoving?q.copy(v):q.y+=(v.y-q.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=w.clone().subSelf(u);if(a.lengthSq()){a.multiplyScalar(p.length()*h.panSpeed);var b=p.clone().crossSelf(h.object.up).setLength(a.x);b.addSelf(h.object.up.clone().setLength(a.y));h.object.position.addSelf(b);h.target.addSelf(b);h.staticMoving?u=w:u.addSelf(a.sub(w,u).multiplyScalar(h.dynamicDampingFactor))}};this.checkDistances=function(){if(!h.noZoom||
!h.noPan)h.object.position.lengthSq()>h.maxDistance*h.maxDistance&&h.object.position.setLength(h.maxDistance),p.lengthSq()<h.minDistance*h.minDistance&&h.object.position.add(h.target,p.setLength(h.minDistance))};this.update=function(){p.copy(h.object.position).subSelf(h.target);h.noRotate||h.rotateCamera();h.noZoom||h.zoomCamera();h.noPan||h.panCamera();h.object.position.add(h.target,p);h.checkDistances();h.object.lookAt(h.target);0<k.distanceToSquared(h.object.position)&&(h.dispatchEvent(x),k.copy(h.object.position))};
this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){h.enabled&&(a.preventDefault(),a.stopPropagation(),l===j.NONE&&(l=a.button),l===j.ROTATE&&!h.noRotate?s=r=h.getMouseProjectionOnBall(a.clientX,a.clientY):l===j.ZOOM&&!h.noZoom?q=v=h.getMouseOnScreen(a.clientX,a.clientY):l===j.PAN&&!h.noPan&&(u=w=h.getMouseOnScreen(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",
e,!1))},!1);this.domElement.addEventListener("mousewheel",f,!1);this.domElement.addEventListener("DOMMouseScroll",f,!1);this.domElement.addEventListener("touchstart",g,!1);this.domElement.addEventListener("touchend",g,!1);this.domElement.addEventListener("touchmove",function(a){if(h.enabled)switch(a.preventDefault(),a.touches.length){case 1:r=h.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:v=h.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY);break;case 3:w=h.getMouseOnScreen(a.touches[0].pageX,
a.touches[0].pageY)}},!1);window.addEventListener("keydown",c,!1);window.addEventListener("keyup",function(){h.enabled&&(l=m,window.addEventListener("keydown",c,!1))},!1);this.handleResize()};THREE.AnaglyphEffect=function(a,b,c){var d=new THREE.Matrix4,e=new THREE.Matrix4,f,g,h,j,k=new THREE.PerspectiveCamera;k.matrixAutoUpdate=!1;var l=new THREE.PerspectiveCamera;l.matrixAutoUpdate=!1;var m=new THREE.OrthographicCamera(-1,1,1,-1,0,1),p=new THREE.Scene,s={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};void 0===b&&(b=512);void 0===c&&(c=512);var r=new THREE.WebGLRenderTarget(b,c,s),q=new THREE.WebGLRenderTarget(b,c,s),v=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:r},mapRight:{type:"t",value:q}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 colorL, colorR;\n\tvec2 uv = vUv;\n\tcolorL = texture2D( mapLeft, uv );\n\tcolorR = texture2D( mapRight, uv );\n\tgl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"});
b=new THREE.Mesh(new THREE.PlaneGeometry(2,2),v);p.add(b);this.setSize=function(b,c){r=new THREE.WebGLRenderTarget(b,c,s);q=new THREE.WebGLRenderTarget(b,c,s);v.uniforms.mapLeft.value=r;v.uniforms.mapRight.value=q;a.setSize(b,c)};this.render=function(b,c){b.updateMatrixWorld();void 0===c.parent&&c.updateMatrixWorld();if(f!==c.aspect||g!==c.near||h!==c.far||j!==c.fov){f=c.aspect;g=c.near;h=c.far;j=c.fov;var s=c.projectionMatrix.clone(),t=0.5*(125/30),v=t*g/125,z=g*Math.tan(THREE.Math.degToRad(0.5*
j)),y;d.elements[12]=t;e.elements[12]=-t;t=-z*f+v;y=z*f+v;s.elements[0]=2*g/(y-t);s.elements[8]=(y+t)/(y-t);k.projectionMatrix.copy(s);t=-z*f-v;y=z*f-v;s.elements[0]=2*g/(y-t);s.elements[8]=(y+t)/(y-t);l.projectionMatrix.copy(s)}k.matrixWorld.copy(c.matrixWorld).multiplySelf(e);k.position.copy(c.position);k.near=c.near;k.far=c.far;a.render(b,k,r,!0);l.matrixWorld.copy(c.matrixWorld).multiplySelf(d);l.position.copy(c.position);l.near=c.near;l.far=c.far;a.render(b,l,q,!0);a.render(p,m)}};THREE.AsciiEffect=function(a,b,c){b=void 0===b?" .:-=+*#%@":b;c||(c={});var d=!c.resolution?0.15:c.resolution,e=!c.scale?1:c.scale,f=!c.color?!1:c.color,g=!c.alpha?!1:c.alpha,h=!c.block?!1:c.block,j=!c.invert?!1:c.invert,k,l;c=document.createElement("div");c.style.cursor="default";var m=document.createElement("table");c.appendChild(m);var p,s,r;this.setSize=function(b,c){k=b;l=c;a.setSize(b,c);p=Math.round(k*D);s=Math.round(l*D);w.width=p;w.height=s;r=a.domElement;r.style.backgroundColor&&(m.rows[0].cells[0].style.backgroundColor=
r.style.backgroundColor,m.rows[0].cells[0].style.color=r.style.color);m.cellSpacing=0;m.cellPadding=0;var d=m.style;d.display="inline";d.width=Math.round(p/D*e)+"px";d.height=Math.round(s/D*e)+"px";d.whiteSpace="pre";d.margin="0px";d.padding="0px";d.letterSpacing=A+"px";d.fontFamily=v;d.fontSize=z+"px";d.lineHeight=y+"px";d.textAlign="left";d.textDecoration="none"};this.render=function(b,c){a.render(b,c);x.clearRect(0,0,p,s);x.drawImage(u,0,0,p,s);for(var d=x.getImageData(0,0,p,s).data,e="",l=0;l<
s;l+=2){for(var k=0;k<p;k++){var q=4*(l*p+k),r=d[q],v=d[q+1],w=d[q+2],q=d[q+3],y;y=(0.3*r+0.59*v+0.11*w)/255;0==q&&(y=1);y=Math.floor((1-y)*(t.length-1));j&&(y=t.length-y-1);y=t[y];if(void 0===y||" "==y)y="&nbsp;";e=f?e+("<span style='color:rgb("+r+","+v+","+w+");"+(h?"background-color:rgb("+r+","+v+","+w+");":"")+(g?"opacity:"+q/255+";":"")+"'>"+y+"</span>"):e+y}e+="<br/>"}m.innerHTML="<tr><td>"+e+"</td></tr>"};this.domElement=c;c=" .,:;i1tfLCG08@".split("");var q=" CGO08@".split(""),v="courier new, monospace",
u=a.domElement,w=document.createElement("canvas");if(w.getContext){var x=w.getContext("2d");if(x.getImageData){var t=f?q:c;b&&(t=b);var D=0.5;D=0.25;d&&(D=d);var z=2/D*e,y=2/D*e,A=0;switch(e){case 1:A=-1;break;case 2:case 3:A=-2.1;break;case 4:A=-3.1;break;case 5:A=-4.15}}}};THREE.CrosseyedEffect=function(a){this.separation=10;var b,c,d=new THREE.PerspectiveCamera;d.target=new THREE.Vector3;var e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3;a.autoClear=!1;this.setSize=function(d,e){b=d/2;c=e;a.setSize(d,e)};this.render=function(f,g){d.fov=g.fov;d.aspect=0.5*g.aspect;d.near=g.near;d.far=g.far;d.updateProjectionMatrix();d.position.copy(g.position);d.target.copy(g.target);d.translateX(this.separation);d.lookAt(d.target);e.near=g.near;e.far=g.far;e.projectionMatrix=
d.projectionMatrix;e.position.copy(g.position);e.target.copy(g.target);e.translateX(-this.separation);e.lookAt(e.target);a.clear();a.setViewport(0,0,b,c);a.render(f,d);a.setViewport(b,0,b,c);a.render(f,e,!1)}};THREE.ParallaxBarrierEffect=function(a){var b=new THREE.Matrix4,c=new THREE.Matrix4,d,e,f,g,h=new THREE.PerspectiveCamera;h.matrixAutoUpdate=!1;var j=new THREE.PerspectiveCamera;j.matrixAutoUpdate=!1;var k=new THREE.Scene,l=new THREE.PerspectiveCamera(53,1,1,1E4);l.position.z=2;k.add(l);var m={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},p=new THREE.WebGLRenderTarget(512,512,m),s=new THREE.WebGLRenderTarget(512,512,m),r=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:p},mapRight:{type:"t",value:s}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec2 uv = vUv;\n\tif ( ( mod( gl_FragCoord.x, 2.0 ) ) > 1.00 ) {\n\t\tgl_FragColor = texture2D( mapLeft, uv );\n\t} else {\n\t\tgl_FragColor = texture2D( mapRight, uv );\n\t}\n}"}),q=new THREE.Mesh(new THREE.PlaneGeometry(2,
2),r);k.add(q);this.setSize=function(b,c){p=new THREE.WebGLRenderTarget(b,c,m);s=new THREE.WebGLRenderTarget(b,c,m);r.uniforms.mapLeft.value=p;r.uniforms.mapRight.value=s;a.setSize(b,c)};this.render=function(m,q){m.updateMatrixWorld();void 0===q.parent&&q.updateMatrixWorld();if(d!==q.aspect||e!==q.near||f!==q.far||g!==q.fov){d=q.aspect;e=q.near;f=q.far;g=q.fov;var r=q.projectionMatrix.clone(),x=0.5*(125/30),t=x*e/125,D=e*Math.tan(THREE.Math.degToRad(0.5*g)),z;b.elements[12]=x;c.elements[12]=-x;x=
-D*d+t;z=D*d+t;r.elements[0]=2*e/(z-x);r.elements[8]=(z+x)/(z-x);h.projectionMatrix.copy(r);x=-D*d-t;z=D*d-t;r.elements[0]=2*e/(z-x);r.elements[8]=(z+x)/(z-x);j.projectionMatrix.copy(r)}h.matrixWorld.copy(q.matrixWorld).multiplySelf(c);h.position.copy(q.position);h.near=q.near;h.far=q.far;a.render(m,h,p,!0);j.matrixWorld.copy(q.matrixWorld).multiplySelf(b);j.position.copy(q.position);j.near=q.near;j.far=q.far;a.render(m,j,s,!0);k.updateMatrixWorld();a.render(k,l)}};THREE.GeometryExporter=function(){};
THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(a){function b(a,b,c){var d=a.toString()+b.toString()+c.toString();if(void 0!==g[d])return g[d];g[d]=f.length/3;f.push(a,b,c);return g[d]}for(var c=[],d=0;d<a.vertices.length;d++){var e=a.vertices[d];c.push(e.x,e.y,e.z)}for(var e=[],f=[],g={},d=0;d<a.faces.length;d++){var h=a.faces[d],j=h instanceof THREE.Face3,k=void 0!==h.materialIndex,l=0<h.normal.length(),m=void 0!==h.vertexNormals[0],p=0,p=!j?p|1:p&-2,p=l?p|16:
p&-17,p=m?p|32:p&-33;e.push(p);j?e.push(h.a,h.b,h.c):e.push(h.a,h.b,h.c,h.d);k&&e.push(h.materialIndex);l&&(k=h.normal,e.push(b(k.x,k.y,k.z)));m&&(h=h.vertexNormals,j?e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z)):e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z),b(h[3].x,h[3].y,h[3].z)))}return['{\n\t"metadata": {\n\t\t"formatVersion" : 3.1,\n\t\t"generatedBy"\t: "GeometryExporter"\n\t},','\t"vertices": '+JSON.stringify(c)+",",'\t"normals": '+
JSON.stringify(f)+",",'\t"uvs": '+JSON.stringify([[]])+",",'\t"faces": '+JSON.stringify(e),"}"].join("\n")}};THREE.ColladaLoader=function(){function a(a,d,e){W=a;d=d||Ea;void 0!==e&&(a=e.split("/"),a.pop(),Ga=(1>a.length?".":a.join("/"))+"/");if((a=W.evaluate("//dae:asset",W,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(e=0;e<a.childNodes.length;e++){var j=a.childNodes[e];switch(j.nodeName){case "unit":(j=j.getAttribute("meter"))&&parseFloat(j);break;case "up_axis":Ka=j.textContent.charAt(0)}}if(!ta.convertUpAxis||Ka===ta.upAxis)La=null;else switch(Ka){case "X":La="Y"===
ta.upAxis?"XtoY":"XtoZ";break;case "Y":La="X"===ta.upAxis?"YtoX":"YtoZ";break;case "Z":La="X"===ta.upAxis?"ZtoX":"ZtoY"}fa=b("//dae:library_images/dae:image",g,"image");Ca=b("//dae:library_materials/dae:material",G,"material");ob=b("//dae:library_effects/dae:effect",O,"effect");Wa=b("//dae:library_geometries/dae:geometry",v,"geometry");gb=b(".//dae:library_cameras/dae:camera",da,"camera");Fa=b("//dae:library_controllers/dae:controller",h,"controller");ia=b("//dae:library_animations/dae:animation",
L,"animation");Ja=b(".//dae:library_visual_scenes/dae:visual_scene",l,"visual_scene");Ba=[];xa=[];(a=W.evaluate(".//dae:scene/dae:instance_visual_scene",W,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),oa=Ja[0<a.length?a:"visual_scene0"]):oa=null;$=new THREE.Object3D;for(a=0;a<oa.nodes.length;a++)$.add(f(oa.nodes[a]));Xa=[];c($);a={scene:$,morphs:Ba,skins:xa,animations:Xa,dae:{images:fa,materials:Ca,cameras:gb,effects:ob,geometries:Wa,controllers:Fa,
animations:ia,visualScenes:Ja,scene:oa}};d&&d(a);return a}function b(a,b,c){a=W.evaluate(a,W,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=oa.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};Xa.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,
b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function e(a,b,c){var e,
f=Fa[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{c=1E6;var g=-c,h=0;for(e in ia)for(var j=ia[e],l=0;l<j.sampler.length;l++){var k=j.sampler[l];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;b=oa.getChildById(b.skeleton[0],!0)||oa.getChildBySid(b.skeleton[0],!0);for(var m,p,g=new THREE.Vector3,q,
l=0;l<a.vertices.length;l++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[l]);for(c=0;c<e;c++){h=[];j=[];for(l=0;l<a.vertices.length;l++)j.push(new THREE.Vector3);d(b,h,c);l=h;k=f.skin;for(p=0;p<l.length;p++)if(m=l[p],q=-1,"JOINT"==m.type){for(var r=0;r<k.joints.length;r++)if(m.sid==k.joints[r]){q=r;break}if(0<=q){r=k.invBindMatrices[q];m.invBindMatrix=r;m.skinningMatrix=new THREE.Matrix4;m.skinningMatrix.multiply(m.world,r);m.weights=[];for(r=0;r<k.weights.length;r++)for(var n=0;n<k.weights[r].length;n++){var s=
k.weights[r][n];s.joint==q&&m.weights.push(s)}}else throw"ColladaLoader: Could not find joint '"+m.sid+"'.";}for(l=0;l<h.length;l++)if("JOINT"==h[l].type)for(k=0;k<h[l].weights.length;k++)m=h[l].weights[k],p=m.index,m=m.weight,q=a.vertices[p],p=j[p],g.x=q.x,g.y=q.y,g.z=q.z,h[l].skinningMatrix.multiplyVector3(g),p.x+=g.x*m,p.y+=g.y*m,p.z+=g.z*m;a.morphTargets.push({name:"target_"+c,vertices:j})}}}function f(a){var b=new THREE.Object3D,c,d,g,h;for(g=0;g<a.controllers.length;g++){var j=Fa[a.controllers[g].url];
switch(j.type){case "skin":if(Wa[j.skin.source]){var l=new q;l.url=j.skin.source;l.instance_material=a.controllers[g].instance_material;a.geometries.push(l);c=a.controllers[g]}else Fa[j.skin.source]&&(d=j=Fa[j.skin.source],j.morph&&Wa[j.morph.source]&&(l=new q,l.url=j.morph.source,l.instance_material=a.controllers[g].instance_material,a.geometries.push(l)));break;case "morph":Wa[j.morph.source]&&(l=new q,l.url=j.morph.source,l.instance_material=a.controllers[g].instance_material,a.geometries.push(l),
d=a.controllers[g]),console.log("ColladaLoader: Morph-controller partially supported.")}}l={};for(g=0;g<a.geometries.length;g++){h=a.geometries[g];var j=h.instance_material,k=Wa[h.url],m={},p=[],r=0,t;if(k&&k.mesh&&k.mesh.primitives){0==b.name.length&&(b.name=k.id);if(j)for(h=0;h<j.length;h++){t=j[h];var u=Ca[t.target],n=ob[u.instance_effect.url].shader.material;if(k.doubleSided){if(!(n in l)){var v=n.clone();v.side=THREE.DoubleSide;l[n]=v}n=l[n]}n.opacity=!n.opacity?1:n.opacity;m[t.symbol]=r;p.push(n);
t=n;t.name=null==u.name||""===u.name?u.id:u.name;r++}j=t||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide});k=k.mesh.geometry3js;if(1<r){j=new THREE.MeshFaceMaterial(p);for(h=0;h<k.faces.length;h++)p=k.faces[h],p.materialIndex=m[p.daeMaterial]}if(void 0!==c)e(k,c),j.morphTargets=!0,j=new THREE.SkinnedMesh(k,j,!1),j.skeleton=c.skeleton,j.skinController=Fa[c.url],j.skinInstanceController=c,j.name="skin_"+xa.length,xa.push(j);
else if(void 0!==d){h=k;m=d instanceof s?Fa[d.url]:d;if(!m||!m.morph)console.log("could not find morph controller!");else{m=m.morph;for(p=0;p<m.targets.length;p++)r=Wa[m.targets[p]],r.mesh&&(r.mesh.primitives&&r.mesh.primitives.length)&&(r=r.mesh.primitives[0].geometry,r.vertices.length===h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:r.vertices}));h.morphTargets.push({name:"target_Z",vertices:h.vertices})}j.morphTargets=!0;j=new THREE.Mesh(k,j);j.name="morph_"+Ba.length;Ba.push(j)}else j=
new THREE.Mesh(k,j);1<a.geometries.length?b.add(j):b=j}}for(g=0;g<a.cameras.length;g++)b=gb[a.cameras[g].url],b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar);b.name=a.id||"";b.matrix=a.matrix;g=a.matrix.decompose();b.position=g[0];b.quaternion=g[1];b.useQuaternion=!0;b.scale=g[2];ta.centerGeometry&&b.geometry&&(g=THREE.GeometryUtils.center(b.geometry),b.quaternion.multiplyVector3(g.multiplySelf(b.scale)),b.position.subSelf(g));for(g=0;g<a.nodes.length;g++)b.add(f(a.nodes[g],a));
return b}function g(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=null}function j(){this.weights=this.targets=this.source=this.method=null}function k(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function l(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function m(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function p(){this.type=this.sid="";this.data=[];this.obj=null}function s(){this.url="";this.skeleton=[];this.instance_material=[]}function r(){this.target=this.symbol=""}function q(){this.url="";this.instance_material=[]}function v(){this.id="";this.mesh=null}function u(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function w(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function x(){w.call(this);
this.vcount=[]}function t(){w.call(this);this.vcount=3}function D(){this.source="";this.stride=this.count=0;this.params=[]}function z(){this.input={}}function y(){this.semantic="";this.offset=0;this.source="";this.set=0}function A(a){this.id=a;this.type=null}function G(){this.name=this.id="";this.instance_effect=null}function H(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function J(a,b){this.type=
a;this.effect=b;this.material=null}function T(a){this.effect=a;this.format=this.init_from=null}function E(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function O(){this.name=this.id="";this.shader=null;this.surface={};this.sampler={}}function F(){this.url=""}function L(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function P(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function U(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function S(a){this.targets=[];this.time=a}function da(){this.technique=this.name=this.id=""}function R(){this.url=""}function I(a){return"dae"==a?"http://www.collada.org/2005/11/COLLADASchema":null}function N(a){a=Q(a);for(var b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function wa(a){a=Q(a);
for(var b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function Q(a){return 0<a.length?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function Aa(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function M(a,b){a.doubleSided=!1;var c=W.evaluate(".//dae:extra//dae:double_sided",b,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c&&(c=c.iterateNext())&&1===parseInt(c.textContent,10))a.doubleSided=!0}function aa(a,b){if(ta.convertUpAxis&&Ka!==ta.upAxis)switch(La){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1],a[1]=a[2],a[2]=b*c}}function na(a,b){var c=[a[b],a[b+1],a[b+2]];aa(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function ea(a){if(ta.convertUpAxis){var b=[a[0],a[4],a[8]];aa(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];aa(b,-1);a[1]=b[0];a[5]=b[1];
a[9]=b[2];b=[a[2],a[6],a[10]];aa(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];aa(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];aa(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];aa(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];aa(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function pa(a){if(ta.convertUpAxis)switch(a){case "X":switch(La){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch(La){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(La){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var W=null,$=null,oa,Ea=null,ra={},fa={},ia={},Fa={},Wa={},Ca={},ob={},gb={},Xa,Ja,Ga,Ba,xa,pb=THREE.SmoothShading,ta={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},Ka="Y",La=null;g.prototype.parse=function(a){this.id=
a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];"init_from"==c.nodeName&&(this.init_from=c.textContent)}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new k).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new j).parse(c),this.type=c.nodeName}}return this};j.prototype.parse=function(a){var b=
{},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case "source":e=(new A).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};j.prototype.parseInputs=
function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":b.push((new y).parse(d))}}return b};k.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case "bind_shape_matrix":f=N(f.textContent);this.bindShapeMatrix=ea(f);break;case "source":f=
(new A).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};k.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":var d=(new y).parse(d),e=b[d.source];"JOINT"==d.semantic?this.joints=e.read():"INV_BIND_MATRIX"==d.semantic&&(this.invBindMatrices=e.read())}}};k.prototype.parseWeights=function(a,
b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case "input":e.push((new y).parse(g));break;case "v":c=wa(g.textContent);break;case "vcount":d=wa(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],j=[],l=0;l<h;l++){for(var k={},m=0;m<e.length;m++){var p=e[m],q=c[g+p.offset];switch(p.semantic){case "JOINT":k.joint=q;break;case "WEIGHT":k.weight=b[p.source].data[q]}}j.push(k);g+=e.length}for(l=0;l<j.length;l++)j[l].index=f;this.weights.push(j)}};
l.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};l.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};l.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "node":this.nodes.push((new m).parse(c))}}return this};
m.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=0<=e.indexOf("."),g=0<=e.indexOf("("),h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};m.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=
0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};m.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};m.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};m.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");
this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type="JOINT"==this.type?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case "node":this.nodes.push((new m).parse(b));break;case "instance_camera":this.cameras.push((new R).parse(b));break;case "instance_controller":this.controllers.push((new s).parse(b));
break;case "instance_geometry":this.geometries.push((new q).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=W.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",W,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new m).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new p).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=
[];c=1E6;b=-1E6;for(var d in ia)for(var e=ia[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];d==this.id&&(h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g))}a.length&&(this.startTime=c,this.endTime=b);if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var j=this.channels[c],f=j.fullSid,g=j.sampler,h=g.input,l=this.getTransformBySid(j.sid),k;if(j.arrIndices){k=[];b=0;for(var r=j.arrIndices.length;b<
r;b++){var t=k,u=b,n=j.arrIndices[b];-1<n&&3>n&&(n=pa(["X","Y","Z"][n]),n={X:0,Y:1,Z:2}[n]);t[u]=n}}else k=pa(j.member);if(l){-1===a.indexOf(f)&&a.push(f);b=0;for(r=h.length;b<r;b++){for(var t=h[b],j=g.getData(l.type,b),u=null,n=0,v=d.length;n<v&&null==u;n++){var w=d[n];if(w.time===t)u=w;else if(w.time>t)break}if(!u){u=new S(t);n=-1;v=0;for(w=d.length;v<w&&-1==n;v++)d[v].time>=t&&(n=v);t=n;d.splice(-1==t?d.length:t,0,u)}u.addTarget(f,l,k,j)}}else console.log('Could not find transform "'+j.sid+'" in node '+
this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(u=d[b],!u.hasTarget(e)){h=d;f=u;k=b;g=e;l=void 0;a:{l=k?k-1:0;for(l=0<=l?l:l+h.length;0<=l;l--)if(r=h[l],r.hasTarget(g)){l=r;break a}l=null}r=void 0;a:{for(k+=1;k<h.length;k++)if(r=h[k],r.hasTarget(g))break a;r=null}if(l&&r){h=(f.time-l.time)/(r.time-l.time);l=l.getTarget(g);k=r.getTarget(g).data;r=l.data;j=void 0;if("matrix"===l.type)j=r;else if(r.length){j=[];for(t=0;t<r.length;++t)j[t]=r[t]+(k[t]-r[t])*h}else j=r+(k-r)*h;f.addTarget(g,
l.transform,l.member,j)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};m.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};p.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=N(a.textContent);this.convert();return this};p.prototype.convert=function(){switch(this.type){case "matrix":this.obj=ea(this.data);break;case "rotate":this.angle=THREE.Math.degToRad(this.data[3]);
case "translate":aa(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":aa(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};p.prototype.apply=function(a){switch(this.type){case "matrix":a.multiplySelf(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,this.angle);break;case "scale":a.scale(this.obj)}};
p.prototype.update=function(a,b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(1===b.length)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0],this.obj.n24=a[1],this.obj.n34=a[2],this.obj.n44=a[3]}else 2===b.length?this.obj["n"+(b[0]+1)+
(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(a);break;case "translate":case "scale":"[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case "rotate":switch("[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]),b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=
a;break;case "ANGLE":this.angle=THREE.Math.degToRad(a);break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=THREE.Math.degToRad(a[3])}}};s.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1===c.nodeType)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=W.evaluate(".//dae:instance_material",
c,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new r).parse(d)),d=c.iterateNext()}}return this};r.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&"bind_material"==c.nodeName){if(a=
W.evaluate(".//dae:instance_material",c,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new r).parse(b)),b=a.iterateNext();break}}return this};v.prototype.parse=function(a){this.id=a.getAttribute("id");M(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new u(this)).parse(c)}}return this};u.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];
switch(c.nodeName){case "source":var d=c.getAttribute("id");void 0==ra[d]&&(ra[d]=(new A(d)).parse(c));break;case "vertices":this.vertices=(new z).parse(c);break;case "triangles":this.primitives.push((new t).parse(c));break;case "polygons":this.primitives.push((new w).parse(c));break;case "polylist":this.primitives.push((new x).parse(c))}}this.geometry3js=new THREE.Geometry;a=ra[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(na(a,b).clone());for(b=
0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};u.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,j,l,k,m=0,p=3,q=0,n=[];for(c=0;c<f.length;c++)switch(g=f[c],p=g.offset+1,q=
q<p?p:q,g.semantic){case "TEXCOORD":n.push(g.set)}for(var r=0;r<e.length;++r)for(var s=e[r],t=0;t<s.length;){var u=[],v=[],w=null,x=[],p=a.vcount?a.vcount.length?a.vcount[m++]:a.vcount:s.length/q;for(c=0;c<p;c++)for(d=0;d<f.length;d++)switch(g=f[d],l=ra[g.source],h=s[t+c*q+g.offset],k=l.accessor.params.length,j=h*k,g.semantic){case "VERTEX":u.push(h);break;case "NORMAL":v.push(na(l.data,j));break;case "TEXCOORD":w=w||{};void 0===w[g.set]&&(w[g.set]=[]);w[g.set].push(new THREE.Vector2(l.data[j],l.data[j+
1]));break;case "COLOR":x.push((new THREE.Color).setRGB(l.data[j],l.data[j+1],l.data[j+2]))}if(0==v.length)if(g=this.vertices.input.NORMAL){l=ra[g.source];k=l.accessor.params.length;c=0;for(h=u.length;c<h;c++)v.push(na(l.data,u[c]*k))}else b.calcNormals=!0;if(!w&&(w={},g=this.vertices.input.TEXCOORD)){n.push(g.set);l=ra[g.source];k=l.accessor.params.length;c=0;for(h=u.length;c<h;c++)j=u[c]*k,void 0===w[g.set]&&(w[g.set]=[]),w[g.set].push(new THREE.Vector2(l.data[j],1-l.data[j+1]))}if(0==x.length&&
(g=this.vertices.input.COLOR)){l=ra[g.source];k=l.accessor.params.length;c=0;for(h=u.length;c<h;c++)j=u[c]*k,x.push((new THREE.Color).setRGB(l.data[j],l.data[j+1],l.data[j+2]))}d=null;g=[];if(3===p)g.push(new THREE.Face3(u[0],u[1],u[2],v,x.length?x:new THREE.Color));else if(4===p)g.push(new THREE.Face4(u[0],u[1],u[2],u[3],v,x.length?x:new THREE.Color));else if(4<p&&ta.subdivideFaces){x=x.length?x:new THREE.Color;for(d=1;d<p-1;)g.push(new THREE.Face3(u[0],u[d],u[d+1],[v[0],v[d++],v[d]],x))}if(g.length){c=
0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<n.length;d++)u=w[n[d]],u=4<p?[u[0],u[c+1],u[c+2]]:4===p?[u[0],u[1],u[2],u[3]]:[u[0],u[1],u[2]],b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]),b.faceVertexUvs[d].push(u)}}else console.log("dropped face with vcount "+p+" for geometry with id: "+b.id);t+=q*p}};w.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)this.inputs[b].source==a.id&&(this.inputs[b].source=a.input.POSITION.source)};w.prototype.parse=
function(a){this.material=a.getAttribute("material");this.count=Aa(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new y).parse(a.childNodes[b]));break;case "vcount":this.vcount=wa(c.textContent);break;case "p":this.p.push(wa(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};x.prototype=Object.create(w.prototype);t.prototype=Object.create(w.prototype);D.prototype.parse=function(a){this.params=
[];this.source=a.getAttribute("source");this.count=Aa(a,"count",0);this.stride=Aa(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if("param"==c.nodeName){var d={};d.name=c.getAttribute("name");d.type=c.getAttribute("type");this.params.push(d)}}return this};z.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if("input"==a.childNodes[b].nodeName){var c=(new y).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};y.prototype.parse=
function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=Aa(a,"set",-1);this.offset=Aa(a,"offset",0);"TEXCOORD"==this.semantic&&0>this.set&&(this.set=0);return this};A.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=Q(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push("true"==d[f]||"1"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;
break;case "float_array":this.data=N(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=wa(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=Q(c.textContent);this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if("accessor"==c.childNodes[d].nodeName){this.accessor=(new D).parse(c.childNodes[d]);break}}}return this};A.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;
case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=ea(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+b.type+".")}return a};G.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if("instance_effect"==a.childNodes[b].nodeName){this.instance_effect=(new F).parse(a.childNodes[b]);break}return this};H.prototype.isColor=function(){return null==this.texture};
H.prototype.isTexture=function(){return null!=this.texture};H.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "color":c=N(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};
H.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&"extra"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&"technique"===a.childNodes[1].nodeName&&(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=
c.textContent}}return this};J.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=(new H).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=W.evaluate(".//dae:float",c,I,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();
d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};J.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=this[c];if(d instanceof H)if(d.isTexture()){var e=this.effect.sampler[d.texture].source;if(e&&(e=fa[this.effect.surface[e].init_from]))e=THREE.ImageUtils.loadTexture(Ga+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:
THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e,"emission"===c&&(a.emissive=16777215)}else if("diffuse"===c||!b)"emission"===c?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];0<a[c]&&(a.envMap=ta.defaultEnvMap);a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=
this[c];1!==this[c]&&(a.envMap=ta.defaultEnvMap);break;case "transparency":b&&(a.transparent=!0,a.opacity=this[c],b=!0)}a.shading=pb;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case "constant":void 0!=a.emissive&&(a.color=a.emissive);this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":void 0!=a.diffuse&&(a.color=a.diffuse);this.material=new THREE.MeshPhongMaterial(a);break;default:void 0!=a.diffuse&&(a.color=a.diffuse),this.material=new THREE.MeshLambertMaterial(a)}return this.material};
T.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};E.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=
c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+c.nodeName)}}return this};O.prototype.create=function(){if(null==this.shader)return null};O.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");M(this,a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};O.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "surface":this.surface[b]=(new T(this)).parse(d);break;case "sampler2D":this.sampler[b]=(new E(this)).parse(d);break;case "extra":break;default:console.log(d.nodeName)}}};O.prototype.parseProfileCOMMON=
function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);break;case "image":d=(new g).parse(d);fa[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};O.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=
(new J(c.nodeName,this)).parse(c)}}};F.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};L.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "animation":var c=(new L).parse(c),d;for(d in c.source)this.source[d]=c.source[d];for(var e=0;e<c.channel.length;e++)this.channel.push(c.channel[e]),this.sampler.push(c.sampler[e]);
break;case "source":d=(new A).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new U(this)).parse(c));break;case "channel":this.channel.push((new P(this)).parse(c))}}return this};P.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();a=b.shift();var c=0<=a.indexOf("."),d=0<=a.indexOf("(");if(c)b=a.split("."),this.sid=b.shift(),this.member=b.shift();else if(d){b=a.split("(");
this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};U.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "input":this.inputs.push((new y).parse(c))}}return this};U.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],
c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),this.endTime=
Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};U.prototype.getData=function(a,b){var c;if("matrix"===a&&16===this.strideOut)c=this.output[b];else if(1<this.strideOut){c=[];b*=this.strideOut;for(var d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case "rotate":case "translate":aa(c,-1);break;case "scale":aa(c,1)}else 4===this.strideOut&&"matrix"===a&&aa(c,-1)}else c=this.output[b];return c};S.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,
member:c,transform:b,data:d})};S.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};S.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};S.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};S.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=
this.targets[c],e=a.getTarget(d.sid);if("matrix"!==d.transform.type&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log("Key.interpolate: Warning! Scale out of bounds:"+f),f=0>f?0:1;if(h.length)for(var e=[],j=0;j<h.length;++j)e[j]=h[j]+(g[j]-h[j])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};da.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];
if(1==c.nodeType)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};da.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if("technique_common"==a.childNodes[b].nodeName)for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++)if(this.technique=c.childNodes[d].nodeName,"perspective"==this.technique)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;
break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if("orthographic"==this.technique){e=c.childNodes[d];for(f=0;f<e.childNodes.length;f++)switch(g=e.childNodes[f],g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}return this};
R.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=new XMLHttpRequest;f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)if(f.responseXML)Ea=c,a(f.responseXML,void 0,b);else if(f.responseText){Ea=c;var g=(new DOMParser).parseFromString(f.responseText,"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+
b+")")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader("Content-Length")),d({total:e,loaded:f.responseText.length}))};f.open("GET",b,!0);f.send(null)}else alert("Don't know how to parse XML!")},parse:a,setPreferredShading:function(a){pb=a},applySkin:e,geometries:Wa,options:ta}};THREE.MTLLoader=function(a,b){THREE.EventDispatcher.call(this);this.baseUrl=a;this.options=b};
THREE.MTLLoader.prototype={load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(c){200===c.target.status||0===c.target.status?(c=b.parse(c.target.responseText),b.dispatchEvent({type:"load",content:c})):b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText})},!1);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);c.open("GET",a,!0);c.send(null)},parse:function(a){var b=a.split("\n"),c={},d=/\s+/;a={};for(var e=0;e<b.length;e++){var f=b[e],f=f.trim();if(!(0===f.length||"#"===f.charAt(0))){var g=f.indexOf(" "),h=0<=g?f.substring(0,g):f,h=h.toLowerCase(),f=0<=g?f.substring(g+1):"",f=f.trim();"newmtl"===h?(c={name:f},a[f]=c):c&&("ka"===h||"kd"===h||"ks"===h?(f=f.split(d,3),c[h]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]):c[h]=f)}}b=new THREE.MTLLoader.MaterialCreator(this.baseUrl,
this.options);b.setMaterials(a);return b}};THREE.MTLLoader.MaterialCreator=function(a,b){THREE.EventDispatcher.call(this);this.baseUrl=a;this.options=b;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={},c;for(c in a){var d=a[c],e={};b[c]=e;for(var f in d){var g=!0,h=d[f],j=f.toLowerCase();switch(j){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&(h=[h[0]/255,h[1]/255,h[2]/255]);this.options&&this.options.ignoreZeroRGBs&&0===h[0]&&(0===h[1]&&0===h[1])&&(g=!1);
break;case "d":this.options&&this.options.invertTransparency&&(h=1-h)}g&&(e[j]=h)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,b;for(b in this.materialsInfo)this.materialsArray[a]=this.create(b),this.nameLookup[b]=a,a++;return this.materialsArray},create:function(a){void 0===this.materials[a]&&this.createMaterial_(a);return this.materials[a]},createMaterial_:function(a){var b=this.materialsInfo[a],
c={name:a,side:this.side},d;for(d in b){var e=b[d];switch(d.toLowerCase()){case "kd":c.diffuse=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ka":c.ambient=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ks":c.specular=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "map_kd":c.map=THREE.MTLLoader.loadTexture(this.baseUrl+e);c.map.wrapS=this.wrap;c.map.wrapT=this.wrap;break;case "ns":c.shininess=e;break;case "d":1>e&&(c.transparent=!0,c.opacity=e)}}c.diffuse&&(c.ambient||(c.ambient=
c.diffuse),c.color=c.diffuse);this.materials[a]=new THREE.MeshPhongMaterial(c);return this.materials[a]}};
THREE.MTLLoader.loadTexture=function(a,b,c,d){if(a.toLowerCase().endsWith(".dds"))var e=THREE.ImageUtils.loadCompressedTexture(a,b,c,d);else{var f=new Image,e=new THREE.Texture(f,b);b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=THREE.MTLLoader.ensurePowerOfTwo_(a.content);e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f)}return e};
THREE.MTLLoader.ensurePowerOfTwo_=function(a){if(!THREE.MTLLoader.isPowerOfTwo_(a.width)||!THREE.MTLLoader.isPowerOfTwo_(a.height)){var b=document.createElement("canvas");b.width=THREE.MTLLoader.nextHighestPowerOfTwo_(a.width);b.height=THREE.MTLLoader.nextHighestPowerOfTwo_(a.height);b.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,b.width,b.height);return b}return a};THREE.MTLLoader.isPowerOfTwo_=function(a){return 0===(a&a-1)};
THREE.MTLLoader.nextHighestPowerOfTwo_=function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1};THREE.OBJLoader=function(){THREE.EventDispatcher.call(this)};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){a=c.parse(a.target.responseText);c.dispatchEvent({type:"load",content:a});b&&b(a)},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,!0);d.send(null)},parse:function(a){function b(a,
b,c){return new THREE.Vector3(a,b,c)}function c(a,b){return new THREE.Vector2(a,b)}function d(a,b,c,d){return new THREE.Face3(a,b,c,d)}function e(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}var f=new THREE.Object3D,g=[],h=[],j=[],k,l;for(k=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(l=k.exec(a));)g.push(b(parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3])));for(k=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(l=k.exec(a));)h.push(b(parseFloat(l[1]),
parseFloat(l[2]),parseFloat(l[3])));for(k=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;null!=(l=k.exec(a));)j.push(c(parseFloat(l[1]),parseFloat(l[2])));a=a.split("\no ");for(var m=0,p=a.length;m<p;m++){var s=a[m],r=new THREE.Geometry;r.vertices=g;for(k=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/g;null!=(l=k.exec(s));)void 0===l[4]?r.faces.push(d(parseInt(l[1])-1,parseInt(l[2])-1,parseInt(l[3])-1)):r.faces.push(e(parseInt(l[1])-1,parseInt(l[2])-1,parseInt(l[3])-1,parseInt(l[4])-1));for(k=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/g;null!=
(l=k.exec(s));)void 0===l[10]?(r.faces.push(d(parseInt(l[2])-1,parseInt(l[5])-1,parseInt(l[8])-1)),r.faceVertexUvs[0].push([j[parseInt(l[3])-1],j[parseInt(l[6])-1],j[parseInt(l[9])-1]])):(r.faces.push(e(parseInt(l[2])-1,parseInt(l[5])-1,parseInt(l[8])-1,parseInt(l[11])-1)),r.faceVertexUvs[0].push([j[parseInt(l[3])-1],j[parseInt(l[6])-1],j[parseInt(l[9])-1],j[parseInt(l[12])-1]]));for(k=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/g;null!=
(l=k.exec(s));)void 0===l[13]?(r.faces.push(d(parseInt(l[2])-1,parseInt(l[6])-1,parseInt(l[10])-1,[h[parseInt(l[4])-1],h[parseInt(l[8])-1],h[parseInt(l[12])-1]])),r.faceVertexUvs[0].push([j[parseInt(l[3])-1],j[parseInt(l[7])-1],j[parseInt(l[11])-1]])):(r.faces.push(e(parseInt(l[2])-1,parseInt(l[6])-1,parseInt(l[10])-1,parseInt(l[14])-1,[h[parseInt(l[4])-1],h[parseInt(l[8])-1],h[parseInt(l[12])-1],h[parseInt(l[16])-1]])),r.faceVertexUvs[0].push([j[parseInt(l[3])-1],j[parseInt(l[7])-1],j[parseInt(l[11])-
1],j[parseInt(l[15])-1]]));for(k=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/g;null!=(l=k.exec(s));)void 0===l[10]?r.faces.push(d(parseInt(l[2])-1,parseInt(l[5])-1,parseInt(l[8])-1,[h[parseInt(l[3])-1],h[parseInt(l[6])-1],h[parseInt(l[9])-1]])):r.faces.push(e(parseInt(l[2])-1,parseInt(l[5])-1,parseInt(l[8])-1,parseInt(l[11])-1,[h[parseInt(l[3])-1],h[parseInt(l[6])-1],h[parseInt(l[9])-1],h[parseInt(l[12])-1]]));r.computeCentroids();r.computeFaceNormals();
r.computeBoundingSphere();f.add(new THREE.Mesh(r,new THREE.MeshLambertMaterial))}return f}};THREE.OBJMTLLoader=function(){THREE.EventDispatcher.call(this)};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(a,b,c){function d(c){"load"===c.type?c.content instanceof THREE.MTLLoader.MaterialCreator?(g=!0,j=c.content,j.preload()):200===c.target.status||0===c.target.status?(c=c.target.responseText,h=b?e.parse(c):e.parse(c,function(a){g=!1;k.load(k.baseUrl+a)})):e.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText}):"error"===c.type&&(g=!0);g&&h&&(j&&h.traverse(function(a){if(a instanceof
THREE.Mesh&&a.material.name){var b=j.create(a.material.name);b&&(a.material=b)}}),e.dispatchEvent({type:"load",content:h}))}var e=this,f=new XMLHttpRequest,g,h,j,k=new THREE.MTLLoader(a.substr(0,a.lastIndexOf("/")+1),c);k.addEventListener("load",d);k.addEventListener("error",d);b?(k.load(b),g=!1):g=!0;f.addEventListener("load",d,!1);f.addEventListener("progress",function(a){e.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);f.addEventListener("error",function(){e.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);f.open("GET",a,!0);f.send(null)},parse:function(a,b){function c(a,b,c){return new THREE.Vector3(a,b,c)}function d(a,b){return new THREE.Vector2(a,b)}function e(a,b,c,d){return new THREE.Face3(a,b,c,d)}function f(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}function g(a,b){b.geometry.computeCentroids();b.geometry.computeFaceNormals();b.geometry.computeBoundingSphere();a.add(new THREE.Mesh(b.geometry,b.material))}var h=[],j=[],k=[],l=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,
m=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,p=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,s=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/,r=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/,q=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/,v=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/,u=new THREE.Object3D,w=new THREE.Geometry;w.vertices=h;
for(var x={material:new THREE.MeshLambertMaterial,geometry:w},t=a.split("\n"),D=0;D<t.length;D++){var z=t[D],z=z.trim(),y;0===z.length||"#"===z.charAt(0)||(null!==(y=l.exec(z))?h.push(c(parseFloat(y[1]),parseFloat(y[2]),parseFloat(y[3]))):null!==(y=m.exec(z))?j.push(c(parseFloat(y[1]),parseFloat(y[2]),parseFloat(y[3]))):null!==(y=p.exec(z))?k.push(d(parseFloat(y[1]),parseFloat(y[2]))):null!==(y=s.exec(z))?void 0===y[4]?w.faces.push(e(parseInt(y[1])-1,parseInt(y[2])-1,parseInt(y[3])-1)):w.faces.push(f(parseInt(y[1])-
1,parseInt(y[2])-1,parseInt(y[3])-1,parseInt(y[4])-1)):null!==(y=r.exec(z))?void 0===y[10]?(w.faces.push(e(parseInt(y[2])-1,parseInt(y[5])-1,parseInt(y[8])-1)),w.faceVertexUvs[0].push([k[parseInt(y[3])-1],k[parseInt(y[6])-1],k[parseInt(y[9])-1]])):(w.faces.push(f(parseInt(y[2])-1,parseInt(y[5])-1,parseInt(y[8])-1,parseInt(y[11])-1)),w.faceVertexUvs[0].push([k[parseInt(y[3])-1],k[parseInt(y[6])-1],k[parseInt(y[9])-1],k[parseInt(y[12])-1]])):null!==(y=q.exec(z))?void 0===y[13]?(w.faces.push(e(parseInt(y[2])-
1,parseInt(y[6])-1,parseInt(y[10])-1,[j[parseInt(y[4])-1],j[parseInt(y[8])-1],j[parseInt(y[12])-1]])),w.faceVertexUvs[0].push([k[parseInt(y[3])-1],k[parseInt(y[7])-1],k[parseInt(y[11])-1]])):(w.faces.push(f(parseInt(y[2])-1,parseInt(y[6])-1,parseInt(y[10])-1,parseInt(y[14])-1,[j[parseInt(y[4])-1],j[parseInt(y[8])-1],j[parseInt(y[12])-1],j[parseInt(y[16])-1]])),w.faceVertexUvs[0].push([k[parseInt(y[3])-1],k[parseInt(y[7])-1],k[parseInt(y[11])-1],k[parseInt(y[15])-1]])):null!==(y=v.exec(z))?void 0===
y[10]?w.faces.push(e(parseInt(y[2])-1,parseInt(y[5])-1,parseInt(y[8])-1,[j[parseInt(y[3])-1],j[parseInt(y[6])-1],j[parseInt(y[9])-1]])):w.faces.push(f(parseInt(y[2])-1,parseInt(y[5])-1,parseInt(y[8])-1,parseInt(y[11])-1,[j[parseInt(y[3])-1],j[parseInt(y[6])-1],j[parseInt(y[9])-1],j[parseInt(y[12])-1]])):z.startsWith("usemtl ")?(z=z.substring(7),z=z.trim(),y=new THREE.MeshLambertMaterial,y.name=z,0<w.faces.length&&(g(u,x),w=new THREE.Geometry,w.vertices=h,x={geometry:w}),x.material=y):z.startsWith("g ")?
(z=z.substring(2),z=z.trim()):z.startsWith("o ")?(z=z.substring(2),z=z.trim()):z.startsWith("s ")||(z.startsWith("mtllib ")?b&&(z=z.substring(7),z=z.trim(),b(z)):console.error("Unhandled line "+z)))}g(u,x);return u}};THREE.STLLoader=function(){THREE.EventDispatcher.call(this)};
THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){a=c.parse(a.target.responseText);c.dispatchEvent({type:"load",content:a});b&&b(a)},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,!0);d.send(null)},parse:function(a){for(var b=
new THREE.Geometry,c=/facet([\s\S]*?)endfacet/g,d;null!=(d=c.exec(a));){for(var e=d[0],f=/normal[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=(d=f.exec(e));)var g=new THREE.Vector3(d[1],d[3],d[5]);for(f=/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=(d=f.exec(e));)b.vertices.push(new THREE.Vector3(d[1],
d[3],d[5]));d=b.vertices.length;b.faces.push(new THREE.Face3(d-3,d-2,d-1,g))}b.computeCentroids();b.computeBoundingSphere();return b}};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype.load=function(a,b,c){this.downloadModelJson(a,c,b)};THREE.UTF8Loader.BufferGeometryCreator=function(){};
THREE.UTF8Loader.BufferGeometryCreator.prototype.create=function(a,b){var c=b.length/3,d=new THREE.BufferGeometry,e=new Float32Array(9*c),f=new Float32Array(9*c),c=new Float32Array(6*c),g,h,j,k,l,m=a.length;for(g=h=0;g<m;g+=8)j=a[g],k=a[g+1],l=a[g+2],e[h++]=j,e[h++]=k,e[h++]=l;h=0;for(g=3;g<m;g+=8)j=a[g],k=a[g+1],c[h++]=j,c[h++]=k;h=0;for(g=5;g<m;g+=8)j=a[g],k=a[g+1],l=a[g+2],f[h++]=j,f[h++]=k,f[h++]=l;g=d.attributes;g.index={itemSize:1,array:b,numItems:b.length};g.position={itemSize:3,array:e,numItems:e.length};
g.normal={itemSize:3,array:f,numItems:f.length};g.uv={itemSize:2,array:c,numItems:c.length};d.offsets=[{start:0,count:b.length,index:0}];d.computeBoundingSphere();return d};THREE.UTF8Loader.GeometryCreator=function(){};
THREE.UTF8Loader.GeometryCreator.prototype={create:function(a,b){var c=new THREE.Geometry;this.init_vertices(c,a,8,0);var d=this.init_uvs(a,8,3),e=this.init_normals(a,8,5);this.init_faces(c,e,d,b);c.computeCentroids();c.computeFaceNormals();return c},init_vertices:function(a,b,c,d){for(var e,f,g,h=b.length;d<h;d+=c)e=b[d],f=b[d+1],g=b[d+2],this.addVertex(a,e,f,g)},init_normals:function(a,b,c){for(var d=[],e,f,g,h=a.length;c<h;c+=b)e=a[c],f=a[c+1],g=a[c+2],d.push(e,f,g);return d},init_uvs:function(a,
b,c){for(var d=[],e,f,g=a.length;c<g;c+=b)e=a[c],f=a[c+1],d.push(e,f);return d},init_faces:function(a,b,c,d){var e,f,g,h,j,k,l,m=d.length;for(e=0;e<m;e+=3)f=d[e],g=d[e+1],h=d[e+2],this.f3n(a,b,f,g,h,0,f,g,h),j=c[2*f],f=c[2*f+1],k=c[2*g],g=c[2*g+1],l=c[2*h],h=c[2*h+1],this.uv3(a.faceVertexUvs[0],j,f,k,g,l,h)},addVertex:function(a,b,c,d){a.vertices.push(new THREE.Vector3(b,c,d))},f3n:function(a,b,c,d,e,f,g,h,j){var k=b[3*h],l=b[3*h+1],m=b[3*h+2];h=b[3*j];var p=b[3*j+1];j=b[3*j+2];b=new THREE.Vector3(b[3*
g],b[3*g+1],b[3*g+2]);k=new THREE.Vector3(k,l,m);l=new THREE.Vector3(h,p,j);a.faces.push(new THREE.Face3(c,d,e,[b,k,l],null,f))},uv3:function(a,b,c,d,e,f,g){var h=[];h.push(new THREE.Vector2(b,c));h.push(new THREE.Vector2(d,e));h.push(new THREE.Vector2(f,g));a.push(h)}};var DEFAULT_DECODE_PARAMS={decodeOffsets:[-4095,-4095,-4095,0,0,-511,-511,-511],decodeScales:[1/8191,1/8191,1/8191,1/1023,1/1023,1/1023,1/1023,1/1023]};
THREE.UTF8Loader.prototype.decompressAttribsInner_=function(a,b,c,d,e,f,g,h){for(var j=0;b<c;b++){var k=a.charCodeAt(b),j=j+(k>>1^-(k&1));d[e]=h*(j+g);e+=f}};THREE.UTF8Loader.prototype.decompressIndices_=function(a,b,c,d,e){for(var f=0,g=0;g<c;g++){var h=a.charCodeAt(b++);d[e++]=f-h;0===h&&f++}};
THREE.UTF8Loader.prototype.decompressAABBs_=function(a,b,c,d,e){var f=6*c;c=b+f;for(var g=0,f=new Float32Array(f);b<c;b+=6){var h=a.charCodeAt(b+0)+d[0],j=a.charCodeAt(b+1)+d[1],k=a.charCodeAt(b+2)+d[2],l=a.charCodeAt(b+3)+1>>1,m=a.charCodeAt(b+4)+1>>1,p=a.charCodeAt(b+5)+1>>1;f[g++]=e[0]*(h+l);f[g++]=e[1]*(j+m);f[g++]=e[2]*(k+p);f[g++]=e[0]*l;f[g++]=e[1]*m;f[g++]=e[2]*p}return f};
THREE.UTF8Loader.prototype.decompressMesh=function(a,b,c,d,e,f){var g=c.decodeScales.length,h=c.decodeOffsets;c=c.decodeScales;for(var j=b.attribRange[1],k=b.attribRange[0],l=new Float32Array(g*j),m=0;m<g;m++){var p=k+j,s=c[m];s&&this.decompressAttribsInner_(a,k,p,l,m,g,h[m],s);k=p}j=3*b.indexRange[1];g=new Uint16Array(j);this.decompressIndices_(a,k,j,g,0);k=void 0;(j=b.bboxes)&&(k=this.decompressAABBs_(a,j,b.names.length,h,c));f(d,e,l,g,k,b)};
THREE.UTF8Loader.prototype.copyAttrib=function(a,b,c,d){for(var e=0;e<a;e++)c[e]=b[a*d+e]};THREE.UTF8Loader.prototype.decodeAttrib2=function(a,b,c,d,e,f,g,h,j,k){for(var l=0;5>l;l++){var m=a.charCodeAt(e+f*l+k);j[l]+=m>>1^-(m&1);h[b*k+l]=j[l];g[b*k+l]=d[l]*(j[l]+c[l])}};
THREE.UTF8Loader.prototype.accumulateNormal=function(a,b,c,d,e){var f=d[8*a],g=d[8*a+1],h=d[8*a+2],j=d[8*b],k=d[8*b+1],l=d[8*b+2],m=d[8*c],p=d[8*c+1];d=d[8*c+2];j-=f;k-=g;l-=h;m-=f;p-=g;d-=h;f=k*d-l*p;g=l*m-j*d;h=j*p-k*m;e[3*a]+=f;e[3*a+1]+=g;e[3*a+2]+=h;e[3*b]+=f;e[3*b+1]+=g;e[3*b+2]+=h;e[3*c]+=f;e[3*c+1]+=g;e[3*c+2]+=h};
THREE.UTF8Loader.prototype.decompressMesh2=function(a,b,c,d,e,f){var g=c.decodeScales.length,h=c.decodeOffsets,j=c.decodeScales;c=b.attribRange[0];for(var k=b.attribRange[1],l=b.codeRange[0],m=3*b.codeRange[2],p=new Uint16Array(m),s=new Int32Array(3*k),r=new Uint16Array(g),q=new Uint16Array(g*k),v=new Float32Array(g*k),u=0,w=0,x=0;x<m;x+=3){var t=a.charCodeAt(l++),D=Math.min(x,96);if(t<D){var z=t%3,t=x-(t-z),y,A,G;switch(z){case 0:y=p[t+2];A=p[t+1];G=p[t+0];break;case 1:y=p[t+0];A=p[t+2];G=p[t+1];
break;case 2:y=p[t+1],A=p[t+0],G=p[t+2]}p[w++]=y;p[w++]=A;t=a.charCodeAt(l++);z=u-t;p[w++]=z;if(0===t){for(t=0;5>t;t++)D=a.charCodeAt(c+k*t+u),D=(D>>1^-(D&1))+q[g*y+t]+q[g*A+t]-q[g*G+t],r[t]=D,q[g*u+t]=D,v[g*u+t]=j[t]*(D+h[t]);u++}else this.copyAttrib(g,q,r,z);this.accumulateNormal(y,A,z,q,s)}else{z=u-(t-D);p[w++]=z;t===D?this.decodeAttrib2(a,g,h,j,c,k,v,q,r,u++):this.copyAttrib(g,q,r,z);t=a.charCodeAt(l++);D=u-t;p[w++]=D;0===t?this.decodeAttrib2(a,g,h,j,c,k,v,q,r,u++):this.copyAttrib(g,q,r,D);var t=
a.charCodeAt(l++),H=u-t;p[w++]=H;if(0===t){for(t=0;5>t;t++)r[t]=(q[g*z+t]+q[g*D+t])/2;this.decodeAttrib2(a,g,h,j,c,k,v,q,r,u++)}else this.copyAttrib(g,q,r,H);this.accumulateNormal(z,D,H,q,s)}}for(x=0;x<k;x++)h=s[3*x],y=s[3*x+1],A=s[3*x+2],G=511/Math.sqrt(h*h+y*y+A*A),j=a.charCodeAt(c+5*k+x),l=a.charCodeAt(c+6*k+x),m=a.charCodeAt(c+7*k+x),v[g*x+5]=G*h+(j>>1^-(j&1)),v[g*x+6]=G*y+(l>>1^-(l&1)),v[g*x+7]=G*A+(m>>1^-(m&1));f(d,e,v,p,void 0,b)};
THREE.UTF8Loader.prototype.downloadMesh=function(a,b,c,d,e){function f(a){for(;h<c.length;){var f=c[h],l=f.indexRange;if(l){l=l[0]+3*l[1];if(a.responseText.length<l)break;g.decompressMesh(a.responseText,f,d,b,h,e)}else{l=f.codeRange;l=l[0]+l[1];if(a.responseText.length<l)break;g.decompressMesh2(a.responseText,f,d,b,h,e)}++h}}var g=this,h=0;getHttpRequest(a,function(a,b){(200===a.status||0===a.status)&&f(a,b)},f)};
THREE.UTF8Loader.prototype.downloadMeshes=function(a,b,c,d){for(var e in b)this.downloadMesh(a+e,e,b[e],c,d)};
THREE.UTF8Loader.prototype.createMeshCallback=function(a,b,c){var d=0,e=0,f={},g={},h={},j=b.urls,k;for(k in j)f[k]=j[k].length,g[k]=0,e++,h[k]=new THREE.Object3D;var l=new THREE.Object3D,m=new THREE.MTLLoader.MaterialCreator(a,b.options);m.setMaterials(b.materials);m.preload();var p=new THREE.UTF8Loader.GeometryCreator,s=new THREE.UTF8Loader.BufferGeometryCreator;return function(a,j,k,u,w,x){j=(void 0!==b.options.useBuffers?b.options.useBuffers:1)?s.create(k,u):p.create(k,u);x=m.create(x.material);
x=new THREE.Mesh(j,x);h[a].add(x);g[a]++;g[a]===f[a]&&(d++,l.add(h[a]),d===e&&c(l))}};THREE.UTF8Loader.prototype.downloadModel=function(a,b,c,d){b=this.createMeshCallback(b,c,d);this.downloadMeshes(a,c.urls,c.decodeParams,b)};
THREE.UTF8Loader.prototype.downloadModelJson=function(a,b,c){getJsonRequest(a,function(d){d.decodeParams||(d.decodeParams=b&&b.decodeParams?b.decodeParams:DEFAULT_DECODE_PARAMS);d.options=b;var e=a.substr(0,a.lastIndexOf("/")+1),f=e;b&&b.geometryBase&&(e=b.geometryBase,"/"!==e.charAt(e.length-1)&&(e+="/"));b&&b.materialBase&&(f=b.materialBase,"/"!==f.charAt(f.length-1)&&(f+="/"));this.downloadModel(e,f,d,c)}.bind(this))};
function getHttpRequest(a,b,c){var d=new XMLHttpRequest;addListeners(d,{load:function(a){b(d,a)},progress:function(a){c(d,a)}});d.open("GET",a,!0);d.send(null)}function getJsonRequest(a,b){getHttpRequest(a,function(a){b(JSON.parse(a.responseText))},function(){})}function addListeners(a,b){for(var c in b)a.addEventListener(c,b[c])};THREE.VTKLoader=function(){THREE.EventDispatcher.call(this)};
THREE.VTKLoader.prototype={constructor:THREE.VTKLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){a=c.parse(a.target.responseText);c.dispatchEvent({type:"load",content:a});b&&b(a)},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,!0);d.send(null)},parse:function(a){var b=
new THREE.Geometry,c,d;for(c=/([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)/g;null!=(d=c.exec(a));){var e=parseFloat(d[1]),f=parseFloat(d[2]);d=parseFloat(d[3]);b.vertices.push(new THREE.Vector3(e,f,d))}for(c=/3[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=(d=c.exec(a));)e=parseInt(d[1]),f=parseInt(d[2]),d=parseInt(d[3]),b.faces.push(new THREE.Face3(e,f,d));for(c=/4[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=(d=c.exec(a));){var e=parseInt(d[1]),
f=parseInt(d[2]),g=parseInt(d[3]);d=parseInt(d[4]);b.faces.push(new THREE.Face4(e,f,g,d))}b.computeCentroids();b.computeFaceNormals();b.computeVertexNormals();b.computeBoundingSphere();return b}};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(a){if(!this._buffer||this._windowSize!==a)this._buffer=[];this._windowSize=a;this._streamPos=this._pos=0};LZMA.OutWindow.prototype.flush=function(){var a=this._pos-this._streamPos;if(0!==a){for(;a--;)this._stream.writeByte(this._buffer[this._streamPos++]);this._pos>=this._windowSize&&(this._pos=0);this._streamPos=this._pos}};
LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(a){this.releaseStream();this._stream=a};LZMA.OutWindow.prototype.init=function(a){a||(this._pos=this._streamPos=0)};LZMA.OutWindow.prototype.copyBlock=function(a,b){var c=this._pos-a-1;for(0>c&&(c+=this._windowSize);b--;)c>=this._windowSize&&(c=0),this._buffer[this._pos++]=this._buffer[c++],this._pos>=this._windowSize&&this.flush()};
LZMA.OutWindow.prototype.putByte=function(a){this._buffer[this._pos++]=a;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(a){a=this._pos-a-1;0>a&&(a+=this._windowSize);return this._buffer[a]};LZMA.RangeDecoder=function(){};LZMA.RangeDecoder.prototype.setStream=function(a){this._stream=a};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};
LZMA.RangeDecoder.prototype.init=function(){var a=5;this._code=0;for(this._range=-1;a--;)this._code=this._code<<8|this._stream.readByte()};LZMA.RangeDecoder.prototype.decodeDirectBits=function(a){for(var b=0,c;a--;)this._range>>>=1,c=this._code-this._range>>>31,this._code-=this._range&c-1,b=b<<1|1-c,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return b};
LZMA.RangeDecoder.prototype.decodeBit=function(a,b){var c=a[b],d=(this._range>>>11)*c;if((this._code^2147483648)<(d^2147483648))return this._range=d,a[b]+=2048-c>>>5,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0;this._range-=d;this._code-=d;a[b]-=c>>>5;0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return 1};LZMA.initBitModels=function(a,b){for(;b--;)a[b]=1024};
LZMA.BitTreeDecoder=function(a){this._models=[];this._numBitLevels=a};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(a){for(var b=1,c=this._numBitLevels;c--;)b=b<<1|a.decodeBit(this._models,b);return b-(1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.reverseDecode=function(a){for(var b=1,c=0,d=0,e;d<this._numBitLevels;++d)e=a.decodeBit(this._models,b),b=b<<1|e,c|=e<<d;return c};
LZMA.reverseDecode2=function(a,b,c,d){for(var e=1,f=0,g=0,h;g<d;++g)h=c.decodeBit(a,b+e),e=e<<1|h,f|=h<<g;return f};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};LZMA.LenDecoder.prototype.create=function(a){for(;this._numPosStates<a;++this._numPosStates)this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3),this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)};
LZMA.LenDecoder.prototype.init=function(){var a=this._numPosStates;for(LZMA.initBitModels(this._choice,2);a--;)this._lowCoder[a].init(),this._midCoder[a].init();this._highCoder.init()};LZMA.LenDecoder.prototype.decode=function(a,b){return 0===a.decodeBit(this._choice,0)?this._lowCoder[b].decode(a):0===a.decodeBit(this._choice,1)?8+this._midCoder[b].decode(a):16+this._highCoder.decode(a)};LZMA.Decoder2=function(){this._decoders=[]};
LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(a){var b=1;do b=b<<1|a.decodeBit(this._decoders,b);while(256>b);return b&255};LZMA.Decoder2.prototype.decodeWithMatchByte=function(a,b){var c=1,d,e;do if(d=b>>7&1,b<<=1,e=a.decodeBit(this._decoders,(1+d<<8)+c),c=c<<1|e,d!==e){for(;256>c;)c=c<<1|a.decodeBit(this._decoders,c);break}while(256>c);return c&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(a,b){var c;if(!this._coders||!(this._numPrevBits===b&&this._numPosBits===a)){this._numPosBits=a;this._posMask=(1<<a)-1;this._numPrevBits=b;this._coders=[];for(c=1<<this._numPrevBits+this._numPosBits;c--;)this._coders[c]=new LZMA.Decoder2}};LZMA.LiteralDecoder.prototype.init=function(){for(var a=1<<this._numPrevBits+this._numPosBits;a--;)this._coders[a].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(a,b){return this._coders[((a&this._posMask)<<this._numPrevBits)+((b&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(a){if(0>a)return!1;this._dictionarySize!==a&&(this._dictionarySize=a,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096)));return!0};
LZMA.Decoder.prototype.setLcLpPb=function(a,b,c){var d=1<<c;if(8<a||4<b||4<c)return!1;this._literalDecoder.create(b,a);this._lenDecoder.create(d);this._repLenDecoder.create(d);this._posStateMask=d-1;return!0};
LZMA.Decoder.prototype.init=function(){var a=4;this._outWindow.init(!1);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();a--;)this._posSlotDecoder[a].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(a,b,c){var d=0,e=0,f=0,g=0,h=0,j=0,k=0;this._rangeDecoder.setStream(a);this._outWindow.setStream(b);for(this.init();0>c||j<c;)if(a=j&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(d<<4)+a))k=this._literalDecoder.getDecoder(j++,k),k=7<=d?k.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(e)):k.decodeNormal(this._rangeDecoder),this._outWindow.putByte(k),d=4>d?0:d-(10>d?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,
d))k=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,d)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(d<<4)+a)&&(d=7>d?9:11,k=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,d)?b=f:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,d)?b=g:(b=h,h=g),g=f),f=e,e=b),0===k&&(k=2+this._repLenDecoder.decode(this._rangeDecoder,a),d=7>d?8:11);else if(h=g,g=f,f=e,k=2+this._lenDecoder.decode(this._rangeDecoder,a),d=7>d?7:10,a=this._posSlotDecoder[5>=k?k-2:3].decode(this._rangeDecoder),
4<=a)if(b=(a>>1)-1,e=(2|a&1)<<b,14>a)e+=LZMA.reverseDecode2(this._posDecoders,e-a-1,this._rangeDecoder,b);else{if(e+=this._rangeDecoder.decodeDirectBits(b-4)<<4,e+=this._posAlignDecoder.reverseDecode(this._rangeDecoder),0>e){if(-1===e)break;return!1}}else e=a;if(e>=j||e>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(e,k);j+=k;k=this._outWindow.getByte(0)}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();return!0};
LZMA.Decoder.prototype.setDecoderProperties=function(a){var b,c;if(5>a.size)return!1;b=a.readByte();c=b%9;b=~~(b/9);if(!this.setLcLpPb(c,b%5,~~(b/5)))return!1;b=a.readByte();b|=a.readByte()<<8;b|=a.readByte()<<16;b+=16777216*a.readByte();return this.setDictionarySize(b)};LZMA.decompress=function(a,b,c,d){var e=new LZMA.Decoder;if(!e.setDecoderProperties(a))throw"Incorrect stream properties";if(!e.decode(b,c,d))throw"Error in data stream";return!0};var CTM=CTM||{};CTM.CompressionMethod={RAW:5718354,MG1:3229517,MG2:3295053};CTM.Flags={NORMALS:1};CTM.File=function(a){this.load(a)};CTM.File.prototype.load=function(a){this.header=new CTM.FileHeader(a);this.body=new CTM.FileBody(this.header);this.getReader().read(a,this.body)};
CTM.File.prototype.getReader=function(){var a;switch(this.header.compressionMethod){case CTM.CompressionMethod.RAW:a=new CTM.ReaderRAW;break;case CTM.CompressionMethod.MG1:a=new CTM.ReaderMG1;break;case CTM.CompressionMethod.MG2:a=new CTM.ReaderMG2}return a};
CTM.FileHeader=function(a){a.readInt32();this.fileFormat=a.readInt32();this.compressionMethod=a.readInt32();this.vertexCount=a.readInt32();this.triangleCount=a.readInt32();this.uvMapCount=a.readInt32();this.attrMapCount=a.readInt32();this.flags=a.readInt32();this.comment=a.readString()};CTM.FileHeader.prototype.hasNormals=function(){return this.flags&CTM.Flags.NORMALS};
CTM.FileBody=function(a){var b=3*a.triangleCount,c=3*a.vertexCount,d=a.hasNormals()?3*a.vertexCount:0,e=2*a.vertexCount,f=4*a.vertexCount,g=0,h=new ArrayBuffer(4*(b+c+d+e*a.uvMapCount+f*a.attrMapCount));this.indices=new Uint32Array(h,0,b);this.vertices=new Float32Array(h,4*b,c);a.hasNormals()&&(this.normals=new Float32Array(h,4*(b+c),d));if(a.uvMapCount){this.uvMaps=[];for(g=0;g<a.uvMapCount;++g)this.uvMaps[g]={uv:new Float32Array(h,4*(b+c+d+g*e),e)}}if(a.attrMapCount){this.attrMaps=[];for(g=0;g<
a.attrMapCount;++g)this.attrMaps[g]={attr:new Float32Array(h,4*(b+c+d+e*a.uvMapCount+g*f),f)}}};
CTM.FileMG2Header=function(a){a.readInt32();this.vertexPrecision=a.readFloat32();this.normalPrecision=a.readFloat32();this.lowerBoundx=a.readFloat32();this.lowerBoundy=a.readFloat32();this.lowerBoundz=a.readFloat32();this.higherBoundx=a.readFloat32();this.higherBoundy=a.readFloat32();this.higherBoundz=a.readFloat32();this.divx=a.readInt32();this.divy=a.readInt32();this.divz=a.readInt32();this.sizex=(this.higherBoundx-this.lowerBoundx)/this.divx;this.sizey=(this.higherBoundy-this.lowerBoundy)/this.divy;
this.sizez=(this.higherBoundz-this.lowerBoundz)/this.divz};CTM.ReaderRAW=function(){};CTM.ReaderRAW.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderRAW.prototype.readIndices=function(a,b){a.readInt32();a.readArrayInt32(b)};CTM.ReaderRAW.prototype.readVertices=function(a,b){a.readInt32();a.readArrayFloat32(b)};
CTM.ReaderRAW.prototype.readNormals=function(a,b){a.readInt32();a.readArrayFloat32(b)};CTM.ReaderRAW.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),b[c].filename=a.readString(),a.readArrayFloat32(b[c].uv)};CTM.ReaderRAW.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),a.readArrayFloat32(b[c].attr)};CTM.ReaderMG1=function(){};
CTM.ReaderMG1.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG1.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG1.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,1);LZMA.decompress(a,a,c,c.data.length)};CTM.ReaderMG1.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length)};
CTM.ReaderMG1.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG1.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG2=function(){};
CTM.ReaderMG2.prototype.read=function(a,b){this.MG2Header=new CTM.FileMG2Header(a);this.readVertices(a,b.vertices);this.readIndices(a,b.indices);b.normals&&this.readNormals(a,b);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG2.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);c=this.readGridIndices(a,b);CTM.restoreVertices(b,this.MG2Header,c,this.MG2Header.vertexPrecision)};
CTM.ReaderMG2.prototype.readGridIndices=function(a,b){a.readInt32();a.readInt32();var c=new Uint32Array(b.length/3),d=new CTM.InterleavedStream(c,1);LZMA.decompress(a,a,d,d.data.length);CTM.restoreGridIndices(c,c.length);return c};CTM.ReaderMG2.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG2.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b.normals,3);LZMA.decompress(a,a,c,c.data.length);c=CTM.calcSmoothNormals(b.indices,b.vertices);CTM.restoreNormals(b.normals,c,this.MG2Header.normalPrecision)};
CTM.ReaderMG2.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].uv,2,d)}};
CTM.ReaderMG2.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].attr,4,d)}};CTM.restoreIndices=function(a,b){var c=3;for(0<b&&(a[2]+=a[0]);c<b;c+=3)a[c]+=a[c-3],a[c+1]=a[c]===a[c-3]?a[c+1]+a[c-2]:a[c+1]+a[c],a[c+2]+=a[c]};CTM.restoreGridIndices=function(a,b){for(var c=1;c<b;++c)a[c]+=a[c-1]};
CTM.restoreVertices=function(a,b,c,d){for(var e,f,g,h,j,k=new Uint32Array(a.buffer,a.byteOffset,a.length),l=b.divx,m=l*b.divy,p=2147483647,s=0,r=0,q=0,v=c.length;r<v;q+=3)g=e=c[r++],j=~~(g/m),g-=~~(j*m),h=~~(g/l),g-=~~(h*l),f=k[q],e===p&&(f+=s),a[q]=b.lowerBoundx+g*b.sizex+d*f,a[q+1]=b.lowerBoundy+h*b.sizey+d*k[q+1],a[q+2]=b.lowerBoundz+j*b.sizez+d*k[q+2],p=e,s=f};
CTM.restoreNormals=function(a,b,c){for(var d,e,f,g,h,j,k=new Uint32Array(a.buffer,a.byteOffset,a.length),l=0,m=a.length;l<m;l+=3)d=k[l]*c,e=k[l+1],0===e?(a[l]=b[l]*d,a[l+1]=b[l+1]*d,a[l+2]=b[l+2]*d):(f=4>=e?1.5707963267948966*(k[l+2]-2):1.5707963267948966*(4*k[l+2]/e-2),e*=1.5707963267948966*c,g=d*Math.sin(e),h=g*Math.cos(f),f=g*Math.sin(f),d*=Math.cos(e),g=b[l+1],e=b[l]-b[l+2],j=Math.sqrt(2*g*g+e*e),1E-20<j&&(e/=j,g/=j),a[l]=b[l]*d+(b[l+1]*g-b[l+2]*e)*f-g*h,a[l+1]=b[l+1]*d-(b[l+2]+b[l])*g*f+e*h,
a[l+2]=b[l+2]*d+(b[l]*e+b[l+1]*g)*f+g*h)};CTM.restoreMap=function(a,b,c){for(var d,e,f=new Uint32Array(a.buffer,a.byteOffset,a.length),g=0,h,j=a.length;g<b;++g){d=0;for(h=g;h<j;h+=b)e=f[h],d+=e&1?-(e+1>>1):e>>1,a[h]=d*c}};
CTM.calcSmoothNormals=function(a,b){var c=new Float32Array(b.length),d,e,f,g,h,j,k,l,m,p,s,r;s=0;for(r=a.length;s<r;)d=3*a[s++],e=3*a[s++],f=3*a[s++],j=b[e]-b[d],l=b[f]-b[d],k=b[e+1]-b[d+1],m=b[f+1]-b[d+1],h=b[e+2]-b[d+2],p=b[f+2]-b[d+2],g=k*p-h*m,h=h*l-j*p,j=j*m-k*l,k=Math.sqrt(g*g+h*h+j*j),1E-10<k&&(g/=k,h/=k,j/=k),c[d]+=g,c[d+1]+=h,c[d+2]+=j,c[e]+=g,c[e+1]+=h,c[e+2]+=j,c[f]+=g,c[f+1]+=h,c[f+2]+=j;s=0;for(r=c.length;s<r;s+=3)k=Math.sqrt(c[s]*c[s]+c[s+1]*c[s+1]+c[s+2]*c[s+2]),1E-10<k&&(c[s]/=k,c[s+
1]/=k,c[s+2]/=k);return c};CTM.isLittleEndian=function(){var a=new ArrayBuffer(2),b=new Uint8Array(a),a=new Uint16Array(a);b[0]=1;return 1===a[0]}();CTM.InterleavedStream=function(a,b){this.data=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);this.offset=CTM.isLittleEndian?3:0;this.count=4*b;this.len=this.data.length};
CTM.InterleavedStream.prototype.writeByte=function(a){this.data[this.offset]=a;this.offset+=this.count;this.offset>=this.len&&(this.offset-=this.len-4,this.offset>=this.count&&(this.offset-=this.count+(CTM.isLittleEndian?1:-1)))};CTM.Stream=function(a){this.data=a;this.offset=0};CTM.Stream.prototype.TWO_POW_MINUS23=Math.pow(2,-23);CTM.Stream.prototype.TWO_POW_MINUS126=Math.pow(2,-126);CTM.Stream.prototype.readByte=function(){return this.data.charCodeAt(this.offset++)&255};
CTM.Stream.prototype.readInt32=function(){var a=this.readByte(),a=a|this.readByte()<<8,a=a|this.readByte()<<16;return a|this.readByte()<<24};CTM.Stream.prototype.readFloat32=function(){var a=this.readByte(),a=a+(this.readByte()<<8),b=this.readByte(),c=this.readByte(),a=a+((b&127)<<16),b=(c&127)<<1|(b&128)>>>7,c=c&128?-1:1;return 255===b?0!==a?NaN:Infinity*c:0<b?c*(1+a*this.TWO_POW_MINUS23)*Math.pow(2,b-127):0!==a?c*a*this.TWO_POW_MINUS126:0*c};
CTM.Stream.prototype.readString=function(){var a=this.readInt32();this.offset+=a;return this.data.substr(this.offset-a,a)};CTM.Stream.prototype.readArrayInt32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readInt32();return a};CTM.Stream.prototype.readArrayFloat32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readFloat32();return a};THREE.CTMLoader=function(a){THREE.Loader.call(this,a)};THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.CTMLoader.prototype.loadParts=function(a,b,c){var d=this,e=new XMLHttpRequest,f=c.basePath?c.basePath:this.extractUrlBase(a);e.onreadystatechange=function(){if(4===e.readyState&&(200===e.status||0===e.status)){for(var a=JSON.parse(e.responseText),h=[],j=[],k=0,l=0;l<a.materials.length;l++)h[l]=THREE.Loader.prototype.createMaterial(a.materials[l],f);d.load(f+a.data,function(c){k+=1;j.push(c);k===a.offsets.length&&b(j,h)},{useWorker:c.useWorker,useBuffers:c.useBuffers,offsets:a.offsets})}};e.open("GET",
a,!0);e.overrideMimeType&&e.overrideMimeType("text/plain; charset=x-user-defined");e.setRequestHeader("Content-Type","text/plain");e.send(null)};
THREE.CTMLoader.prototype.load=function(a,b,c){var d=this,e=void 0!==c.offsets?c.offsets:[0],f=void 0!==c.useBuffers?c.useBuffers:!0,g=new XMLHttpRequest;g.onreadystatechange=function(){if(4===g.readyState)if(200===g.status||0===g.status){var h=g.responseText;if(c.useWorker){var j=new Worker("js/loaders/ctm/CTMWorker.js");j.onmessage=function(a){a=a.data;for(var c=0;c<a.length;c++){var e=a[c];f?d.createModelBuffers(e,b):d.createModelClassic(e,b)}};j.postMessage({data:h,offsets:e})}else for(j=0;j<
e.length;j++){var k=new CTM.Stream(h);k.offset=e[j];k=new CTM.File(k);f?d.createModelBuffers(k,b):d.createModelClassic(k,b)}}else console.error("Couldn't load ["+a+"] ["+g.status+"]");else 3!==g.readyState&&2===g.readyState&&g.getResponseHeader("Content-Length")};g.overrideMimeType("text/plain; charset=x-user-defined");g.open("GET",a,!0);g.send(null)};
THREE.CTMLoader.prototype.createModelBuffers=function(a,b){var c=function(){this.materials=[];THREE.BufferGeometry.call(this);var b=a.body.indices,c=a.body.vertices,f=a.body.normals,g,h;void 0!==a.body.uvMaps&&0<a.body.uvMaps.length&&(g=a.body.uvMaps[0].uv);void 0!==a.body.attrMaps&&(0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name)&&(h=a.body.attrMaps[0].attr);var j=new Uint32Array(b.length),k=new Float32Array(c.length),l,m,p;f&&(l=new Float32Array(f.length));g&&(m=new Float32Array(g.length));
h&&(p=new Float32Array(h.length));for(var s={},r=0,q=function(a){if(void 0===s[a]){s[a]=r;var b=3*a,d=3*a+1,j=3*a+2,q=3*r,t=3*r+1,u=3*r+2;k[q]=c[b];k[t]=c[d];k[u]=c[j];f&&(l[q]=f[b],l[t]=f[d],l[u]=f[j]);g&&(m[2*r]=g[2*a],m[2*r+1]=g[2*a+1]);h&&(p[4*r]=h[4*a],p[4*r+1]=h[4*a+1],p[4*r+2]=h[4*a+2],p[4*r+3]=h[4*a+3]);r+=1}},v,u,w,x=0;x<b.length;x+=3)v=b[x],u=b[x+1],w=b[x+2],q(v),q(u),q(w),j[x]=s[v],j[x+1]=s[u],j[x+2]=s[w];b=j;c=k;f&&(f=l);g&&(g=m);h&&(h=p);this.offsets=[];j=b;q=0;u=c.length;w=0;v=u;for(x=
0;x<j.length;){for(var t=0;3>t;++t){var D=j[x++];D<u&&(u=D);D>w&&(w=D)}if(65535<w-u){x-=3;for(u=q;u<x;++u)j[u]-=v;this.offsets.push({start:q,count:x-q,index:v});q=x;u=c.length;w=0}v=u}for(u=q;u<x;++u)j[u]-=v;this.offsets.push({start:q,count:x-q,index:v});b=new Uint16Array(b);x=this.attributes;x.index={itemSize:1,array:b,numItems:b.length};x.position={itemSize:3,array:c,numItems:c.length};void 0!==f&&(x.normal={itemSize:3,array:f,numItems:f.length});void 0!==g&&(x.uv={itemSize:2,array:g,numItems:g.length});
void 0!==h&&(x.color={itemSize:4,array:h,numItems:h.length})};c.prototype=Object.create(THREE.BufferGeometry.prototype);c=new c;void 0===c.attributes.normal&&c.computeVertexNormals();b(c)};
THREE.CTMLoader.prototype.createModelClassic=function(a,b){var c=function(){this.materials=[];THREE.Geometry.call(this);var b=[],c=[],f=[],g=a.body.vertices,h,j,k,l,m=g.length;for(l=0;l<m;l+=3)h=g[l],j=g[l+1],k=g[l+2],this.vertices.push(new THREE.Vector3(h,j,k));if(void 0!==a.body.normals){g=a.body.normals;m=g.length;for(l=0;l<m;l+=3)h=g[l],j=g[l+1],k=g[l+2],b.push(h,j,k)}if(void 0!==a.body.uvMaps&&0<a.body.uvMaps.length){g=a.body.uvMaps[0].uv;l=g.length;for(k=0;k<l;k+=2)h=g[k],j=g[k+1],c.push(h,
j)}if(void 0!==a.body.attrMaps&&0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name){g=a.body.attrMaps[0].attr;m=g.length;for(l=0;l<m;l+=4){h=g[l];j=g[l+1];k=g[l+2];var p=new THREE.Color;p.setRGB(h,j,k);f.push(p)}}g=0<b.length?!0:!1;h=0<c.length?!0:!1;j=0<f.length?!0:!1;k=a.body.indices;var s,r,q,v,u,w,x,m=k.length;for(l=0;l<m;l+=3){s=k[l];r=k[l+1];p=k[l+2];if(g){q=s;w=r;x=p;var t=b[3*r],D=b[3*r+1],z=b[3*r+2];u=b[3*p];var y=b[3*p+1],A=b[3*p+2];v=new THREE.Vector3(b[3*s],b[3*s+1],b[3*s+2]);
t=new THREE.Vector3(t,D,z);u=new THREE.Vector3(u,y,A);q=new THREE.Face3(q,w,x,[v,t,u],null,0)}else q=new THREE.Face3(s,r,p,null,null,0);this.faces.push(q);j&&(q.vertexColors[0]=f[s],q.vertexColors[1]=f[r],q.vertexColors[2]=f[p]);h&&(q=c[2*s],s=c[2*s+1],v=c[2*r],u=c[2*r+1],w=c[2*p],x=c[2*p+1],p=this.faceVertexUvs[0],r=v,v=u,u=[],u.push(new THREE.Vector2(q,s)),u.push(new THREE.Vector2(r,v)),u.push(new THREE.Vector2(w,x)),p.push(u))}this.computeCentroids();this.computeFaceNormals()};c.prototype=Object.create(THREE.Geometry.prototype);
b(new c)};THREE.EffectComposer=function(a,b){this.renderer=a;void 0===b&&(b=new THREE.WebGLRenderTarget(window.innerWidth||1,window.innerHeight||1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1}));this.renderTarget1=b;this.renderTarget2=b.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},insertPass:function(a,b){this.passes.splice(b,0,a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=!1,c,d,e=this.passes.length;for(d=0;d<e;d++)if(c=this.passes[d],c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var f=this.renderer.context;
f.stencilFunc(f.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a);f.stencilFunc(f.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1)}},reset:function(a){void 0===a&&(a=this.renderTarget1.clone(),a.width=window.innerWidth,a.height=window.innerHeight);this.renderTarget1=a;this.renderTarget2=a.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(a,b){var c=
this.renderTarget1.clone();c.width=a;c.height=b;this.reset(c)}};THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);THREE.BloomPass=function(a,b,c,d){a=void 0!==a?a:1;b=void 0!==b?b:25;c=void 0!==c?c:4;d=void 0!==d?d:256;var e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=
new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);this.materialConvolution=
new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:b.toFixed(1),KERNEL_SIZE_INT:b.toFixed(0)}});this.enabled=!0;this.clear=this.needsSwap=!1};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.value=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,!0);THREE.EffectComposer.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);THREE.DotScreenPass=function(a,b,c){void 0===THREE.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var d=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(d.uniforms);void 0!==a&&this.uniforms.center.value.copy(a);void 0!==b&&(this.uniforms.angle.value=b);void 0!==c&&(this.uniforms.scale.value=c);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader});this.enabled=!0;this.renderToScreen=
!1;this.needsSwap=!0};THREE.DotScreenPass.prototype={render:function(a,b,c){this.uniforms.tDiffuse.value=c;this.uniforms.tSize.value.set(c.width,c.height);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.FilmPass=function(a,b,c,d){void 0===THREE.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var e=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader});void 0!==d&&(this.uniforms.grayscale.value=d);void 0!==a&&(this.uniforms.nIntensity.value=a);void 0!==b&&(this.uniforms.sIntensity.value=b);void 0!==c&&(this.uniforms.sCount.value=c);
this.enabled=!0;this.renderToScreen=!1;this.needsSwap=!0};THREE.FilmPass.prototype={render:function(a,b,c,d){this.uniforms.tDiffuse.value=c;this.uniforms.time.value+=d;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1);d.depthMask(!1);var e,f;this.inverse?(e=0,f=1):(e=1,f=0);d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,e,4294967295);d.clearStencil(f);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(!0,!0,!0,!0);d.depthMask(!0);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};
THREE.ClearMaskPass=function(){this.enabled=!0};THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=void 0!==e?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha));a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};THREE.SavePass=function(a){void 0===THREE.CopyShader&&console.error("THREE.SavePass relies on THREE.CopyShader");var b=THREE.CopyShader;this.textureID="tDiffuse";this.uniforms=THREE.UniformsUtils.clone(b.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});this.renderTarget=a;void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1},
this.renderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters));this.enabled=!0;this.clear=this.needsSwap=!1};THREE.SavePass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}};THREE.ShaderPass=function(a,b){this.textureID=void 0!==b?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=!1;this.needsSwap=this.enabled=!0;this.clear=!1};
THREE.ShaderPass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};THREE.TexturePass=function(a,b){void 0===THREE.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var c=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);this.uniforms.opacity.value=void 0!==b?b:1;this.uniforms.tDiffuse.value=a;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader});this.enabled=!0;this.needsSwap=!1};
THREE.TexturePass.prototype={render:function(a,b,c){THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c)}};THREE.CSS3DObject=function(a){THREE.Object3D.call(this);this.element=a;this.element.style.position="absolute";this.element.style.WebkitTransformStyle="preserve-3d";this.element.style.MozTransformStyle="preserve-3d";this.element.style.oTransformStyle="preserve-3d";this.element.style.transformStyle="preserve-3d"};THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype);THREE.CSS3DSprite=function(a){THREE.CSS3DObject.call(this,a)};THREE.CSS3DSprite.prototype=Object.create(THREE.CSS3DObject.prototype);
THREE.CSS3DRenderer=function(){console.log("THREE.CSS3DRenderer",THREE.REVISION);var a,b,c,d,e=new THREE.Projector,f=new THREE.Matrix4;this.domElement=document.createElement("div");this.domElement.style.overflow="hidden";this.domElement.style.WebkitTransformStyle="preserve-3d";this.domElement.style.WebkitPerspectiveOrigin="50% 50%";this.domElement.style.MozTransformStyle="preserve-3d";this.domElement.style.MozPerspectiveOrigin="50% 50%";this.domElement.style.oTransformStyle="preserve-3d";this.domElement.style.oPerspectiveOrigin=
"50% 50%";this.domElement.style.transformStyle="preserve-3d";this.domElement.style.perspectiveOrigin="50% 50%";this.cameraElement=document.createElement("div");this.cameraElement.style.WebkitTransformStyle="preserve-3d";this.cameraElement.style.MozTransformStyle="preserve-3d";this.cameraElement.style.oTransformStyle="preserve-3d";this.cameraElement.style.transformStyle="preserve-3d";this.domElement.appendChild(this.cameraElement);this.setSize=function(e,f){a=e;b=f;c=a/2;d=b/2;this.domElement.style.width=
e+"px";this.domElement.style.height=f+"px";this.cameraElement.style.width=e+"px";this.cameraElement.style.height=f+"px"};var g=function(a){return 1E-6>Math.abs(a)?0:a},h=function(a){a=a.elements;return"translate3d(-50%,-50%,0) matrix3d("+g(a[0])+","+g(a[1])+","+g(a[2])+","+g(a[3])+","+g(-a[4])+","+g(-a[5])+","+g(-a[6])+","+g(-a[7])+","+g(a[8])+","+g(a[9])+","+g(a[10])+","+g(a[11])+","+g(a[12])+","+g(a[13])+","+g(a[14])+","+g(a[15])+")"};this.render=function(a,k){var l=0.5/Math.tan(THREE.Math.degToRad(0.5*
k.fov))*b;this.domElement.style.WebkitPerspective=l+"px";this.domElement.style.MozPerspective=l+"px";this.domElement.style.oPerspective=l+"px";this.domElement.style.perspective=l+"px";var m=e.projectScene(a,k,!1).objects,l="translate3d(0,0,"+l+"px)",p;p=k.matrixWorldInverse.elements;p="matrix3d("+g(p[0])+","+g(-p[1])+","+g(p[2])+","+g(p[3])+","+g(p[4])+","+g(-p[5])+","+g(p[6])+","+g(p[7])+","+g(p[8])+","+g(-p[9])+","+g(p[10])+","+g(p[11])+","+g(p[12])+","+g(-p[13])+","+g(p[14])+","+g(p[15])+")";var s=
l+p+" translate3d("+c+"px,"+d+"px, 0)";this.cameraElement.style.WebkitTransform=s;this.cameraElement.style.MozTransform=s;this.cameraElement.style.oTransform=s;this.cameraElement.style.transform=s;l=0;for(p=m.length;l<p;l++)if(s=m[l].object,s instanceof THREE.CSS3DObject){var r=s.element;s instanceof THREE.CSS3DSprite?(f.copy(k.matrixWorldInverse),f.transpose(),f.extractPosition(s.matrixWorld),f.scale(s.scale),f.elements[3]=0,f.elements[7]=0,f.elements[11]=0,f.elements[15]=1,s=h(f)):s=h(s.matrixWorld);
r.style.WebkitTransform=s;r.style.MozTransform=s;r.style.oTransform=s;r.style.transform=s;r.parentNode!==this.cameraElement&&this.cameraElement.appendChild(r)}}};THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector;a:{for(var j=["transform","MozTransform","WebkitTransform","msTransform","OTransform"],k=document.documentElement,l=0;l<j.length;l++)if("string"===typeof k.style[j[l]]){g=j[l];break a}g=null}this.domElement=document.createElement("div");this.setSize=function(a,b){c=a;d=b;e=c/2;f=d/2};this.render=function(c,d){var j,l,k,v,u,w;a=h.projectScene(c,d);b=a.elements;j=0;for(l=b.length;j<l;j++)k=
b[j],k instanceof THREE.RenderableParticle&&k.material instanceof THREE.ParticleDOMMaterial&&(v=k.material.element,u=k.x*e+e-(v.offsetWidth>>1),w=k.y*f+f-(v.offsetHeight>>1),v.style.left=u+"px",v.style.top=w+"px",v.style.zIndex=Math.abs(Math.floor((1-k.z)*d.far/d.near)),g&&(v.style[g]="scale("+k.scale.x*e+","+k.scale.y*f+")"))}};THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,h,j,l;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(j=g.matrixWorld.getPosition().normalize(),l=c.dot(j),0>=l||(l*=g.intensity,d.r+=h.r*l,d.g+=h.g*l,d.b+=h.b*l)):g instanceof THREE.PointLight&&(j=g.matrixWorld.getPosition(),l=c.dot(H.sub(j,b).normalize()),0>=l||(l*=0==g.distance?1:1-Math.min(b.distanceTo(j)/g.distance,1),0!=l&&(l*=g.intensity,d.r+=h.r*l,d.g+=h.g*l,d.b+=h.b*l)))}function b(a){null==J[a]&&
(J[a]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==L&&J[a].setAttribute("shape-rendering","crispEdges"));return J[a]}console.log("THREE.SVGRenderer",THREE.REVISION);var c=this,d,e,f,g=new THREE.Projector,h=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,k,l,m,p,s,r,q,v=new THREE.Box2,u=new THREE.Box2,w=!1,x=new THREE.Color,t=new THREE.Color,D=new THREE.Color,z=new THREE.Color,y=new THREE.Color,A=new THREE.Color,G,H=new THREE.Vector3,J=[],T=[],E,O,F,L=1;this.domElement=
h;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setQuality=function(a){switch(a){case "high":L=1;break;case "low":L=0}};this.setSize=function(a,b){j=a;k=b;l=j/2;m=k/2;h.setAttribute("viewBox",-l+" "+-m+" "+j+" "+k);h.setAttribute("width",j);h.setAttribute("height",k);v.min.set(-l,-m);v.max.set(l,m)};this.clear=function(){for(;0<h.childNodes.length;)h.removeChild(h.childNodes[0])};this.render=function(j,k){if(!1===k instanceof THREE.Camera)console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera.");
else{var H,J,R,I;this.autoClear&&this.clear();c.info.render.vertices=0;c.info.render.faces=0;d=g.projectScene(j,k,this.sortObjects,this.sortElements);e=d.elements;f=d.lights;F=O=0;if(w=0<f.length){z.setRGB(0,0,0);y.setRGB(0,0,0);A.setRGB(0,0,0);H=0;for(J=f.length;H<J;H++)I=f[H],R=I.color,I instanceof THREE.AmbientLight?(z.r+=R.r,z.g+=R.g,z.b+=R.b):I instanceof THREE.DirectionalLight?(y.r+=R.r,y.g+=R.g,y.b+=R.b):I instanceof THREE.PointLight&&(A.r+=R.r,A.g+=R.g,A.b+=R.b)}H=0;for(J=e.length;H<J;H++)if(R=
e[H],I=R.material,!(void 0===I||!1===I.visible))if(u.makeEmpty(),R instanceof THREE.RenderableParticle)p=R,p.x*=l,p.y*=-m;else if(R instanceof THREE.RenderableLine){if(p=R.v1,s=R.v2,p.positionScreen.x*=l,p.positionScreen.y*=-m,s.positionScreen.x*=l,s.positionScreen.y*=-m,u.setFromPoints([p.positionScreen,s.positionScreen]),!0===v.isIntersectionBox(u)){R=p;var N=s,wa=F++;null==T[wa]&&(T[wa]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==L&&T[wa].setAttribute("shape-rendering","crispEdges"));
E=T[wa];E.setAttribute("x1",R.positionScreen.x);E.setAttribute("y1",R.positionScreen.y);E.setAttribute("x2",N.positionScreen.x);E.setAttribute("y2",N.positionScreen.y);I instanceof THREE.LineBasicMaterial&&(E.setAttribute("style","fill: none; stroke: "+I.color.getStyle()+"; stroke-width: "+I.linewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.linecap+"; stroke-linejoin: "+I.linejoin),h.appendChild(E))}}else if(R instanceof THREE.RenderableFace3){if(p=R.v1,s=R.v2,r=R.v3,p.positionScreen.x*=
l,p.positionScreen.y*=-m,s.positionScreen.x*=l,s.positionScreen.y*=-m,r.positionScreen.x*=l,r.positionScreen.y*=-m,u.setFromPoints([p.positionScreen,s.positionScreen,r.positionScreen]),!0===v.isIntersectionBox(u)){var N=p,wa=s,Q=r;c.info.render.vertices+=3;c.info.render.faces++;E=b(O++);E.setAttribute("d","M "+N.positionScreen.x+" "+N.positionScreen.y+" L "+wa.positionScreen.x+" "+wa.positionScreen.y+" L "+Q.positionScreen.x+","+Q.positionScreen.y+"z");I instanceof THREE.MeshBasicMaterial?(x.copy(I.color),
I.vertexColors===THREE.FaceColors&&(x.r*=R.color.r,x.g*=R.color.g,x.b*=R.color.b)):I instanceof THREE.MeshLambertMaterial?(t.copy(I.color),D.copy(I.emissive),I.vertexColors===THREE.FaceColors&&(t.r*=R.color.r,t.g*=R.color.g,t.b*=R.color.b),w?(x.r=z.r,x.g=z.g,x.b=z.b,a(f,R.centroidModel,R.normalModel,x),x.r=x.r*t.r+D.r,x.g=x.g*t.g+D.g,x.b=x.b*t.b+D.b):x.copy(t)):I instanceof THREE.MeshDepthMaterial?(G=1-I.__2near/(I.__farPlusNear-R.z*I.__farMinusNear),x.setRGB(G,G,G)):I instanceof THREE.MeshNormalMaterial&&
(x.r=0.5*R.normalModelView.x+0.5,x.g=0.5*R.normalModelView.y+0.5,x.b=0.5*R.normalModelView.z+0.5);I.wireframe?E.setAttribute("style","fill: none; stroke: "+x.getStyle()+"; stroke-width: "+I.wireframeLinewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.wireframeLinecap+"; stroke-linejoin: "+I.wireframeLinejoin):E.setAttribute("style","fill: "+x.getStyle()+"; fill-opacity: "+I.opacity);h.appendChild(E)}}else if(R instanceof THREE.RenderableFace4&&(p=R.v1,s=R.v2,r=R.v3,q=R.v4,p.positionScreen.x*=
l,p.positionScreen.y*=-m,s.positionScreen.x*=l,s.positionScreen.y*=-m,r.positionScreen.x*=l,r.positionScreen.y*=-m,q.positionScreen.x*=l,q.positionScreen.y*=-m,u.setFromPoints([p.positionScreen,s.positionScreen,r.positionScreen,q.positionScreen]),!0===v.isIntersectionBox(u))){var N=p,wa=s,Q=r,Aa=q;c.info.render.vertices+=4;c.info.render.faces++;E=b(O++);E.setAttribute("d","M "+N.positionScreen.x+" "+N.positionScreen.y+" L "+wa.positionScreen.x+" "+wa.positionScreen.y+" L "+Q.positionScreen.x+","+
Q.positionScreen.y+" L "+Aa.positionScreen.x+","+Aa.positionScreen.y+"z");I instanceof THREE.MeshBasicMaterial?(x.copy(I.color),I.vertexColors===THREE.FaceColors&&(x.r*=R.color.r,x.g*=R.color.g,x.b*=R.color.b)):I instanceof THREE.MeshLambertMaterial?(t.copy(I.color),D.copy(I.emissive),I.vertexColors===THREE.FaceColors&&(t.r*=R.color.r,t.g*=R.color.g,t.b*=R.color.b),w?(x.r=z.r,x.g=z.g,x.b=z.b,a(f,R.centroidModel,R.normalModel,x),x.r=x.r*t.r+D.r,x.g=x.g*t.g+D.g,x.b=x.b*t.b+D.b):x.copy(t)):I instanceof
THREE.MeshDepthMaterial?(G=1-I.__2near/(I.__farPlusNear-R.z*I.__farMinusNear),x.setRGB(G,G,G)):I instanceof THREE.MeshNormalMaterial&&(x.r=0.5*R.normalModelView.x+0.5,x.g=0.5*R.normalModelView.y+0.5,x.b=0.5*R.normalModelView.z+0.5);I.wireframe?E.setAttribute("style","fill: none; stroke: "+x.getStyle()+"; stroke-width: "+I.wireframeLinewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.wireframeLinecap+"; stroke-linejoin: "+I.wireframeLinejoin):E.setAttribute("style","fill: "+x.getStyle()+
"; fill-opacity: "+I.opacity);h.appendChild(E)}}}};THREE.WebGLDeferredRenderer=function(a){var b=this,c=void 0!==a.width?a.width:800,d=void 0!==a.height?a.height:600,e=void 0!==a.scale?a.scale:1,f=Math.floor(e*c),g=Math.floor(e*d),h=void 0!==a.brightness?a.brightness:1,j=void 0!==a.tonemapping?a.tonemapping:THREE.SimpleOperator,k=void 0!==a.antialias?a.antialias:!1;this.renderer=a.renderer;void 0===this.renderer&&(this.renderer=new THREE.WebGLRenderer({alpha:!1,antialias:!1}),this.renderer.setSize(c,d),this.renderer.setClearColorHex(0,0),this.renderer.autoClear=
!1);this.domElement=this.renderer.domElement;this.shadowMapEnabled=!1;this.shadowMapType=THREE.PCFSoftShadowMap;this.shadowMapSlopeDepthBias=!1;this.shadowMapSlopeScale=2;this.shadowMapSlopeBias=0;this.shadowMapSlopeMax=0.001;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=!1;var l=this.renderer.context,m=new THREE.Projector,p=new THREE.Vector3,s=new THREE.Vector3,r=new THREE.Color(0),q=new THREE.Color(16777215),v=THREE.ShaderDeferred.color,u=THREE.ShaderDeferred.depth,w=THREE.ShaderDeferred.normalDepth;
a=THREE.ShaderDeferred.composite;var x,t,D,z,y,A,G,H,J,T,E,O,F=new THREE.Color,L=0,P,U,S,da=!1,R=!0,I=[],N=[],wa=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(w.uniforms),vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,blending:THREE.NoBlending}),Q=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,blending:THREE.NoBlending}),Aa=function(a){var c={},d=THREE.UniformsUtils.clone(v.uniforms),
e=new THREE.ShaderMaterial({fragmentShader:v.fragmentShader,vertexShader:v.vertexShader,uniforms:d,defines:{USE_MAP:!!a.map,USE_ENVMAP:!!a.envMap,GAMMA_INPUT:!0},shading:a.shading});if(a instanceof THREE.MeshBasicMaterial)var h=r,j=a.color;else h=a.color,j=void 0!==a.emissive?a.emissive:r;var l=void 0!==a.specular?a.specular:r,k=void 0!==a.shininess?a.shininess:1,m=void 0!==a.wrapAround?a.wrapAround?-1:1:1,p=void 0!==a.metal?a.metal?1:-1:-1;d.emissive.value.copyGammaToLinear(j);d.diffuse.value.copyGammaToLinear(h);
d.specular.value.copyGammaToLinear(l);d.shininess.value=k;d.wrapAround.value=m;d.additiveSpecular.value=p;d.map.value=a.map;a.envMap&&(d.envMap.value=a.envMap,d.useRefract.value=a.envMap.mapping instanceof THREE.CubeRefractionMapping,d.refractionRatio.value=a.refractionRatio,d.combine.value=a.combine,d.reflectivity.value=a.reflectivity,d.flipEnvMap.value=a.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,d.samplerNormalDepth.value=t.renderTarget2,d.viewWidth.value=f,d.viewHeight.value=g,I.push({material:e}));
e.vertexColors=a.vertexColors;e.morphTargets=a.morphTargets;e.morphNormals=a.morphNormals;e.skinning=a.skinning;e.alphaTest=a.alphaTest;e.wireframe=a.wireframe;e.side=a.side;var q;a.map?q=a.map:a.specularMap?q=a.specularMap:a.normalMap?q=a.normalMap:a.bumpMap&&(q=a.bumpMap);if(void 0!==q){var s=q.offset,x=q.repeat;d.offsetRepeat.value.set(s.x,s.y,x.x,x.y)}c.colorMaterial=e;a.morphTargets||a.skinning||a.bumpMap||a.normalMap||a.alphaTest?(d=THREE.UniformsUtils.clone(w.uniforms),e=new THREE.ShaderMaterial({uniforms:d,
vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,shading:a.shading,defines:{USE_BUMPMAP:!!a.bumpMap,USE_NORMALMAP:!!a.normalMap},blending:THREE.NoBlending}),e.morphTargets=a.morphTargets,e.morphNormals=a.morphNormals,e.skinning=a.skinning,a.bumpMap&&(d.bumpMap.value=a.bumpMap,d.bumpScale.value=a.bumpScale),a.normalMap&&(d.normalMap.value=a.normalMap,d.normalScale.value.copy(a.normalScale)),void 0!==q&&d.offsetRepeat.value.set(s.x,s.y,x.x,x.y),a.alphaTest&&a.map&&(d.alphaMap.value=a.map)):
e=wa.clone();e.wireframe=a.wireframe;e.vertexColors=a.vertexColors;e.side=a.side;e.alphaTest=a.alphaTest;c.normalDepthMaterial=e;a.morphTargets||a.skinning||a.alphaTest?(e=THREE.UniformsUtils.clone(u.uniforms),d=new THREE.ShaderMaterial({uniforms:e,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,shading:a.shading,blending:THREE.NoBlending}),d.morphTargets=a.morphTargets,d.skinning=a.skinning,void 0!==q&&e.offsetRepeat.value.set(s.x,s.y,x.x,x.y),a.alphaTest&&a.map&&(e.alphaMap.value=a.map)):
d=Q.clone();q={};b.shadowMapSlopeDepthBias&&(q.SLOPE_DEPTH_BIAS=!0,d.uniforms.slopeScale.value=b.shadowMapSlopeScale,d.uniforms.slopeBias.value=b.shadowMapSlopeBias,d.uniforms.slopeMax.value=b.shadowMapSlopeMax);d.defines=q;d.wireframe=a.wireframe;d.vertexColors=a.vertexColors;d.alphaTest=a.alphaTest;d.side=b.shadowMapCullFace===THREE.CullFaceFront?THREE.BackSide:THREE.FrontSide;c.depthMaterial=d;c.transparent=a.transparent;return c},M=function(a){if(!a.properties.deferredInitialized){if(a.material){if(a.material instanceof
THREE.MeshFaceMaterial){for(var c=[],d=[],e=[],f=[],g=a.material.materials,h=0,j=g.length;h<j;h++){var l=Aa(g[h]);c.push(l.colorMaterial);d.push(l.depthMaterial);e.push(l.normalDepthMaterial);f.push(l.transparent)}a.properties.colorMaterial=new THREE.MeshFaceMaterial(c);a.properties.depthMaterial=new THREE.MeshFaceMaterial(d);a.properties.normalDepthMaterial=new THREE.MeshFaceMaterial(e);a.properties.transparent=f}else l=Aa(a.material),a.properties.colorMaterial=l.colorMaterial,a.properties.depthMaterial=
l.depthMaterial,a.properties.normalDepthMaterial=l.normalDepthMaterial,a.properties.transparent=l.transparent;a.properties.forwardMaterial=a.material}if(a instanceof THREE.Light){var k,m;a instanceof THREE.PointLight?(k=new THREE.PointLightProxy(a,b),m=0<a.distance?U:P):a instanceof THREE.SpotLight?(k=new THREE.SpotLightProxy(a,b),m=P):a instanceof THREE.DirectionalLight?(k=new THREE.DirectionalLightProxy(a,b),m=P):a instanceof THREE.HemisphereLight?(k=new THREE.HemisphereLightProxy(a,b),m=P):a instanceof
THREE.DayLight?(k=new THREE.DayLightProxy(a,b),m=P,da=!0):a instanceof THREE.AreaLight&&(k=new THREE.AreaLightProxy(a,b),m=P);k&&(m.add(k),N.push(k));a.castShadow&&S.properties.shadowCasters.push(a)}a.properties.deferredInitialized=!0}},aa=function(a,b,c){if(a.material){b=a.properties[b];a.material=b;var d;c?(c=!0,d=!1):(c=!1,d=!0);if(b instanceof THREE.MeshFaceMaterial)for(var e=0,f=b.materials.length;e<f;e++)b.materials[e].visible=a.properties.transparent[e]?d:c;else b.visible=a.properties.transparent?
d:c}},na=function(a){return aa(a,"colorMaterial",R)},ea=function(a){return aa(a,"normalDepthMaterial",R)},pa=function(a,c){a.visible=!c;a.uniforms.slopeScale.value=b.shadowMapSlopeScale;a.uniforms.slopeBias.value=b.shadowMapSlopeBias;a.uniforms.slopeMax.value=b.shadowMapSlopeMax;a.side=b.shadowMapCullFace===THREE.CullFaceFront?THREE.BackSide:THREE.FrontSide},W=function(a){if(a.material)if(a.castShadow){var b=a.properties.depthMaterial;a.material=b;if(b instanceof THREE.MeshFaceMaterial)for(var c=
0,d=b.materials.length;c<d;c++)pa(b.materials[c],a.properties.transparent[c]);else pa(b,a.properties.transparent)}else a.material.visible=!1};this.setAntialias=function(a){(k=a)?(O.enabled=!0,E.renderToScreen=!1):(O.enabled=!1,E.renderToScreen=!0)};this.getAntialias=function(){return k};this.addEffect=function(a,b,c){a.material&&a.uniforms&&(b&&(a.uniforms[b].value=t.renderTarget2),c&&(a.uniforms[c].value=x.renderTarget2),(b||c)&&I.push({material:a.material,normalDepth:b,color:c}));y.insertPass(a,
-1)};this.setScale=function(a){e=a;f=Math.floor(e*c);g=Math.floor(e*d);t.setSize(f,g);x.setSize(f,g);D.setSize(f,g);y.setSize(f,g);x.renderTarget2.shareDepthFrom=t.renderTarget2;D.renderTarget2.shareDepthFrom=t.renderTarget2;a=x.renderTarget2;for(var b=t.renderTarget2,h=D.renderTarget2,j=0,l=I.length;j<l;j++){var k=I[j],m=k.material.uniforms,p=void 0!==k.color?k.color:"samplerColor",k=void 0!==k.normalDepth?k.normalDepth:"samplerNormalDepth";m[p]&&(m[p].value=a);m[k]&&(m[k].value=b);m.viewWidth&&
(m.viewWidth.value=f);m.viewHeight&&(m.viewHeight.value=g)}j=0;for(l=N.length;j<l;j++)N[j].resize(f,g,a,b);E.uniforms.samplerLight.value=h;O.uniforms.resolution.value.set(1/c,1/d)};this.setSize=function(a,b){c=a;d=b;this.renderer.setSize(c,d);this.setScale(e)};this.getColorTarget=function(){return x.renderTarget2};this.getNormalDepthTarget=function(){return t.renderTarget2};var $=function(a,b){a.position.copy(b.matrixWorld.getPosition());b.target&&a.lookAt(b.target.matrixWorld.getPosition());a.updateMatrixWorld();
a.matrixWorldInverse.getInverse(a.matrixWorld)},oa=function(a,b){a.near=b.shadowCameraNear;a.far=b.shadowCameraFar;if(b instanceof THREE.SpotLight)a.fov=b.shadowCameraFov;else if(b instanceof THREE.PointLight)a.fov=90;else if(b instanceof THREE.DirectionalLight||b instanceof THREE.DayLight)a.left=b.shadowCameraLeft,a.right=b.shadowCameraRight,a.top=b.shadowCameraTop,a.bottom=b.shadowCameraBottom;a.updateProjectionMatrix()};this.render=function(a,c){var d=b.renderer;if(!a.properties.lightSceneGeometry){a.properties.lightSceneGeometry=
new THREE.Scene;a.properties.lightSceneFullscreen=new THREE.Scene;var e=new THREE.EmissiveLightProxy(b);a.properties.lightSceneFullscreen.add(e);a.properties.emissiveLightProxy=e;N.push(e);a.properties.shadowCasters=[]}U=a.properties.lightSceneGeometry;P=a.properties.lightSceneFullscreen;S=a;A.camera=c;G.camera=c;J.camera=c;H.camera=THREE.EffectComposer.camera;T.camera=c;A.scene=a;G.scene=a;H.scene=P;J.scene=U;T.scene=a;da=!1;a.traverse(M);da&&(a.properties.emissiveLightProxy.visible=!1);d.autoUpdateScene=
!1;a.updateMatrixWorld();H.clear=!0;A.clear=!0;G.clear=!0;R=a.properties.emissiveLightProxy.visible=!0;e=b.renderer;a.traverse(ea);e.autoClearDepth=!0;l.depthFunc(l.LEQUAL);t.render();a.traverse(na);e.autoClearDepth=!0;x.render();if(b.shadowMapEnabled){var f=b.renderer;f.autoClearDepth=!0;f.autoClearStencil=!0;f.autoUpdateScene=!1;F.copy(f.getClearColor());L=f.getClearAlpha();f.setClearColor(q,1);a.traverse(W);for(var g=a.properties.shadowCasters,h=0,j=g.length;h<j;h++){var k=g[h];if(k instanceof
THREE.SpotLight){var r=k.properties.shadowMap,u=k.properties.shadowCamera;$(u,k);oa(u,k);f.render(a,u,r,!0)}else if(k instanceof THREE.DirectionalLight||k instanceof THREE.DayLight)for(var v=0;v<k.properties.cascadeCount;v++){r=k.properties.shadowMap[v];u=k.properties.shadowCamera[v];$(u,k);if(k.shadowCascade){var w=u,z=k,E=v,I=c;w.near=z.shadowCameraNear;w.far=z.shadowCameraFar;var O=z.shadowCascadeNearZ[E],Q=z.shadowCascadeFarZ[E],aa=z.properties.pointsFrustum[E];aa[0].z=O;aa[1].z=O;aa[2].z=O;aa[3].z=
O;aa[4].z=Q;aa[5].z=Q;aa[6].z=Q;aa[7].z=Q;z=z.properties.pointsWorld[E];p.set(Infinity,Infinity,Infinity);s.set(-Infinity,-Infinity,-Infinity);for(E=0;8>E;E++)O=z[E],O.copy(aa[E]),m.unprojectVector(O,I),w.matrixWorldInverse.multiplyVector3(O),O.x<p.x&&(p.x=O.x),O.x>s.x&&(s.x=O.x),O.y<p.y&&(p.y=O.y),O.y>s.y&&(s.y=O.y),O.z<p.z&&(p.z=O.z),O.z>s.z&&(s.z=O.z);w.left=p.x;w.right=s.x;w.top=s.y;w.bottom=p.y;w.updateProjectionMatrix()}else oa(u,k);f.render(a,u,r,!0)}else if(k instanceof THREE.PointLight)for(v=
0;6>v;v++)r=k.properties.shadowMap[v],u=k.properties.shadowCamera[v],$(u,k),oa(u,k),f.render(a,u,r,!0)}f.setClearColor(F,L)}e.autoClearDepth=!1;e.autoUpdateScene=!0;c.projectionMatrixInverse.getInverse(c.projectionMatrix);e=0;for(f=U.children.length;e<f;e++)g=U.children[e],g.update(c);e=0;for(f=P.children.length;e<f;e++)g=P.children[e],g.update(c);l.depthFunc(l.GEQUAL);D.render();H.clear=!1;A.clear=!1;G.clear=!1;a.properties.emissiveLightProxy.visible=!1;d.autoClearDepth=!0;l.depthFunc(l.LEQUAL);
y.render(0.1)};var Ea={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!0,format:THREE.RGBAFormat,type:THREE.FloatType},ra={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!0,format:THREE.RGBAFormat,type:THREE.FloatType},fa={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBFormat,type:THREE.UnsignedByteType};z=new THREE.WebGLRenderTarget(f,g,ra);ra=new THREE.WebGLRenderTarget(f,g,ra);Ea=new THREE.WebGLRenderTarget(f,
g,Ea);fa=new THREE.WebGLRenderTarget(f,g,fa);z.generateMipmaps=!1;ra.generateMipmaps=!1;Ea.generateMipmaps=!1;fa.generateMipmaps=!1;G=new THREE.RenderPass;G.clear=!0;t=new THREE.EffectComposer(b.renderer,ra);t.addPass(G);A=new THREE.RenderPass;A.clear=!0;x=new THREE.EffectComposer(b.renderer,z);x.addPass(A);x.renderTarget2.shareDepthFrom=t.renderTarget2;H=new THREE.RenderPass;H.clear=!0;J=new THREE.RenderPass;J.clear=!1;D=new THREE.EffectComposer(b.renderer,Ea);D.addPass(H);D.addPass(J);D.renderTarget2.shareDepthFrom=
t.renderTarget2;T=new THREE.RenderPass;T.clear=!1;z=new THREE.EffectComposer(b.renderer,Ea);z.addPass(T);z.renderTarget1=D.renderTarget1;z.renderTarget2=D.renderTarget2;z.renderTarget2.shareDepthFrom=t.renderTarget2;E=new THREE.ShaderPass(a);E.uniforms.samplerLight.value=D.renderTarget2;E.uniforms.brightness.value=h;E.material.blending=THREE.NoBlending;E.clear=!0;var ia;switch(j){case THREE.SimpleOperator:ia={TONEMAP_SIMPLE:!0};break;case THREE.LinearOperator:ia={TONEMAP_LINEAR:!0};break;case THREE.ReinhardOperator:ia=
{TONEMAP_REINHARD:!0};break;case THREE.FilmicOperator:ia={TONEMAP_FILMIC:!0};break;case THREE.UnchartedOperator:ia={TONEMAP_UNCHARTED:!0}}E.material.defines=ia;O=new THREE.ShaderPass(THREE.FXAAShader);O.uniforms.resolution.value.set(1/c,1/d);O.renderToScreen=!0;y=new THREE.EffectComposer(b.renderer,fa);y.addPass(E);y.addPass(O);k?(O.enabled=!0,E.renderToScreen=!1):(O.enabled=!1,E.renderToScreen=!0)};THREE.NoOperator=0;THREE.SimpleOperator=1;THREE.LinearOperator=2;THREE.ReinhardOperator=3;
THREE.FilmicOperator=4;THREE.UnchartedOperator=5;THREE.LightProxy=function(a,b){this.light=a;this.renderer=b};THREE.LightProxy.prototype=Object.create(THREE.Mesh.prototype);THREE.LightProxy.prototype.update=function(a){var b=this.material.uniforms;b.matProjInverse&&(b.matProjInverse.value=a.projectionMatrixInverse);b.matView&&(b.matView.value=a.matrixWorldInverse);b.matViewInverse&&(b.matViewInverse.value=a.matrixWorld);this.light&&(this.visible=this.light.visible)};
THREE.LightProxy.prototype.resize=function(a,b,c,d){var e=this.material.uniforms,f=void 0!==this.colorLabel?this.colorLabel:"samplerColor",g=void 0!==this.normalDepthLabel?this.normalDepthLabel:"samplerNormalDepth";e[f]&&(e[f].value=c);e[g]&&(e[g].value=d);e.viewWidth&&(e.viewWidth.value=a);e.viewHeight&&(e.viewHeight.value=b)};
THREE.LightProxy.prototype.generateDefines=function(){var a=this.light,b=this.renderer,c={};if(b.shadowMapEnabled&&a.castShadow){c.USE_SHADOWMAP=!0;switch(b.shadowMapType){case THREE.BasicShadowMap:c.SHADOWMAP_TYPE_BASIC=!0;break;case THREE.PCFShadowMap:c.SHADOWMAP_TYPE_PCF=!0;break;case THREE.PCFSoftShadowMap:c.SHADOWMAP_TYPE_PCF_SOFT=!0}c.SLOPE_DEPTH_BIAS=b.shadowMapSlopeDepthBias;c.SHADOWMAP_DEBUG=b.shadowMapDebug}return c};
THREE.LightProxy.prototype.setupDirectionalShadowmap=function(a){var b=this.light,c=this.renderer.renderer.supportsLuminanceFloatRenderTarget()?THREE.LuminanceFormat:THREE.RGBFormat,c={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:c,type:THREE.FloatType};b.properties.shadowMap=[];b.properties.shadowCamera=[];b.properties.pointsWorld=[];b.properties.pointsFrustum=[];for(var d=0;d<a;d++){var e=new THREE.WebGLRenderTarget(b.shadowMapWidth,b.shadowMapHeight,c);e.generateMipmaps=
!1;b.properties.shadowMap[d]=e;e=new THREE.OrthographicCamera(b.shadowCameraLeft,b.shadowCameraRight,b.shadowCameraTop,b.shadowCameraBottom,b.shadowCameraNear,b.shadowCameraFar);b.properties.shadowCamera[d]=e;if(b.shadowCascade){b.properties.pointsWorld[d]=[];b.properties.pointsFrustum[d]=[];for(var f=b.properties.pointsWorld[d],e=b.properties.pointsFrustum[d],g=0;8>g;g++)f[g]=new THREE.Vector3,e[g]=new THREE.Vector3;f=b.shadowCascadeNearZ[d];g=b.shadowCascadeFarZ[d];e[0].set(-1,-1,f);e[1].set(1,
-1,f);e[2].set(-1,1,f);e[3].set(1,1,f);e[4].set(-1,-1,g);e[5].set(1,-1,g);e[6].set(-1,1,g);e[7].set(1,1,g)}}b.properties.cascadeCount=a};
THREE.LightProxy.prototype.updateDirectionalShadowmap=function(a){var b=this.light,c=this.material.uniforms;if(b.shadowCascade&&!b.properties.gyro){var d=new THREE.Gyroscope;d.position=b.shadowCascadeOffset;d.add(b);d.add(b.target);a.add(d);b.properties.gyro=d}for(a=0;a<b.properties.cascadeCount;a++){var d=b.properties.shadowCamera[a],e=b.properties.shadowMap[a];c.matLightView.value[a]=d.matrixWorldInverse;c.matLightProj.value[a]=d.projectionMatrix;c.samplerShadowMap.value[a]=e}c.shadowDarkness.value=
Math.sqrt(b.shadowDarkness);c.shadowBias.value=b.shadowBias;c.shadowMapSize.value.set(b.shadowMapWidth,b.shadowMapHeight)};THREE.LightProxy.geometryLightSphere=new THREE.SphereGeometry(1,16,8);THREE.LightProxy.geometryLightPlane=new THREE.PlaneGeometry(2,2);THREE.LightProxy.positionVS=new THREE.Vector3;THREE.LightProxy.directionVS=new THREE.Vector3;THREE.LightProxy.rightVS=new THREE.Vector3;THREE.LightProxy.normalVS=new THREE.Vector3;THREE.LightProxy.upVS=new THREE.Vector3;THREE.PointLightProxy=function(a,b){THREE.LightProxy.call(this,a,b);var c=THREE.ShaderDeferred.pointLight,d=THREE.UniformsUtils.clone(c.uniforms),e=this.generateDefines(),c=new THREE.ShaderMaterial({uniforms:d,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:e,blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0,side:THREE.BackSide});0<a.distance?e=THREE.LightProxy.geometryLightSphere:(e=THREE.LightProxy.geometryLightPlane,c.depthTest=!1,c.side=THREE.FrontSide);var f=b.getColorTarget(),
g=b.getNormalDepthTarget();d.viewWidth.value=f.width;d.viewHeight.value=f.height;d.samplerColor.value=f;d.samplerNormalDepth.value=g;THREE.Mesh.call(this,e,c);if(a.castShadow){a.properties.shadowMap=[];a.properties.shadowCamera=[];d=b.renderer.supportsLuminanceFloatRenderTarget()?THREE.LuminanceFormat:THREE.RGBFormat;d={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:d,type:THREE.FloatType};c=[new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,
0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0)];e=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)];for(f=0;6>f;f++)g=new THREE.WebGLRenderTarget(a.shadowMapWidth,a.shadowMapHeight,d),g.generateMipmaps=!1,a.properties.shadowMap[f]=g,g=new THREE.PerspectiveCamera(90,a.shadowMapWidth/a.shadowMapHeight,a.shadowCameraNear,a.shadowCameraFar),g.up.copy(c[f]),g.lookAt(e[f]),
a.properties.shadowCamera[f]=g}};THREE.PointLightProxy.prototype=Object.create(THREE.LightProxy.prototype);
THREE.PointLightProxy.prototype.update=function(a){THREE.LightProxy.prototype.update.call(this,a);var b=this.light,c=this.material.uniforms,d=b.distance;if(0<d){var e=THREE.LightProxy.positionVS;this.scale.set(1,1,1).multiplyScalar(d);c.lightRadius.value=d;e.copy(b.matrixWorld.getPosition());a.matrixWorldInverse.multiplyVector3(e);c.lightPositionVS.value.copy(e);this.position.copy(b.matrixWorld.getPosition())}else c.lightRadius.value=Infinity;c.lightIntensity.value=b.intensity*b.intensity;c.lightColor.value.copyGammaToLinear(b.color);
if(b.castShadow){for(a=0;6>a;a++)d=b.properties.shadowCamera[a],e=b.properties.shadowMap[a],c.matLightView.value[a]=d.matrixWorldInverse,c.matLightProj.value[a]=d.projectionMatrix,c.samplerShadowMap.value[a]=e;c.shadowDarkness.value=Math.sqrt(b.shadowDarkness);c.shadowBias.value=b.shadowBias;c.shadowMapSize.value.set(b.shadowMapWidth,b.shadowMapHeight)}};THREE.SpotLightProxy=function(a,b){THREE.LightProxy.call(this,a,b);var c=THREE.ShaderDeferred.spotLight,d=THREE.UniformsUtils.clone(c.uniforms),e=this.generateDefines(),c=new THREE.ShaderMaterial({uniforms:d,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:e,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0}),e=b.getColorTarget(),f=b.getNormalDepthTarget();d.viewWidth.value=e.width;d.viewHeight.value=e.height;d.samplerColor.value=e;d.samplerNormalDepth.value=
f;THREE.Mesh.call(this,THREE.LightProxy.geometryLightPlane,c);a.castShadow&&(d=b.renderer.supportsLuminanceFloatRenderTarget()?THREE.LuminanceFormat:THREE.RGBFormat,d=new THREE.WebGLRenderTarget(a.shadowMapWidth,a.shadowMapHeight,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:d,type:THREE.FloatType}),d.wrapS=THREE.MirroredRepeatWrapping,d.wrapT=THREE.MirroredRepeatWrapping,d.generateMipmaps=!1,a.properties.shadowMap=d,d=new THREE.PerspectiveCamera(a.shadowCameraFov,
a.shadowMapWidth/a.shadowMapHeight,a.shadowCameraNear,a.shadowCameraFar),a.properties.shadowCamera=d)};THREE.SpotLightProxy.prototype=Object.create(THREE.LightProxy.prototype);
THREE.SpotLightProxy.prototype.update=function(a){THREE.LightProxy.prototype.update.call(this,a);var b=this.light,c=this.material.uniforms;a=a.matrixWorldInverse;var d=b.matrixWorld,e=THREE.LightProxy.positionVS,f=THREE.LightProxy.directionVS;e.copy(d.getPosition());a.multiplyVector3(e);f.copy(d.getPosition());f.subSelf(b.target.matrixWorld.getPosition());f.normalize();a.rotateAxis(f);c.lightPositionVS.value.copy(e);c.lightDirectionVS.value.copy(f);c.lightAngle.value=b.angle;c.lightDistance.value=
b.distance;c.lightIntensity.value=b.intensity*b.intensity;c.lightColor.value.copyGammaToLinear(b.color);b.castShadow&&(a=b.properties.shadowCamera,d=b.properties.shadowMap,c.matLightView.value=a.matrixWorldInverse,c.matLightProj.value=a.projectionMatrix,c.samplerShadowMap.value=d,c.shadowDarkness.value=Math.sqrt(b.shadowDarkness),c.shadowBias.value=b.shadowBias,c.shadowMapSize.value.set(b.shadowMapWidth,b.shadowMapHeight))};THREE.DirectionalLightProxy=function(a,b){THREE.LightProxy.call(this,a,b);var c=THREE.ShaderDeferred.directionalLight,d=THREE.UniformsUtils.clone(c.uniforms),e=this.generateDefines(a),f=a.shadowCascade?a.shadowCascadeCount:1;e.CASCADE_COUNT=f;var c=new THREE.ShaderMaterial({uniforms:d,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:e,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0}),e=b.getColorTarget(),g=b.getNormalDepthTarget();d.viewWidth.value=e.width;
d.viewHeight.value=e.height;d.samplerColor.value=e;d.samplerNormalDepth.value=g;THREE.Mesh.call(this,THREE.LightProxy.geometryLightPlane,c);a.castShadow&&this.setupDirectionalShadowmap(f)};THREE.DirectionalLightProxy.prototype=Object.create(THREE.LightProxy.prototype);
THREE.DirectionalLightProxy.prototype.update=function(a){THREE.LightProxy.prototype.update.call(this,a);var b=this.light,c=this.material.uniforms,d=THREE.LightProxy.directionVS;d.copy(b.matrixWorld.getPosition());d.subSelf(b.target.matrixWorld.getPosition());d.normalize();a.matrixWorldInverse.rotateAxis(d);c.lightDirectionVS.value.copy(d);c.lightIntensity.value=b.intensity*b.intensity;c.lightColor.value.copyGammaToLinear(b.color);b.castShadow&&this.updateDirectionalShadowmap(a)};THREE.HemisphereLightProxy=function(a,b){THREE.LightProxy.call(this,a,b);var c=THREE.ShaderDeferred.hemisphereLight,d=THREE.UniformsUtils.clone(c.uniforms),c=new THREE.ShaderMaterial({uniforms:d,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0}),e=b.getColorTarget(),f=b.getNormalDepthTarget();d.viewWidth.value=e.width;d.viewHeight.value=e.height;d.samplerColor.value=e;d.samplerNormalDepth.value=f;THREE.Mesh.call(this,
THREE.LightProxy.geometryLightPlane,c)};THREE.HemisphereLightProxy.prototype=Object.create(THREE.LightProxy.prototype);
THREE.HemisphereLightProxy.prototype.update=function(a){THREE.LightProxy.prototype.update.call(this,a);var b=this.light,c=this.material.uniforms,d=THREE.LightProxy.directionVS;d.copy(b.matrixWorld.getPosition());d.normalize();a.matrixWorldInverse.rotateAxis(d);c.lightDirectionVS.value.copy(d);c.lightIntensity.value=b.intensity*b.intensity;c.lightColorSky.value.copyGammaToLinear(b.color);c.lightColorGround.value.copyGammaToLinear(b.groundColor)};THREE.DayLightProxy=function(a,b){THREE.LightProxy.call(this,a,b);var c=THREE.ShaderDeferred.dayLight,d=THREE.UniformsUtils.clone(c.uniforms),e=this.generateDefines(a),f=a.shadowCascade?a.shadowCascadeCount:1;e.CASCADE_COUNT=f;var c=new THREE.ShaderMaterial({uniforms:d,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:e,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0}),e=b.getColorTarget(),g=b.getNormalDepthTarget();d.viewWidth.value=e.width;d.viewHeight.value=
e.height;d.samplerColor.value=e;d.samplerNormalDepth.value=g;THREE.Mesh.call(this,THREE.LightProxy.geometryLightPlane,c);a.castShadow&&this.setupDirectionalShadowmap(f)};THREE.DayLightProxy.prototype=Object.create(THREE.LightProxy.prototype);
THREE.DayLightProxy.prototype.update=function(a){THREE.LightProxy.prototype.update.call(this,a);var b=this.light,c=this.material.uniforms,d=THREE.LightProxy.directionVS;d.copy(b.matrixWorld.getPosition());d.subSelf(b.target.matrixWorld.getPosition());d.normalize();a.matrixWorldInverse.rotateAxis(d);c.lightDirectionVSSun.value.copy(d);d.copy(b.hemiPosition);d.normalize();a.matrixWorldInverse.rotateAxis(d);c.lightDirectionVSHemi.value.copy(d);d=b.hemiIntensity*b.hemiIntensity;c.lightIntensitySun.value=
b.sunIntensity*b.sunIntensity;c.lightIntensityHemi.value=d;c.lightColorSun.value.copyGammaToLinear(b.color);c.lightColorSky.value.copyGammaToLinear(b.skyColor);c.lightColorGround.value.copyGammaToLinear(b.groundColor);b.castShadow&&this.updateDirectionalShadowmap(a)};THREE.AreaLightProxy=function(a,b){THREE.LightProxy.call(this,a,b);var c=THREE.ShaderDeferred.areaLight,d=THREE.UniformsUtils.clone(c.uniforms),c=new THREE.ShaderMaterial({uniforms:d,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:{AREA_TEXTURE:!!a.texture},blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0}),e=b.getColorTarget(),f=b.getNormalDepthTarget();d.viewWidth.value=e.width;d.viewHeight.value=e.height;d.samplerColor.value=e;d.samplerNormalDepth.value=
f;THREE.Mesh.call(this,THREE.LightProxy.geometryLightPlane,c)};THREE.AreaLightProxy.prototype=Object.create(THREE.LightProxy.prototype);
THREE.AreaLightProxy.prototype.update=function(a){THREE.LightProxy.prototype.update.call(this,a);var b=this.light,c=this.material.uniforms,d=b.matrixWorld;a=a.matrixWorldInverse;var e=THREE.LightProxy.positionVS,f=THREE.LightProxy.rightVS,g=THREE.LightProxy.normalVS,h=THREE.LightProxy.upVS;e.copy(d.getPosition());a.multiplyVector3(e);c.lightPositionVS.value.copy(e);f.copy(b.right);g.copy(b.normal);d.rotateAxis(f);d.rotateAxis(g);a.rotateAxis(f);a.rotateAxis(g);h.cross(f,g);h.normalize();c.lightRightVS.value.copy(f);
c.lightNormalVS.value.copy(g);c.lightUpVS.value.copy(h);c.lightWidth.value=b.width;c.lightHeight.value=b.height;c.constantAttenuation.value=b.constantAttenuation;c.linearAttenuation.value=b.linearAttenuation;c.quadraticAttenuation.value=b.quadraticAttenuation;c.samplerTexture.value=b.texture;c.lightIntensity.value=b.intensity*b.intensity;c.lightColor.value.copyGammaToLinear(b.color)};THREE.EmissiveLightProxy=function(a){THREE.LightProxy.call(this,null,a);var b=THREE.ShaderDeferred.emissiveLight,c=THREE.UniformsUtils.clone(b.uniforms),b=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader,depthTest:!1,depthWrite:!1,blending:THREE.NoBlending});a=a.getColorTarget();c.viewWidth.value=a.width;c.viewHeight.value=a.height;c.samplerColor.value=a;THREE.Mesh.call(this,THREE.LightProxy.geometryLightPlane,b)};
THREE.EmissiveLightProxy.prototype=Object.create(THREE.LightProxy.prototype);THREE.BasicShader={uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"};THREE.BleachBypassShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base = texture2D( tDiffuse, vUv );\nvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\nfloat lum = dot( lumCoeff, base.rgb );\nvec3 blend = vec3( lum );\nfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 = 2.0 * base.rgb * blend;\nvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor = mix( result1, result2, L );\nfloat A2 = opacity * base.a;\nvec3 mixRGB = A2 * newColor.rgb;\nmixRGB += ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor = vec4( mixRGB, base.a );\n}"};THREE.BlendShader={uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform float mixRatio;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel1 = texture2D( tDiffuse1, vUv );\nvec4 texel2 = texture2D( tDiffuse2, vUv );\ngl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n}"};THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:0.025},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float focus;\nuniform float aspect;\nvoid main() {\nvec2 aspectcorrect = vec2( 1.0, aspect );\nvec4 depth1 = texture2D( tDepth, vUv );\nfloat factor = depth1.x - focus;\nvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\nvec2 dofblur9 = dofblur * 0.9;\nvec2 dofblur7 = dofblur * 0.7;\nvec2 dofblur4 = dofblur * 0.4;\nvec4 col = vec4( 0.0 );\ncol += texture2D( tColor, vUv.xy );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\ngl_FragColor = col / 41.0;\ngl_FragColor.a = 1.0;\n}"};THREE.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb += brightness;\nif (contrast > 0.0) {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};THREE.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 powRGB;\nuniform vec3 mulRGB;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );\n}"};THREE.ColorifyShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v * color, texel.w );\n}"};THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE_INT ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}",
buildKernel:function(a){var b,c,d,e,f=2*Math.ceil(3*a)+1;25<f&&(f=25);e=0.5*(f-1);c=Array(f);for(b=d=0;b<f;++b)c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a)),d+=c[b];for(b=0;b<f;++b)c[b]/=d;return c}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};THREE.DOFMipMapShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float focus;\nuniform float maxblur;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\nvoid main() {\nvec4 depth = texture2D( tDepth, vUv );\nfloat factor = depth.x - focus;\nvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\ngl_FragColor = col;\ngl_FragColor.a = 1.0;\n}"};THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s = sin( angle ), c = cos( angle );\nvec2 tex = vUv * tSize - center;\nvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nfloat average = ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"};THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"};THREE.FocusShader={uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:0.94},waveFactor:{type:"f",value:0.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd = color = org = texture2D( tDiffuse, uv );\nvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist = dot( vin, vin ) * 2.0;\nf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\ncolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"};THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\nvarying vec2 vUv;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\nvec3 rgbM  = rgbaM.xyz;\nfloat opacity  = rgbaM.w;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec3 rgbA = 0.5 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );\nfloat lumaB = dot( rgbB, luma );\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = vec4( rgbA, opacity );\n} else {\ngl_FragColor = vec4( rgbB, opacity );\n}\n}"};THREE.HorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat hh = h * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.HueSaturationShader={uniforms:{tDiffuse:{type:"t",value:null},hue:{type:"f",value:0},saturation:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float hue;\nuniform float saturation;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\nfloat angle = hue * 3.14159265;\nfloat s = sin(angle), c = cos(angle);\nvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\nfloat len = length(gl_FragColor.rgb);\ngl_FragColor.rgb = vec3(\ndot(gl_FragColor.rgb, weights.xyz),\ndot(gl_FragColor.rgb, weights.zxy),\ndot(gl_FragColor.rgb, weights.yzx)\n);\nfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nif (saturation > 0.0) {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n} else {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n}\n}"};THREE.LuminosityShader={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"};THREE.NormalMapShader={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:0.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"};THREE.RGBShiftShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:0.005},angle:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float amount;\nuniform float angle;\nvarying vec2 vUv;\nvoid main() {\nvec2 offset = amount * vec2( cos(angle), sin(angle));\nvec4 cr = texture2D(tDiffuse, vUv + offset);\nvec4 cga = texture2D(tDiffuse, vUv);\nvec4 cb = texture2D(tDiffuse, vUv - offset);\ngl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n}"};THREE.SepiaShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float amount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nvec3 c = color.rgb;\ncolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\ncolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\ncolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\ngl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n}"};THREE.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:0.3},lumInfluence:{type:"f",value:0.9}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"uniform float cameraNear;\nuniform float cameraFar;\nuniform float fogNear;\nuniform float fogFar;\nuniform bool fogEnabled;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nfloat width = size.x;\nfloat height = size.y;\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\n#ifndef SAMPLES\n#define SAMPLES 8\n#endif\n#ifndef RADIUS\n#define RADIUS 5.0\n#endif\n#if !defined( FLOAT_DEPTH ) && !defined( RGBA_DEPTH )\n#define RGBA_DEPTH\n#endif\n#ifndef ONLY_AO_COLOR\n#define ONLY_AO_COLOR 1.0, 1.0, 1.0\n#endif\nconst int samples = SAMPLES;\nconst float radius = RADIUS;\nconst bool useNoise = false;\nconst float noiseAmount = 0.0003;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\nconst vec3 onlyAOColor = vec3( ONLY_AO_COLOR );\nfloat unpackDepth( const in vec4 rgba_depth ) {\nfloat depth = 0.0;\n#if defined( RGBA_DEPTH )\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\ndepth = dot( rgba_depth, bit_shift );\n#elif defined( FLOAT_DEPTH )\ndepth = rgba_depth.w;\n#endif\nreturn depth;\n}\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( width / 2.0 ) );\nfloat gg = fract( coord.t * ( height / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat doFog() {\nfloat zdepth = unpackDepth( texture2D( tDepth, vUv ) );\nfloat depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );\nreturn smoothstep( fogNear, fogFar, depth );\n}\nfloat readDepth( const in vec2 coord ) {\nreturn cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 2.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nfloat dd = radius - depth * radius;\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + dd * vv;\nvec2 coord2 = vUv - dd * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat pw;\nfloat ph;\nfloat ao;\nfloat dz = 1.0 / float( samples );\nfloat z = 1.0 - dz / 2.0;\nfloat l = 0.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\npw = cos( l ) * r;\nph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nif ( fogEnabled ) {\nao = mix( ao, 1.0, doFog() );\n}\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 1.0 );\n}"};THREE.TriangleBlurShader={uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define ITERATIONS 10.0\nuniform sampler2D texture;\nuniform vec2 delta;\nvarying vec2 vUv;\nfloat random( vec3 scale, float seed ) {\nreturn fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\n}\nvoid main() {\nvec4 color = vec4( 0.0 );\nfloat total = 0.0;\nfloat offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\nfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\nfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\nfloat weight = 1.0 - abs( percent );\ncolor += texture2D( texture, vUv + delta * percent ) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}"};THREE.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvoid main() {\nfloat depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\ngl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\n}"};THREE.VerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat vv = v * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float offset;\nuniform float darkness;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\ngl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n}"};THREE.AudioObject=function(a,b,c,d){THREE.Object3D.call(this);void 0===c&&(c=1);void 0===b&&(b=1);void 0===d&&(d=!0);if(!this.context)try{this.context=new webkitAudioContext}catch(e){return console.warn("THREE.AudioObject: webkitAudioContext not found"),this}this.directionalSource=!1;this.listener=this.context.listener;this.panner=this.context.createPanner();this.source=this.context.createBufferSource();this.masterGainNode=this.context.createGainNode();this.dryGainNode=this.context.createGainNode();
this.masterGainNode.gain.value=b;this.dryGainNode.gain.value=3;this.source.connect(this.panner);this.panner.connect(this.dryGainNode);this.dryGainNode.connect(this.masterGainNode);this.masterGainNode.connect(this.context.destination);this.source.playbackRate.value=c;this.source.loop=d;var f=new XMLHttpRequest;f.open("GET",a,!0);f.responseType="arraybuffer";f.onload=function(){v.source.buffer=v.context.createBuffer(f.response,!0);v.source.noteOn(0)};f.send();var g=new THREE.Vector3,h=new THREE.Vector3,
j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,p=new THREE.Vector3,s=new THREE.Vector3,r=new THREE.Vector3,q=new THREE.Vector3,v=this;this.setVolume=function(a){this.masterGainNode.gain.value=a};this.update=function(a){j.copy(g);k.copy(h);g.copy(this.matrixWorld.getPosition());h.copy(a.matrixWorld.getPosition());l.sub(g,j);m.sub(h,k);q.copy(a.up);s.set(0,0,-1);a.matrixWorld.rotateAxis(s);s.normalize();this.listener.setPosition(h.x,h.y,h.z);this.listener.setVelocity(m.x,
m.y,m.z);this.listener.setOrientation(s.x,s.y,s.z,q.x,q.y,q.z);this.panner.setPosition(g.x,g.y,g.z);this.panner.setVelocity(l.x,l.y,l.z);this.directionalSource&&(p.set(0,0,-1),this.matrixWorld.rotateAxis(p),p.normalize(),r.copy(this.up),this.panner.setOrientation(p.x,p.y,p.z,r.x,r.y,r.z))}};THREE.AudioObject.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioObject.prototype.context=null;THREE.AudioObject.prototype.type=null;THREE.Car=function(){function a(){if(b.bodyGeometry&&b.wheelGeometry){if(b.autoWheelGeometry){b.wheelGeometry.computeBoundingBox();var a=b.wheelGeometry.boundingBox;b.wheelOffset.add(a.min,a.max);b.wheelOffset.multiplyScalar(0.5);b.wheelDiameter=a.max.y-a.min.y;THREE.GeometryUtils.center(b.wheelGeometry)}var a=b.modelScale,d=new THREE.Vector3,e=new THREE.MeshFaceMaterial(b.bodyMaterials),f=new THREE.MeshFaceMaterial(b.wheelMaterials);b.bodyMesh=new THREE.Mesh(b.bodyGeometry,e);b.bodyMesh.scale.set(a,
a,a);b.root.add(b.bodyMesh);d.multiply(b.wheelOffset,new THREE.Vector3(a,a,a));b.frontLeftWheelRoot.position.addSelf(d);b.frontLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.frontLeftWheelMesh.scale.set(a,a,a);b.frontLeftWheelRoot.add(b.frontLeftWheelMesh);b.root.add(b.frontLeftWheelRoot);d.multiply(b.wheelOffset,new THREE.Vector3(-a,a,a));b.frontRightWheelRoot.position.addSelf(d);b.frontRightWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.frontRightWheelMesh.scale.set(a,a,a);b.frontRightWheelMesh.rotation.z=
Math.PI;b.frontRightWheelRoot.add(b.frontRightWheelMesh);b.root.add(b.frontRightWheelRoot);d.multiply(b.wheelOffset,new THREE.Vector3(a,a,-a));d.z-=b.backWheelOffset;b.backLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.backLeftWheelMesh.position.addSelf(d);b.backLeftWheelMesh.scale.set(a,a,a);b.root.add(b.backLeftWheelMesh);d.multiply(b.wheelOffset,new THREE.Vector3(-a,a,-a));d.z-=b.backWheelOffset;b.backRightWheelMesh=new THREE.Mesh(b.wheelGeometry,f);b.backRightWheelMesh.position.addSelf(d);
b.backRightWheelMesh.scale.set(a,a,a);b.backRightWheelMesh.rotation.z=Math.PI;b.root.add(b.backRightWheelMesh);b.meshes=[b.bodyMesh,b.frontLeftWheelMesh,b.frontRightWheelMesh,b.backLeftWheelMesh,b.backRightWheelMesh];b.loaded=!0;b.callback&&b.callback(b)}}var b=this;this.modelScale=1;this.backWheelOffset=2;this.autoWheelGeometry=!0;this.wheelOffset=new THREE.Vector3;this.wheelDiameter=1;this.MAX_SPEED=2200;this.MAX_REVERSE_SPEED=-1500;this.MAX_WHEEL_ROTATION=0.6;this.FRONT_ACCELERATION=1250;this.BACK_ACCELERATION=
1500;this.WHEEL_ANGULAR_ACCELERATION=1.5;this.FRONT_DECCELERATION=750;this.WHEEL_ANGULAR_DECCELERATION=1;this.STEERING_RADIUS_RATIO=0.0023;this.MAX_TILT_SIDES=0.05;this.MAX_TILT_FRONTBACK=0.015;this.carOrientation=this.wheelOrientation=this.acceleration=this.speed=0;this.root=new THREE.Object3D;this.frontLeftWheelRoot=new THREE.Object3D;this.frontRightWheelRoot=new THREE.Object3D;this.wheelMaterials=this.bodyMaterials=this.wheelGeometry=this.bodyGeometry=this.backRightWheelMesh=this.backLeftWheelMesh=
this.frontRightWheelMesh=this.frontLeftWheelMesh=this.bodyMesh=null;this.loaded=!1;this.meshes=[];this.enableShadows=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].castShadow=a,this.meshes[b].receiveShadow=a};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].visible=a,this.meshes[b].visible=a};this.loadPartsJSON=function(c,d){var e=new THREE.JSONLoader;e.load(c,function(c,d){b.bodyGeometry=c;b.bodyMaterials=d;a()});e.load(d,function(c,d){b.wheelGeometry=
c;b.wheelMaterials=d;a()})};this.loadPartsBinary=function(c,d){var e=new THREE.BinaryLoader;e.load(c,function(c,d){b.bodyGeometry=c;b.bodyMaterials=d;a()});e.load(d,function(c,d){b.wheelGeometry=c;b.wheelMaterials=d;a()})};this.updateCarModel=function(a,b){b.moveForward&&(this.speed=THREE.Math.clamp(this.speed+a*this.FRONT_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration+a,-1,1));b.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-a*this.BACK_ACCELERATION,
this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration-a,-1,1));b.moveLeft&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION));b.moveRight&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION));if(!b.moveForward&&!b.moveBackward)if(0<this.speed){var e=1===this.speed/this.MAX_SPEED?
1:-Math.pow(2,-10*(this.speed/this.MAX_SPEED))+1;this.speed=THREE.Math.clamp(this.speed-e*a*this.FRONT_DECCELERATION,0,this.MAX_SPEED);this.acceleration=THREE.Math.clamp(this.acceleration-e*a,0,1)}else e=1===this.speed/this.MAX_REVERSE_SPEED?1:-Math.pow(2,-10*(this.speed/this.MAX_REVERSE_SPEED))+1,this.speed=THREE.Math.clamp(this.speed+e*a*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,0),this.acceleration=THREE.Math.clamp(this.acceleration+e*a,-1,0);!b.moveLeft&&!b.moveRight&&(this.wheelOrientation=
0<this.wheelOrientation?THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_DECCELERATION,0,this.MAX_WHEEL_ROTATION):THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_DECCELERATION,-this.MAX_WHEEL_ROTATION,0));e=this.speed*a;this.carOrientation+=e*this.STEERING_RADIUS_RATIO*this.wheelOrientation;this.root.position.x+=Math.sin(this.carOrientation)*e;this.root.position.z+=Math.cos(this.carOrientation)*e;this.root.rotation.y=this.carOrientation;this.loaded&&(this.bodyMesh.rotation.z=
this.MAX_TILT_SIDES*this.wheelOrientation*(this.speed/this.MAX_SPEED),this.bodyMesh.rotation.x=-this.MAX_TILT_FRONTBACK*this.acceleration);e*=1/(this.modelScale*(this.wheelDiameter/2));this.loaded&&(this.frontLeftWheelMesh.rotation.x+=e,this.frontRightWheelMesh.rotation.x+=e,this.backLeftWheelMesh.rotation.x+=e,this.backRightWheelMesh.rotation.x+=e);this.frontLeftWheelRoot.rotation.y=this.wheelOrientation;this.frontRightWheelRoot.rotation.y=this.wheelOrientation}};THREE.Curves={};THREE.Curves.GrannyKnot=THREE.Curve.create(function(){},function(a){a*=2*Math.PI;var b=-0.22*Math.cos(a)-1.28*Math.sin(a)-0.44*Math.cos(3*a)-0.78*Math.sin(3*a),c=-0.1*Math.cos(2*a)-0.27*Math.sin(2*a)+0.38*Math.cos(4*a)+0.46*Math.sin(4*a);a=0.7*Math.cos(3*a)-0.4*Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(20)});
THREE.Curves.HeartCurve=THREE.Curve.create(function(a){this.scale=void 0===a?5:a},function(a){a*=2*Math.PI;var b=16*Math.pow(Math.sin(a),3);a=13*Math.cos(a)-5*Math.cos(2*a)-2*Math.cos(3*a)-Math.cos(4*a);return(new THREE.Vector3(b,a,0)).multiplyScalar(this.scale)});THREE.Curves.VivianiCurve=THREE.Curve.create(function(a){this.radius=a},function(a){a=4*a*Math.PI;var b=this.radius/2,c=b*(1+Math.cos(a)),d=b*Math.sin(a);a=2*b*Math.sin(a/2);return new THREE.Vector3(c,d,a)});
THREE.Curves.KnotCurve=THREE.Curve.create(function(){},function(a){a*=2*Math.PI;var b=50*Math.sin(a),c=Math.cos(a)*(10+50*Math.cos(a));a=Math.sin(a)*(10+50*Math.cos(a));return new THREE.Vector3(b,c,a)});THREE.Curves.HelixCurve=THREE.Curve.create(function(){},function(a){var b=150*2*Math.PI*a/30,c=30*Math.cos(b),b=30*Math.sin(b);return new THREE.Vector3(c,b,150*a)});
THREE.Curves.TrefoilKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){a*=2*Math.PI;var b=(2+Math.cos(3*a))*Math.cos(2*a),c=(2+Math.cos(3*a))*Math.sin(2*a);a=Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TorusKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){a*=2*Math.PI;var b=(2+Math.cos(4*a))*Math.cos(3*a),c=(2+Math.cos(4*a))*Math.sin(3*a);a=Math.sin(4*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.CinquefoilKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){a*=2*Math.PI;var b=(2+Math.cos(5*a))*Math.cos(2*a),c=(2+Math.cos(5*a))*Math.sin(2*a);a=Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TrefoilPolynomialKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){a=4*a-2;var b=Math.pow(a,3)-3*a,c=Math.pow(a,4)-4*a*a;a=0.2*Math.pow(a,5)-2*a;return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
var scaleTo=function(a,b,c){return c*(b-a)+a};THREE.Curves.FigureEightPolynomialKnot=THREE.Curve.create(function(a){this.scale=void 0===a?1:a},function(a){a=scaleTo(-4,4,a);var b=0.4*a*(a*a-7)*(a*a-10),c=Math.pow(a,4)-13*a*a;return(new THREE.Vector3(b,c,0.1*a*(a*a-4)*(a*a-9)*(a*a-12))).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4a=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){a*=2*Math.PI;var b=Math.cos(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),c=Math.sin(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a)));a=0.35*Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4b=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI;a=Math.cos(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b));var c=Math.sin(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),b=0.2*Math.sin(9*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5a=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI;a=Math.cos(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b));var c=Math.sin(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),b=0.2*Math.sin(20*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5c=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI;a=Math.cos(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b)));var c=Math.sin(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),b=0.35*Math.sin(15*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});THREE.MarchingCubes=function(a,b,c,d){THREE.ImmediateRenderObject.call(this);this.material=b;this.enableUvs=void 0!==c?c:!1;this.enableColors=void 0!==d?d:!1;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(3*this.size3);this.vlist=new Float32Array(36);this.nlist=
new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=!1;this.positionArray=new Float32Array(3*this.maxCount);this.normalArray=new Float32Array(3*this.maxCount);this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount));this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))};this.lerp=function(a,b,c){return a+(b-a)*c};this.VIntX=function(a,b,c,d,j,k,l,m,p,s){j=(j-p)/(s-p);p=this.normal_cache;b[d]=k+
j*this.delta;b[d+1]=l;b[d+2]=m;c[d]=this.lerp(p[a],p[a+3],j);c[d+1]=this.lerp(p[a+1],p[a+4],j);c[d+2]=this.lerp(p[a+2],p[a+5],j)};this.VIntY=function(a,b,c,d,j,k,l,m,p,s){j=(j-p)/(s-p);p=this.normal_cache;b[d]=k;b[d+1]=l+j*this.delta;b[d+2]=m;b=a+3*this.yd;c[d]=this.lerp(p[a],p[b],j);c[d+1]=this.lerp(p[a+1],p[b+1],j);c[d+2]=this.lerp(p[a+2],p[b+2],j)};this.VIntZ=function(a,b,c,d,j,k,l,m,p,s){j=(j-p)/(s-p);p=this.normal_cache;b[d]=k;b[d+1]=l;b[d+2]=m+j*this.delta;b=a+3*this.zd;c[d]=this.lerp(p[a],
p[b],j);c[d+1]=this.lerp(p[a+1],p[b+1],j);c[d+2]=this.lerp(p[a+2],p[b+2],j)};this.compNorm=function(a){var b=3*a;0===this.normal_cache[b]&&(this.normal_cache[b]=this.field[a-1]-this.field[a+1],this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd],this.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,b,c,d,j,k){var l=d+1,m=d+this.yd,p=d+this.zd,s=l+this.yd,r=l+this.zd,q=d+this.yd+this.zd,v=l+this.yd+this.zd,u=0,w=this.field[d],x=this.field[l],
t=this.field[m],D=this.field[s],z=this.field[p],y=this.field[r],A=this.field[q],G=this.field[v];w<j&&(u|=1);x<j&&(u|=2);t<j&&(u|=8);D<j&&(u|=4);z<j&&(u|=16);y<j&&(u|=32);A<j&&(u|=128);G<j&&(u|=64);var H=THREE.edgeTable[u];if(0===H)return 0;var J=this.delta,T=a+J,E=b+J,J=c+J;H&1&&(this.compNorm(d),this.compNorm(l),this.VIntX(3*d,this.vlist,this.nlist,0,j,a,b,c,w,x));H&2&&(this.compNorm(l),this.compNorm(s),this.VIntY(3*l,this.vlist,this.nlist,3,j,T,b,c,x,D));H&4&&(this.compNorm(m),this.compNorm(s),
this.VIntX(3*m,this.vlist,this.nlist,6,j,a,E,c,t,D));H&8&&(this.compNorm(d),this.compNorm(m),this.VIntY(3*d,this.vlist,this.nlist,9,j,a,b,c,w,t));H&16&&(this.compNorm(p),this.compNorm(r),this.VIntX(3*p,this.vlist,this.nlist,12,j,a,b,J,z,y));H&32&&(this.compNorm(r),this.compNorm(v),this.VIntY(3*r,this.vlist,this.nlist,15,j,T,b,J,y,G));H&64&&(this.compNorm(q),this.compNorm(v),this.VIntX(3*q,this.vlist,this.nlist,18,j,a,E,J,A,G));H&128&&(this.compNorm(p),this.compNorm(q),this.VIntY(3*p,this.vlist,this.nlist,
21,j,a,b,J,z,A));H&256&&(this.compNorm(d),this.compNorm(p),this.VIntZ(3*d,this.vlist,this.nlist,24,j,a,b,c,w,z));H&512&&(this.compNorm(l),this.compNorm(r),this.VIntZ(3*l,this.vlist,this.nlist,27,j,T,b,c,x,y));H&1024&&(this.compNorm(s),this.compNorm(v),this.VIntZ(3*s,this.vlist,this.nlist,30,j,T,E,c,D,G));H&2048&&(this.compNorm(m),this.compNorm(q),this.VIntZ(3*m,this.vlist,this.nlist,33,j,a,E,c,t,A));u<<=4;for(j=d=0;-1!=THREE.triTable[u+j];)a=u+j,b=a+1,c=a+2,this.posnormtriv(this.vlist,this.nlist,
3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[c],k),j+=3,d++;return d};this.posnormtriv=function(a,b,c,d,j,k){var l=3*this.count;this.positionArray[l]=a[c];this.positionArray[l+1]=a[c+1];this.positionArray[l+2]=a[c+2];this.positionArray[l+3]=a[d];this.positionArray[l+4]=a[d+1];this.positionArray[l+5]=a[d+2];this.positionArray[l+6]=a[j];this.positionArray[l+7]=a[j+1];this.positionArray[l+8]=a[j+2];this.normalArray[l]=b[c];this.normalArray[l+1]=b[c+1];this.normalArray[l+2]=b[c+2];this.normalArray[l+
3]=b[d];this.normalArray[l+4]=b[d+1];this.normalArray[l+5]=b[d+2];this.normalArray[l+6]=b[j];this.normalArray[l+7]=b[j+1];this.normalArray[l+8]=b[j+2];this.enableUvs&&(b=2*this.count,this.uvArray[b]=a[c],this.uvArray[b+1]=a[c+2],this.uvArray[b+2]=a[d],this.uvArray[b+3]=a[d+2],this.uvArray[b+4]=a[j],this.uvArray[b+5]=a[j+2]);this.enableColors&&(this.colorArray[l]=a[c],this.colorArray[l+1]=a[c+1],this.colorArray[l+2]=a[c+2],this.colorArray[l+3]=a[d],this.colorArray[l+4]=a[d+1],this.colorArray[l+5]=
a[d+2],this.colorArray[l+6]=a[j],this.colorArray[l+7]=a[j+1],this.colorArray[l+8]=a[j+2]);this.count+=3;this.count>=this.maxCount-3&&(this.hasNormals=this.hasPositions=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),k(this))};this.begin=function(){this.count=0;this.hasColors=this.hasUvs=this.hasNormals=this.hasPositions=!1};this.end=function(a){if(0!==this.count){for(var b=3*this.count;b<this.positionArray.length;b++)this.positionArray[b]=0;this.hasNormals=this.hasPositions=
!0;this.enableUvs&&(this.hasUvs=!0);this.enableColors&&(this.hasColors=!0);a(this)}};this.addBall=function(a,b,c,d,j){var k=this.size*Math.sqrt(d/j),l=c*this.size,m=b*this.size,p=a*this.size,s=Math.floor(l-k);1>s&&(s=1);l=Math.floor(l+k);l>this.size-1&&(l=this.size-1);var r=Math.floor(m-k);1>r&&(r=1);m=Math.floor(m+k);m>this.size-1&&(m=this.size-1);var q=Math.floor(p-k);1>q&&(q=1);k=Math.floor(p+k);k>this.size-1&&(k=this.size-1);for(var v,u,w,x,t,D;s<l;s++){p=this.size2*s;u=s/this.size-c;t=u*u;for(u=
r;u<m;u++){w=p+this.size*u;v=u/this.size-b;D=v*v;for(v=q;v<k;v++)x=v/this.size-a,x=d/(1E-6+x*x+D+t)-j,0<x&&(this.field[w+v]+=x)}}};this.addPlaneX=function(a,b){var c,d,j,k,l,m=this.size,p=this.yd,s=this.zd,r=this.field,q=m*Math.sqrt(a/b);q>m&&(q=m);for(c=0;c<q;c++)if(d=c/m,d*=d,k=a/(1E-4+d)-b,0<k)for(d=0;d<m;d++){l=c+d*p;for(j=0;j<m;j++)r[s*j+l]+=k}};this.addPlaneY=function(a,b){var c,d,j,k,l,m,p=this.size,s=this.yd,r=this.zd,q=this.field,v=p*Math.sqrt(a/b);v>p&&(v=p);for(d=0;d<v;d++)if(c=d/p,c*=
c,k=a/(1E-4+c)-b,0<k){l=d*s;for(c=0;c<p;c++){m=l+c;for(j=0;j<p;j++)q[r*j+m]+=k}}};this.addPlaneZ=function(a,b){var c,d,j,k,l,m,p=this.size,s=this.yd,r=this.zd,q=this.field,v=p*Math.sqrt(a/b);v>p&&(v=p);for(j=0;j<v;j++)if(c=j/p,c*=c,k=a/(1E-4+c)-b,0<k){l=r*j;for(d=0;d<p;d++){m=l+d*s;for(c=0;c<p;c++)q[m+c]+=k}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[3*a]=0,this.field[a]=0};this.render=function(a){this.begin();var b,c,d,j,k,l,m,p,s,r=this.size-2;for(j=1;j<r;j++){s=this.size2*
j;m=(j-this.halfsize)/this.halfsize;for(d=1;d<r;d++){p=s+this.size*d;l=(d-this.halfsize)/this.halfsize;for(c=1;c<r;c++)k=(c-this.halfsize)/this.halfsize,b=p+c,this.polygonize(k,l,m,b,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,c=[];this.render(function(d){var j,k,l,m,p,s,r,q;for(j=0;j<d.count;j++)s=3*j,r=s+1,q=s+2,k=d.positionArray[s],l=d.positionArray[r],m=d.positionArray[q],p=new THREE.Vector3(k,l,m),k=d.normalArray[s],l=d.normalArray[r],m=d.normalArray[q],
s=new THREE.Vector3(k,l,m),s.normalize(),b.vertices.push(p),c.push(s);p=d.count/3;for(j=0;j<p;j++)s=3*(a+j),r=s+1,q=s+2,k=c[s],l=c[r],m=c[q],s=new THREE.Face3(s,r,q,[k,l,m]),b.faces.push(s);a+=p;d.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=Object.create(THREE.ImmediateRenderObject.prototype);
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.MD2Character=function(){function a(a,b){for(var d=new THREE.UVMapping,h=[],j=0;j<b.length;j++)h[j]=THREE.ImageUtils.loadTexture(a+b[j],d,c),h[j].name=b[j];return h}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:!0,shading:THREE.SmoothShading,map:c,morphTargets:!0,morphNormals:!0,metal:!1}),h=new THREE.MeshPhongMaterial({color:16777215,specular:1118481,
shininess:50,wireframe:!1,shading:THREE.SmoothShading,map:b,morphTargets:!0,morphNormals:!0,metal:!1});h.wrapAround=!0;var j=new THREE.MorphAnimMesh(a,h);j.rotation.y=-Math.PI/2;j.castShadow=!0;j.receiveShadow=!0;j.materialTexture=h;j.materialWireframe=c;j.parseAnimations();j.playAnimation(a.firstAnimation,d.animationFPS);j.baseDuration=j.duration;return j}function c(){d.loadCounter-=1;if(0===d.loadCounter)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.root=new THREE.Object3D;
this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.activeAnimation=null;this.onLoadComplete=function(){};this.loadCounter=0;this.loadParts=function(e){this.loadCounter=2*e.weapons.length+e.skins.length+1;for(var f=[],g=0;g<e.weapons.length;g++)f[g]=e.weapons[g][1];this.skinsBody=a(e.baseUrl+"skins/",e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",f);f=new THREE.JSONLoader;f.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*
a.boundingBox.min.y;var e=b(a,d.skinsBody[0]);e.scale.set(d.scale,d.scale,d.scale);d.root.add(e);d.meshBody=e;d.activeAnimation=a.firstAnimation;c()});for(var h=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=!1;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;c()}},g=0;g<e.weapons.length;g++)f.load(e.baseUrl+e.weapons[g][0],h(g,e.weapons[g][0]))};this.setPlaybackRate=function(a){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/
a);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/a)};this.setWireframe=function(a){a?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))};this.setSkin=function(a){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=
this.skinsBody[a])};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=!1;if(a=this.weapons[a])a.visible=!0,this.meshWeapon=a,a.playAnimation(this.activeAnimation,this.animationFPS),this.meshWeapon.baseDuration=this.meshWeapon.duration,this.meshWeapon.time=this.meshBody.time,this.meshWeapon.duration=this.meshBody.duration};this.setAnimation=function(a){this.meshBody&&(this.meshBody.playAnimation(a,this.animationFPS),this.meshBody.baseDuration=this.meshBody.duration);
this.meshWeapon&&(this.meshWeapon.playAnimation(a,this.animationFPS),this.meshWeapon.baseDuration=this.meshWeapon.duration,this.meshWeapon.time=this.meshBody.time);this.activeAnimation=a};this.update=function(a){this.meshBody&&this.meshBody.updateAnimation(1E3*a);this.meshWeapon&&this.meshWeapon.updateAnimation(1E3*a)}};THREE.MD2CharacterComplex=function(){function a(a,b){for(var d=new THREE.UVMapping,h=[],j=0;j<b.length;j++)h[j]=THREE.ImageUtils.loadTexture(a+b[j],d,c),h[j].name=b[j];return h}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:!0,shading:THREE.SmoothShading,map:c,morphTargets:!0,morphNormals:!0,metal:!0}),h=new THREE.MeshPhongMaterial({color:16777215,
specular:1118481,shininess:50,wireframe:!1,shading:THREE.SmoothShading,map:b,morphTargets:!0,morphNormals:!0,metal:!0});h.wrapAround=!0;var j=new THREE.MorphBlendMesh(a,h);j.rotation.y=-Math.PI/2;j.materialTexture=h;j.materialWireframe=c;j.autoCreateAnimations(d.animationFPS);return j}function c(){d.loadCounter-=1;if(0===d.loadCounter)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.transitionFrames=15;this.maxSpeed=275;this.maxReverseSpeed=-275;this.frontDecceleration=this.backAcceleration=
this.frontAcceleration=600;this.angularSpeed=2.5;this.root=new THREE.Object3D;this.controls=this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.currentSkin=void 0;this.onLoadComplete=function(){};this.meshes=[];this.animations={};this.bodyOrientation=this.speed=this.loadCounter=0;this.walkSpeed=this.maxSpeed;this.crouchSpeed=0.5*this.maxSpeed;this.oldAnimation=this.activeAnimation=null;this.enableShadows=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].castShadow=
a,this.meshes[b].receiveShadow=a};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].visible=a,this.meshes[b].visible=a};this.shareParts=function(a){this.animations=a.animations;this.walkSpeed=a.walkSpeed;this.crouchSpeed=a.crouchSpeed;this.skinsBody=a.skinsBody;this.skinsWeapon=a.skinsWeapon;var c=b(a.meshBody.geometry,this.skinsBody[0]);c.scale.set(this.scale,this.scale,this.scale);this.root.position.y=a.root.position.y;this.root.add(c);this.meshBody=c;this.meshes.push(c);
for(c=0;c<a.weapons.length;c++){var d=b(a.weapons[c].geometry,this.skinsWeapon[c]);d.scale.set(this.scale,this.scale,this.scale);d.visible=!1;d.name=a.weapons[c].name;this.root.add(d);this.meshWeapon=this.weapons[c]=d;this.meshes.push(d)}};this.loadParts=function(e){this.animations=e.animations;this.walkSpeed=e.walkSpeed;this.crouchSpeed=e.crouchSpeed;this.loadCounter=2*e.weapons.length+e.skins.length+1;for(var f=[],g=0;g<e.weapons.length;g++)f[g]=e.weapons[g][1];this.skinsBody=a(e.baseUrl+"skins/",
e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",f);f=new THREE.JSONLoader;f.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*a.boundingBox.min.y;a=b(a,d.skinsBody[0]);a.scale.set(d.scale,d.scale,d.scale);d.root.add(a);d.meshBody=a;d.meshes.push(a);c()});for(var h=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=!1;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;d.meshes.push(f);c()}},g=0;g<e.weapons.length;g++)f.load(e.baseUrl+
e.weapons[g][0],h(g,e.weapons[g][0]))};this.setPlaybackRate=function(a){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/a);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/a)};this.setWireframe=function(a){a?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=
this.meshWeapon.materialTexture))};this.setSkin=function(a){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[a],this.currentSkin=a)};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=!1;if(a=this.weapons[a])a.visible=!0,this.meshWeapon=a,this.activeAnimation&&(a.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation)))};this.setAnimation=
function(a){a!==this.activeAnimation&&a&&(this.meshBody&&(this.meshBody.setAnimationWeight(a,0),this.meshBody.playAnimation(a),this.oldAnimation=this.activeAnimation,this.activeAnimation=a,this.blendCounter=this.transitionFrames),this.meshWeapon&&(this.meshWeapon.setAnimationWeight(a,0),this.meshWeapon.playAnimation(a)))};this.update=function(a){this.controls&&this.updateMovementModel(a);this.animations&&(this.updateBehaviors(a),this.updateAnimations(a))};this.updateAnimations=function(a){var b=1;
0<this.blendCounter&&(b=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1);this.meshBody&&(this.meshBody.update(a),this.meshBody.setAnimationWeight(this.activeAnimation,b),this.meshBody.setAnimationWeight(this.oldAnimation,1-b));this.meshWeapon&&(this.meshWeapon.update(a),this.meshWeapon.setAnimationWeight(this.activeAnimation,b),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-b))};this.updateBehaviors=function(){var a=this.controls,b=this.animations,c,d;
a.crouch?(c=b.crouchMove,d=b.crouchIdle):(c=b.move,d=b.idle);a.jump&&(d=c=b.jump);a.attack&&(d=a.crouch?c=b.crouchAttack:c=b.attack);(a.moveForward||a.moveBackward||a.moveLeft||a.moveRight)&&this.activeAnimation!==c&&this.setAnimation(c);Math.abs(this.speed)<0.2*this.maxSpeed&&!a.moveLeft&&!a.moveRight&&!a.moveForward&&!a.moveBackward&&this.activeAnimation!==d&&this.setAnimation(d);a.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),
this.meshWeapon&&(this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation)));a.moveBackward&&(this.meshBody&&(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)))};this.updateMovementModel=function(a){var b=
this.controls;this.maxSpeed=b.crouch?this.crouchSpeed:this.walkSpeed;this.maxReverseSpeed=-this.maxSpeed;b.moveForward&&(this.speed=THREE.Math.clamp(this.speed+a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-a*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveLeft&&(this.bodyOrientation+=a*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveRight&&
(this.bodyOrientation-=a*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));!b.moveForward&&!b.moveBackward&&(0<this.speed?(b=1===this.speed/this.maxSpeed?1:-Math.pow(2,-10*(this.speed/this.maxSpeed))+1,this.speed=THREE.Math.clamp(this.speed-b*a*this.frontDecceleration,0,this.maxSpeed)):(b=1===this.speed/this.maxReverseSpeed?1:-Math.pow(2,-10*(this.speed/this.maxReverseSpeed))+1,this.speed=THREE.Math.clamp(this.speed+b*a*this.backAcceleration,
this.maxReverseSpeed,0)));a*=this.speed;this.root.position.x+=Math.sin(this.bodyOrientation)*a;this.root.position.z+=Math.cos(this.bodyOrientation)*a;this.root.rotation.y=this.bodyOrientation}};THREE.ParametricGeometries={klein:function(a,b){b*=Math.PI;a*=2*Math.PI;b*=2;var c,d,e;b<Math.PI?(c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(b)*Math.cos(a),e=-8*Math.sin(b)-2*(1-Math.cos(b)/2)*Math.sin(b)*Math.cos(a)):(c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(a+Math.PI),e=-8*Math.sin(b));d=-2*(1-Math.cos(b)/2)*Math.sin(a);return new THREE.Vector3(c,d,e)},plane:function(a,b){return function(c,d){return new THREE.Vector3(c*a,0,d*b)}},mobius:function(a,b){a-=0.5;
var c=2*Math.PI*b,d,e;d=Math.cos(c)*(2+a*Math.cos(c/2));e=Math.sin(c)*(2+a*Math.cos(c/2));c=a*Math.sin(c/2);return new THREE.Vector3(d,e,c)},mobius3d:function(a,b){a*=Math.PI;b*=2*Math.PI;a*=2;var c=a/2,d,e;d=0.125*Math.cos(b)*Math.cos(c)-0.65*Math.sin(b)*Math.sin(c);e=0.125*Math.cos(b)*Math.sin(c)+0.65*Math.sin(b)*Math.cos(c);c=(2.25+d)*Math.sin(a);d=(2.25+d)*Math.cos(a);return new THREE.Vector3(d,c,e)}};
THREE.ParametricGeometries.TubeGeometry=function(a,b,c,d,e,f){this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);var g=this,h,j,k,l=this.segments+1,m,p,s,r=new THREE.Vector3,q;e=new THREE.TubeGeometry.FrenetFrames(a,b,e);var v=e.tangents,u=e.normals,w=e.binormals;this.tangents=v;this.normals=u;this.binormals=w;THREE.ParametricGeometry.call(this,function(b,d){d*=2*Math.PI;q=b*(l-1);q=Math.floor(q);s=a.getPointAt(b);h=v[q];
j=u[q];k=w[q];g.debug&&(g.debug.add(new THREE.ArrowHelper(h,s,c,255)),g.debug.add(new THREE.ArrowHelper(j,s,c,16711680)),g.debug.add(new THREE.ArrowHelper(k,s,c,65280)));m=-g.radius*Math.cos(d);p=g.radius*Math.sin(d);r.copy(s);r.x+=m*j.x+p*k.x;r.y+=m*j.y+p*k.y;r.z+=m*j.z+p*k.z;return r.clone()},b,d)};THREE.ParametricGeometries.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.TorusKnotGeometry=function(a,b,c,d,e,f,g){this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;var h=new (THREE.Curve.create(function(){},function(b){b*=2*Math.PI;var c=(1+0.5*Math.cos(f*b))*Math.cos(e*b),d=(1+0.5*Math.cos(f*b))*Math.sin(e*b);b=0.5*Math.sin(f*b);return(new THREE.Vector3(c,d*g,b)).multiplyScalar(a)}));THREE.ParametricGeometries.TubeGeometry.call(this,h,c,b,d,!0,!1)};
THREE.ParametricGeometries.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometries.SphereGeometry=function(a,b,c){THREE.ParametricGeometry.call(this,function(b,c){b*=Math.PI;c*=2*Math.PI;var f=a*Math.sin(b)*Math.cos(c),g=a*Math.sin(b)*Math.sin(c),h=a*Math.cos(b);return new THREE.Vector3(f,g,h)},b,c,!1)};THREE.ParametricGeometries.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.PlaneGeometry=function(a,b,c,d){THREE.ParametricGeometry.call(this,function(c,d){return new THREE.Vector3(c*a,0,d*b)},c,d)};THREE.ParametricGeometries.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{type:"t",value:null},fStepSize:{type:"f",value:1},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define TAPS_PER_PASS 6.0\nvarying vec2 vUv;\nuniform sampler2D tInput;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize;\nvoid main() {\nvec2 delta = vSunPositionScreenSpace - vUv;\nfloat dist = length( delta );\nvec2 stepv = fStepSize * delta / dist;\nfloat iters = dist/fStepSize;\nvec2 uv = vUv.xy;\nfloat col = 0.0;\nif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\ngl_FragColor = vec4( col/TAPS_PER_PASS );\ngl_FragColor.a = 1.0;\n}"},
godrays_combine:{uniforms:{tColors:{type:"t",value:null},tGodRays:{type:"t",value:null},fGodRayIntensity:{type:"f",value:0.69},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\nvoid main() {\ngl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\ngl_FragColor.a = 1.0;\n}"},
godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)},fAspect:{type:"f",value:1},sunColor:{type:"c",value:new THREE.Color(16772608)},bgColor:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\nuniform vec3 sunColor;\nuniform vec3 bgColor;\nvoid main() {\nvec2 diff = vUv - vSunPositionScreenSpace;\ndiff.x *= fAspect;\nfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\nprop = 0.35 * pow( 1.0 - prop, 3.0 );\ngl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\ngl_FragColor.w = 1.0;\n}"}};THREE.ShaderSkin={skinSimple:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableBump:{type:"i",value:0},enableSpecular:{type:"i",value:0},tDiffuse:{type:"t",value:null},tBeckmann:{type:"t",value:null},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",
value:0.75},bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},specularMap:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},uWrapRGB:{type:"v3",value:new THREE.Vector3(0.75,0.375,0.1875)}}]),fragmentShader:["#define USE_BUMPMAP\n#extension GL_OES_standard_derivatives : enable\nuniform bool enableBump;\nuniform bool enableSpecular;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform vec3 uWrapRGB;\nuniform sampler2D tDiffuse;\nuniform sampler2D tBeckmann;\nuniform sampler2D specularMap;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse.rgb *= colDiffuse.rgb;\ngl_FragColor = gl_FragColor * colDiffuse;\nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nfloat specularStrength;\nif ( enableSpecular ) {\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n} else {\nspecularStrength = 1.0;\n}\n#ifdef USE_BUMPMAP\nif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\nfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\npointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\nspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirTotal = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\nfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\ndirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\nspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\nvec3 lVectorGround = -lVector;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\nspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\n}\n#endif\nvec3 totalLight = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalLight += hemiTotal;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform vec4 offsetRepeat;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},skin:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,{passID:{type:"i",value:0},tDiffuse:{type:"t",value:null},tNormal:{type:"t",value:null},tBlur1:{type:"t",value:null},tBlur2:{type:"t",value:null},tBlur3:{type:"t",value:null},tBlur4:{type:"t",value:null},tBeckmann:{type:"t",value:null},uNormalScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},
uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",value:0.75}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform int passID;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tBlur1;\nuniform sampler2D tBlur2;\nuniform sampler2D tBlur3;\nuniform sampler2D tBlur4;\nuniform sampler2D tBeckmann;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.fog_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( 1.0 );\nvec4 mColor = vec4( uDiffuseColor, uOpacity );\nvec4 mSpecular = vec4( uSpecularColor, uOpacity );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse *= colDiffuse;\ngl_FragColor = gl_FragColor * colDiffuse;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointTotal = vec4( vec3( 0.0 ), 1.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\npointTotal  += pointDistance * vec4( pointLightColor[ i ], 1.0 ) * ( mColor * pointDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += pointDistance * mSpecular.xyz * pointLightColor[ i ] * KS_Skin_Specular( normal, pointVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirTotal = vec4( vec3( 0.0 ), 1.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\ndirTotal  += vec4( directionalLightColor[ i ], 1.0 ) * ( mColor * dirDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += mSpecular.xyz * directionalLightColor[ i ] * KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\nvec4 totalLight = vec4( vec3( 0.0 ), uOpacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\ngl_FragColor = gl_FragColor * totalLight;\nif ( passID == 0 ) {\ngl_FragColor = vec4( sqrt( gl_FragColor.xyz ), gl_FragColor.w );\n} else if ( passID == 1 ) {\n#ifdef VERSION1\nvec3 nonblurColor = sqrt( gl_FragColor.xyz );\n#else\nvec3 nonblurColor = gl_FragColor.xyz;\n#endif\nvec3 blur1Color = texture2D( tBlur1, vUv ).xyz;\nvec3 blur2Color = texture2D( tBlur2, vUv ).xyz;\nvec3 blur3Color = texture2D( tBlur3, vUv ).xyz;\nvec3 blur4Color = texture2D( tBlur4, vUv ).xyz;\ngl_FragColor = vec4( vec3( 0.22,  0.437, 0.635 ) * nonblurColor + \nvec3( 0.101, 0.355, 0.365 ) * blur1Color + \nvec3( 0.119, 0.208, 0.0 )   * blur2Color + \nvec3( 0.114, 0.0,   0.0 )   * blur3Color + \nvec3( 0.444, 0.0,   0.0 )   * blur4Color\n, gl_FragColor.w );\ngl_FragColor.xyz *= pow( colDiffuse.xyz, vec3( 0.5 ) );\ngl_FragColor.xyz += ambientLightColor * uAmbientColor * colDiffuse.xyz + specularTotal;\n#ifndef VERSION1\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif\n}",
THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}",
vertexShaderUV:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\ngl_Position = vec4( uv.x * 2.0 - 1.0, uv.y * 2.0 - 1.0, 0.0, 1.0 );\n}"},
beckmann:{uniforms:{},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nfloat PHBeckmann( float ndoth, float m ) {\nfloat alpha = acos( ndoth );\nfloat ta = tan( alpha );\nfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\nreturn val;\n}\nfloat KSTextureCompute( vec2 tex ) {\nreturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n}\nvoid main() {\nfloat x = KSTextureCompute( vUv );\ngl_FragColor = vec4( x, x, x, 1.0 );\n}"}};THREE.ShaderTerrain={terrain:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableDiffuse1:{type:"i",value:0},enableDiffuse2:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},tDetail:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tDisplacement:{type:"t",value:null},uNormalScale:{type:"f",value:1},
uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uRepeatBase:{type:"v2",value:new THREE.Vector2(1,1)},uRepeatOverlay:{type:"v2",value:new THREE.Vector2(1,1)},uOffset:{type:"v2",value:new THREE.Vector2(0,0)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\nuniform float uNormalScale;\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\nuniform vec2 uOffset;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\nvec2 uvBase = uRepeatBase * vUv;\nvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse1 && enableDiffuse2 ) {\nvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\nvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n#ifdef GAMMA_INPUT\ncolDiffuse1.xyz *= colDiffuse1.xyz;\ncolDiffuse2.xyz *= colDiffuse2.xyz;\n#endif\ngl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n } else if( enableDiffuse1 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n} else if( enableDiffuse2 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\nhemiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uRepeatBase;\nuniform sampler2D tNormal;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec2 uvBase = uv * uRepeatBase;\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec3 displacedPosition = normal * df + position;\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n#else\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\nvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\nvNormal = normalMatrix * normalTex;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")}};THREE.ShaderToon={toon1:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvNormal = normalize( normalMatrix * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvRefract = refract( normalize( I ), worldNormal, 1.02 );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\nfloat intensity = smoothstep( - 0.5, 1.0, pow( length(lightWeighting), 20.0 ) );\nintensity += length(lightWeighting) * 0.2;\nfloat cameraWeighting = dot( normalize( vNormal ), vRefract );\nintensity += pow( 1.0 - length( cameraWeighting ), 6.0 );\nintensity = intensity * 0.2 + 0.3;\nif ( intensity < 0.50 ) {\ngl_FragColor = vec4( 2.0 * intensity * uBaseColor, 1.0 );\n} else {\ngl_FragColor = vec4( 1.0 - 2.0 * ( 1.0 - intensity ) * ( 1.0 - uBaseColor ), 1.0 );\n}\n}"},
toon2:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(15658734)},uLineColor1:{type:"c",value:new THREE.Color(8421504)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat camera = max( dot( normalize( vNormal ), vec3( 0.0, 0.0, 1.0 ) ), 0.4);\nfloat light = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(uAmbientLightColor + uDirLightColor * light) < 1.00 ) {\ngl_FragColor *= vec4( uLineColor1, 1.0 );\n}\nif ( length(uAmbientLightColor + uDirLightColor * camera) < 0.50 ) {\ngl_FragColor *= vec4( uLineColor2, 1.0 );\n}\n}"},
hatching:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.75 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor2, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor3, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.3465 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor4, 1.0 );\n}\n}\n}"},
dotted:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( ( mod(gl_FragCoord.x, 4.001) + mod(gl_FragCoord.y, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif ( ( mod(gl_FragCoord.x + 2.0, 4.001) + mod(gl_FragCoord.y + 2.0, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\n}"}};THREE.DeferredShaderChunk={unpackFloat:"vec3 float_to_vec3( float data ) {\nvec3 uncompressed;\nuncompressed.x = fract( data );\nfloat zInt = floor( data / 255.0 );\nuncompressed.z = fract( zInt / 255.0 );\nuncompressed.y = fract( floor( data - ( zInt * 255.0 ) ) / 255.0 );\nreturn uncompressed;\n}",computeVertexPositionVS:"vec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );\nvec4 normalDepth = texture2D( samplerNormalDepth, texCoord );\nfloat z = normalDepth.w;\nif ( z == 0.0 ) discard;\nvec2 xy = texCoord * 2.0 - 1.0;\nvec4 vertexPositionProjected = vec4( xy, z, 1.0 );\nvec4 vertexPositionVS = matProjInverse * vertexPositionProjected;\nvertexPositionVS.xyz /= vertexPositionVS.w;\nvertexPositionVS.w = 1.0;",
computeNormal:"vec3 normal = normalDepth.xyz * 2.0 - 1.0;",unpackColorMap:"vec4 colorMap = texture2D( samplerColor, texCoord );\nvec3 albedo = float_to_vec3( abs( colorMap.x ) );\nvec3 specularColor = float_to_vec3( abs( colorMap.y ) );\nfloat shininess = abs( colorMap.z );\nfloat wrapAround = sign( colorMap.z );\nfloat additiveSpecular = sign( colorMap.y );",computeDiffuse:"float dotProduct = dot( normal, lightVector );\nfloat diffuseFull = max( dotProduct, 0.0 );\nvec3 diffuse;\nif ( wrapAround < 0.0 ) {\nfloat diffuseHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nconst vec3 wrapRGB = vec3( 1.0, 1.0, 1.0 );\ndiffuse = mix( vec3( diffuseFull ), vec3( diffuseHalf ), wrapRGB );\n} else {\ndiffuse = vec3( diffuseFull );\n}",
computeSpecular:"vec3 halfVector = normalize( lightVector - normalize( vertexPositionVS.xyz ) );\nfloat dotNormalHalf = max( dot( normal, halfVector ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specularColor + vec3( 1.0 - specularColor ) * pow( 1.0 - dot( lightVector, halfVector ), 5.0 );\nvec3 specular = schlick * max( pow( dotNormalHalf, shininess ), 0.0 ) * diffuse * specularNormalization;",combine:"vec3 light = lightIntensity * lightColor;\ngl_FragColor = vec4( light * ( albedo * diffuse + specular ), attenuation );",
shadowMapPCF:"float sampleShadowPCF( sampler2D shadowMap, vec2 shadowMapSize, vec2 shadowCoord, float vertexDepth ) {\nfloat shadowDepth;\nfloat shadowValue = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize.x;\nfloat yPixelOffset = 1.0 / shadowMapSize.y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, dy0 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( 0.0, dy0 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, dy0 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, 0.0 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, 0.0 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, dy1 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( 0.0, dy1 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, dy1 ) ).x;\nshadowValue += shadowDelta * float( vertexDepth > shadowDepth );\nreturn shadowValue;\n}",
shadowMapPCFSoft:"float sampleShadowPCFSoft( sampler2D shadowMap, vec2 shadowMapSize, vec2 shadowCoord, float vertexDepth ) {\nfloat shadowDepth;\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize.x;\nfloat yPixelOffset = 1.0 / shadowMapSize.y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, dy0 ) ).x;\nshadowKernel[0][0] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, 0.0 ) ).x;\nshadowKernel[0][1] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, dy1 ) ).x;\nshadowKernel[0][2] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( 0.0, dy0 ) ).x;\nshadowKernel[1][0] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord ).x;\nshadowKernel[1][1] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( 0.0, dy1 ) ).x;\nshadowKernel[1][2] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, dy0 ) ).x;\nshadowKernel[2][0] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, 0.0 ) ).x;\nshadowKernel[2][1] = 0.25 * float( vertexDepth > shadowDepth );\nshadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, dy1 ) ).x;\nshadowKernel[2][2] = 0.25 * float( vertexDepth > shadowDepth );\nvec2 fractionalCoord = 1.0 - fract( shadowCoord * shadowMapSize );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nfloat shadowValue = dot( shadowValues, vec4( 1.0 ) );\nreturn shadowValue;\n}"};
THREE.ShaderDeferred={color:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapAround:{type:"f",value:1},additiveSpecular:{type:"f",value:1},samplerNormalDepth:{type:"t",value:null},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600}}]),fragmentShader:["uniform vec3 diffuse;\nuniform vec3 specular;\nuniform vec3 emissive;\nuniform float shininess;\nuniform float wrapAround;\nuniform float additiveSpecular;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,"#ifdef USE_ENVMAP\nvarying vec3 vWorldPosition;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform sampler2D samplerNormalDepth;\nuniform float viewHeight;\nuniform float viewWidth;\n#endif",THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"const float unit = 255.0/256.0;\nfloat vec3_to_float( vec3 data ) {\nhighp float compressed = fract( data.x * unit ) + floor( data.y * unit * 255.0 ) + floor( data.z * unit * 255.0 ) * 255.0;\nreturn compressed;\n}\nvoid main() {\nconst float opacity = 1.0;\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,
"#ifdef USE_ENVMAP\nvec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );\nvec4 normalDepth = texture2D( samplerNormalDepth, texCoord );\nvec3 normal = normalDepth.xyz * 2.0 - 1.0;\nvec3 reflectVec;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"const float compressionScale = 0.999;\nvec3 diffuseMapColor;\n#ifdef USE_MAP\ndiffuseMapColor = texelColor.xyz;\n#else\ndiffuseMapColor = vec3( 1.0 );\n#endif\ngl_FragColor.x = vec3_to_float( compressionScale * gl_FragColor.xyz );\nif ( additiveSpecular < 0.0 ) {\ngl_FragColor.y = vec3_to_float( compressionScale * specular );\n} else {\ngl_FragColor.y = vec3_to_float( compressionScale * specular * diffuseMapColor );\n}\ngl_FragColor.y *= additiveSpecular;\ngl_FragColor.z = wrapAround * shininess;\n#ifdef USE_COLOR\ngl_FragColor.w = vec3_to_float( compressionScale * emissive * diffuseMapColor * vColor );\n#else\ngl_FragColor.w = vec3_to_float( compressionScale * emissive * diffuseMapColor );\n#endif\n}"].join("\n"),
vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"#ifdef USE_ENVMAP\nvarying vec3 vWorldPosition;\n#endif\nvoid main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"#ifdef USE_ENVMAP\nvWorldPosition = worldPosition.xyz;\n#endif\n}"].join("\n")},normalDepth:{uniforms:{alphaMap:{type:"t",value:null},bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}},fragmentShader:["#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n#extension GL_OES_standard_derivatives : enable\n\nvarying vec3 vViewPosition;\n#endif\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( ALPHATEST )\nvarying vec2 vUv;\n#endif",
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,"#ifdef ALPHATEST\nuniform sampler2D alphaMap;\n#endif\nvarying vec3 normalView;\nvarying vec4 clipPos;\nvoid main() {\n#ifdef ALPHATEST\nfloat alphaValue = texture2D( alphaMap, vUv ).a;\nif ( alphaValue < ALPHATEST ) discard;\n#endif\nvec3 normal = normalize( normalView );\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -normalize( vViewPosition ), normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\ngl_FragColor.xyz = normal * 0.5 + 0.5;\ngl_FragColor.w = clipPos.z / clipPos.w;\n}"].join("\n"),
vertexShader:["varying vec3 normalView;\nvarying vec4 clipPos;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( ALPHATEST )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvarying vec3 vViewPosition;\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"normalView = normalize( normalMatrix * objectNormal );\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( ALPHATEST )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvViewPosition = -mvPosition.xyz;\n#endif\nclipPos = gl_Position;\n}"].join("\n")},depth:{uniforms:{slopeScale:{type:"f",value:2},slopeBias:{type:"f",
value:0},slopeMax:{type:"f",value:0.001},alphaMap:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}},fragmentShader:"#ifdef ALPHATEST\nuniform sampler2D alphaMap;\nvarying vec2 vUv;\n#endif\n#ifdef SLOPE_DEPTH_BIAS\n#extension GL_OES_standard_derivatives : enable\n\nuniform float slopeScale;\nuniform float slopeBias;\nuniform float slopeMax;\n#endif\nvarying vec4 clipPos;\nvoid main() {\n#ifdef ALPHATEST\nfloat alphaValue = texture2D( alphaMap, vUv ).a;\nif ( alphaValue < ALPHATEST ) discard;\n#endif\nfloat depth = clipPos.z / clipPos.w;\n#ifdef SLOPE_DEPTH_BIAS\nfloat dx = dFdx( depth );\nfloat dy = dFdy( depth );\nfloat m = max( abs(dx), abs(dy) );\nm = min( m, slopeMax );\ngl_FragColor.x = depth + m * slopeScale + slopeBias;\n#else\ngl_FragColor.x = depth;\n#endif\n}",
vertexShader:["#ifdef ALPHATEST\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif\nvarying vec4 clipPos;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"clipPos = gl_Position;\n#ifdef ALPHATEST\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif\n}"].join("\n")},pointLight:{uniforms:{samplerNormalDepth:{type:"t",
value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightRadius:{type:"f",value:1},matViewInverse:{type:"m4",value:new THREE.Matrix4},matLightView:{type:"m4v",value:[]},matLightProj:{type:"m4v",value:[]},samplerShadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2",
value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:0.5},shadowBias:{type:"f",value:0}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightRadius;\nuniform float lightIntensity;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColor;\nuniform vec3 lightPositionVS;\nuniform mat4 matProjInverse;\n#ifdef USE_SHADOWMAP\nuniform mat4 matViewInverse;\nuniform mat4 matLightView[ 6 ];\nuniform mat4 matLightProj[ 6 ];\nuniform sampler2D samplerShadowMap[ 6 ];\nuniform float shadowBias;\nuniform float shadowDarkness;\nuniform vec2 shadowMapSize;\n#endif",
THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCF,THREE.DeferredShaderChunk.shadowMapPCFSoft,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,"vec3 lightVector = lightPositionVS - vertexPositionVS.xyz;\nfloat distance = length( lightVector );\nif ( distance > lightRadius ) discard;",THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"lightVector = normalize( lightVector );",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,
"float cutoff = 0.3;\nfloat denom = distance / lightRadius + 1.0;\nfloat attenuation = 1.0 / ( denom * denom );\nattenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );\nattenuation = max( attenuation, 0.0 );\nattenuation *= attenuation;\nfloat occlusion = 1.0;\n#ifdef USE_SHADOWMAP\nvec4 posWS = matViewInverse * vertexPositionVS;\nfor ( int i = 0; i < 6; i ++ ) {\nfloat sectorOcclusion = 1.0;\nvec4 posLightCS = matLightProj[ i ] * matLightView[ i ] * posWS;\nvec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\nif ( inFrustum ) {\nfloat vertexDepth = posLightCS.z / posLightCS.w;\n#if !defined( SLOPE_DEPTH_BIAS )\nvertexDepth -= shadowBias;\n#endif\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadowValue = sampleShadowPCF( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadowValue = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );\n#else\nfloat shadowDepth = texture2D( samplerShadowMap[ i ], shadowCoord ).x;\nfloat shadowValue = float( vertexDepth > shadowDepth );\n#endif\nsectorOcclusion = 1.0 - shadowDarkness * shadowValue;\nocclusion *= sectorOcclusion;\n}\n}\n#endif\nattenuation *= occlusion;",
THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:"void main() { \nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"},spotLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,
1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightDistance:{type:"f",value:1},lightAngle:{type:"f",value:1},matViewInverse:{type:"m4",value:new THREE.Matrix4},matLightView:{type:"m4",value:new THREE.Matrix4},matLightProj:{type:"m4",value:new THREE.Matrix4},samplerShadowMap:{type:"t",value:null},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:0.5},shadowBias:{type:"f",value:0}},fragmentShader:["uniform vec3 lightPositionVS;\nuniform vec3 lightDirectionVS;\nuniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform float lightAngle;\nuniform float lightIntensity;\nuniform vec3 lightColor;\nuniform mat4 matProjInverse;\n#ifdef USE_SHADOWMAP\nuniform mat4 matViewInverse;\nuniform mat4 matLightView;\nuniform mat4 matLightProj;\nuniform sampler2D samplerShadowMap;\nuniform float shadowBias;\nuniform float shadowDarkness;\nuniform vec2 shadowMapSize;\n#endif",
THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCF,THREE.DeferredShaderChunk.shadowMapPCFSoft,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = normalize( lightPositionVS.xyz - vertexPositionVS.xyz );\nfloat rho = dot( lightDirectionVS, lightVector );\nfloat rhoMax = cos( lightAngle * 0.5 );\nif ( rho <= rhoMax ) discard;\nfloat theta = rhoMax + 0.0001;\nfloat phi = rhoMax + 0.05;\nfloat falloff = 4.0;\nfloat spot = 0.0;\nif ( rho >= phi ) {\nspot = 1.0;\n} else if ( rho <= theta ) {\nspot = 0.0;\n} else { \nspot = pow( ( rho - theta ) / ( phi - theta ), falloff );\n}",
THREE.DeferredShaderChunk.computeDiffuse,"diffuse *= spot;",THREE.DeferredShaderChunk.computeSpecular,"float occlusion = 1.0;\n#ifdef USE_SHADOWMAP\nvec4 posWS = matViewInverse * vertexPositionVS;\nvec4 posLightCS = matLightProj * matLightView * posWS;\nvec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;\nfloat vertexDepth = posLightCS.z / posLightCS.w;\n#if !defined( SLOPE_DEPTH_BIAS )\nvertexDepth -= shadowBias;\n#endif\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadowValue = sampleShadowPCF( samplerShadowMap, shadowMapSize, shadowCoord, vertexDepth );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadowValue = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord, vertexDepth );\n#else\nfloat shadowDepth = texture2D( samplerShadowMap, shadowCoord ).x;\nfloat shadowValue = float( vertexDepth > shadowDepth );\n#endif\nocclusion = 1.0 - shadowDarkness * shadowValue;\n#endif\nfloat attenuation = occlusion;",
THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},directionalLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},matViewInverse:{type:"m4",
value:new THREE.Matrix4},matLightView:{type:"m4v",value:[]},matLightProj:{type:"m4v",value:[]},samplerShadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:0.5},shadowBias:{type:"f",value:0}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightIntensity;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColor;\nuniform vec3 lightDirectionVS;\nuniform mat4 matProjInverse;\n#ifdef USE_SHADOWMAP\nuniform mat4 matViewInverse;\nuniform mat4 matLightView[ CASCADE_COUNT ];\nuniform mat4 matLightProj[ CASCADE_COUNT ];\nuniform sampler2D samplerShadowMap[ CASCADE_COUNT ];\nuniform float shadowBias;\nuniform float shadowDarkness;\nuniform vec2 shadowMapSize;\n#endif",
THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCF,THREE.DeferredShaderChunk.shadowMapPCFSoft,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVS;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,"float occlusion = 1.0;\n#ifdef USE_SHADOWMAP\nint inFrustumCount = 0;\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\nvec3 debugColor = vec3( 1.0 );\n#endif\nvec4 posWS = matViewInverse * vertexPositionVS;\nfor ( int i = 0; i < CASCADE_COUNT; i ++ ) {\nfloat sectorOcclusion = 1.0;\nvec4 posLightCS = matLightProj[ i ] * matLightView[ i ] * posWS;\nvec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\ninFrustumCount += int( inFrustum );\nif ( inFrustum && inFrustumCount == 1 ) {\nfloat vertexDepth = posLightCS.z / posLightCS.w;\n#if !defined( SLOPE_DEPTH_BIAS )\nvertexDepth -= shadowBias;\n#endif\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadowValue = sampleShadowPCF( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadowValue = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );\n#else\nfloat shadowDepth = texture2D( samplerShadowMap[ i ], shadowCoord ).x;\nfloat shadowValue = float( vertexDepth > shadowDepth );\n#endif\nsectorOcclusion = 1.0 - shadowDarkness * shadowValue;\nocclusion *= sectorOcclusion;\n}\n#ifdef SHADOWMAP_DEBUG\nif ( inFrustum && inFrustumCount == 1 )  debugColor *= frustumColors[ i ];\n#endif\n}\n#endif\nfloat attenuation = occlusion;",
THREE.DeferredShaderChunk.combine,"#ifdef SHADOWMAP_DEBUG\ngl_FragColor.xyz *= debugColor;\n#endif\n}"].join("\n"),vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},hemisphereLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColorSky:{type:"c",
value:new THREE.Color(0)},lightColorGround:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightIntensity;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColorSky;\nuniform vec3 lightColorGround;\nuniform vec3 lightDirectionVS;\nuniform mat4 matProjInverse;",THREE.DeferredShaderChunk.unpackFloat,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,
THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVS;\nfloat dotProduct = dot( normal, lightVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( lightColorGround, lightColorSky, hemiDiffuseWeight );\nvec3 diffuse = hemiColor;\nvec3 R = reflect( normalize( vertexPositionVS.xyz ), normal );\nR = normalize( R );\nvec3 specular = specularColor * mix( lightColorGround, lightColorSky, dot( R, lightVector ) );\nconst float maxShininess = 200.0;\nfloat shininessCoef = clamp( shininess / maxShininess, 0.0, 1.0 );\ngl_FragColor = vec4( lightIntensity * albedo * mix( diffuse, specular, shininessCoef ), 1.0 );\n}"].join("\n"),
vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},dayLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightDirectionVSSun:{type:"v3",value:new THREE.Vector3(0,1,0)},lightDirectionVSHemi:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColorSun:{type:"c",value:new THREE.Color(0)},lightColorSky:{type:"c",value:new THREE.Color(0)},
lightColorGround:{type:"c",value:new THREE.Color(0)},lightIntensitySun:{type:"f",value:1},lightIntensityHemi:{type:"f",value:1},matViewInverse:{type:"m4",value:new THREE.Matrix4},matLightView:{type:"m4v",value:[]},matLightProj:{type:"m4v",value:[]},samplerShadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:0.5},shadowBias:{type:"f",value:0}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightIntensitySun;\nuniform float lightIntensityHemi;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColorSun;\nuniform vec3 lightColorSky;\nuniform vec3 lightColorGround;\nuniform vec3 lightDirectionVSSun;\nuniform vec3 lightDirectionVSHemi;\nuniform mat4 matProjInverse;\n#ifdef USE_SHADOWMAP\nuniform mat4 matViewInverse;\nuniform mat4 matLightView[ CASCADE_COUNT ];\nuniform mat4 matLightProj[ CASCADE_COUNT ];\nuniform sampler2D samplerShadowMap[ CASCADE_COUNT ];\nuniform float shadowBias;\nuniform float shadowDarkness;\nuniform vec2 shadowMapSize;\n#endif",
THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCF,THREE.DeferredShaderChunk.shadowMapPCFSoft,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVSSun;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,"float occlusion = 1.0;\n#ifdef USE_SHADOWMAP\nint inFrustumCount = 0;\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\nvec3 debugColor = vec3( 1.0 );\n#endif\nvec4 posWS = matViewInverse * vertexPositionVS;\nfor ( int i = 0; i < CASCADE_COUNT; i ++ ) {\nfloat sectorOcclusion = 1.0;\nvec4 posLightCS = matLightProj[ i ] * matLightView[ i ] * posWS;\nvec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\ninFrustumCount += int( inFrustum );\nif ( inFrustum && inFrustumCount == 1 ) {\nfloat vertexDepth = posLightCS.z / posLightCS.w;\n#if !defined( SLOPE_DEPTH_BIAS )\nvertexDepth -= shadowBias;\n#endif\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadowValue = sampleShadowPCF( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadowValue = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );\n#else\nfloat shadowDepth = texture2D( samplerShadowMap[ i ], shadowCoord ).x;\nfloat shadowValue = float( vertexDepth > shadowDepth );\n#endif\nsectorOcclusion = 1.0 - shadowDarkness * shadowValue;\nocclusion *= sectorOcclusion;\n}\n#ifdef SHADOWMAP_DEBUG\nif ( inFrustum && inFrustumCount == 1 )  debugColor *= frustumColors[ i ];\n#endif\n}\n#endif\nvec3 directionalTerm = occlusion * lightIntensitySun * lightColorSun * ( albedo * diffuse + specular );\n#ifdef SHADOWMAP_DEBUG\ngl_FragColor.xyz *= debugColor;\n#endif\nvec3 lightVectorHemi = lightDirectionVSHemi;\nfloat dotProductHemi = dot( normal, lightVectorHemi );\nfloat hemiDiffuseWeight = 0.5 * dotProductHemi + 0.5;\nvec3 hemiColor = mix( lightColorGround, lightColorSky, hemiDiffuseWeight );\nvec3 diffuseHemi = hemiColor;\nvec3 R = reflect( normalize( vertexPositionVS.xyz ), normal );\nR = normalize( R );\nvec3 specularHemi = specularColor * mix( lightColorGround, lightColorSky, dot( R, lightVectorHemi ) );\nconst float maxShininess = 200.0;\nfloat shininessCoef = clamp( shininess / maxShininess, 0.0, 1.0 );\nvec3 hemiTerm = lightIntensityHemi * albedo * mix( diffuseHemi, specularHemi, shininessCoef );\nvec3 emissiveTerm = float_to_vec3( abs( colorMap.w ) );\ngl_FragColor = vec4( directionalTerm + hemiTerm + emissiveTerm, 1.0 );\n}"].join("\n"),
vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},areaLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightNormalVS:{type:"v3",value:new THREE.Vector3(0,-1,0)},lightRightVS:{type:"v3",value:new THREE.Vector3(1,0,0)},lightUpVS:{type:"v3",value:new THREE.Vector3(1,
0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightWidth:{type:"f",value:1},lightHeight:{type:"f",value:1},constantAttenuation:{type:"f",value:1.5},linearAttenuation:{type:"f",value:0.5},quadraticAttenuation:{type:"f",value:0.1},samplerTexture:{type:"t",value:null}},fragmentShader:["uniform vec3 lightPositionVS;\nuniform vec3 lightNormalVS;\nuniform vec3 lightRightVS;\nuniform vec3 lightUpVS;\nuniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\n#ifdef AREA_TEXTURE\nuniform sampler2D samplerTexture;\n#endif\nuniform float lightWidth;\nuniform float lightHeight;\nuniform float constantAttenuation;\nuniform float linearAttenuation;\nuniform float quadraticAttenuation;\nuniform float lightIntensity;\nuniform vec3 lightColor;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform mat4 matProjInverse;",
THREE.DeferredShaderChunk.unpackFloat,"vec3 projectOnPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {\nreturn point - dot( point - planeCenter, planeNorm ) * planeNorm;\n}\nbool sideOfPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {\nreturn ( dot( point - planeCenter, planeNorm ) >= 0.0 );\n}\nvec3 linePlaneIntersect( vec3 lp, vec3 lv, vec3 pc, vec3 pn ) {\nreturn lp + lv * ( dot( pn, pc - lp ) / dot( pn, lv ) );\n}\nfloat calculateAttenuation( float dist ) {\nreturn ( 1.0 / ( constantAttenuation + linearAttenuation * dist + quadraticAttenuation * dist * dist ) );\n}\nvoid main() {",
THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"float w = lightWidth;\nfloat h = lightHeight;\nvec3 proj = projectOnPlane( vertexPositionVS.xyz, lightPositionVS, lightNormalVS );\nvec3 dir = proj - lightPositionVS;\nvec2 diagonal = vec2( dot( dir, lightRightVS ), dot( dir, lightUpVS ) );\nvec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );\nvec3 nearestPointInside = lightPositionVS + ( lightRightVS * nearest2D.x + lightUpVS * nearest2D.y );\nvec3 lightDir = normalize( nearestPointInside - vertexPositionVS.xyz );\nfloat NdotL = max( dot( lightNormalVS, -lightDir ), 0.0 );\nfloat NdotL2 = max( dot( normal, lightDir ), 0.0 );\nvec3 diffuse = vec3( sqrt( NdotL * NdotL2 ) );\n#ifdef AREA_TEXTURE\nfloat d = distance( vertexPositionVS.xyz, nearestPointInside );\nvec2 co = ( diagonal.xy + vec2( w, h ) ) / ( 2.0 * vec2( w, h ) );\nco.y = 1.0 - co.y;\nvec3 ve = vertexPositionVS.xyz - lightPositionVS;\nvec4 diff = vec4( 0.0 );\nif ( dot( ve, lightNormalVS ) < 0.0 ) {\ndiff = vec4( 0.0 );\n} else {\nfloat lod = max( pow( d, 0.1 ), 0.0 ) * 5.0;\nvec4 t00 = texture2D( samplerTexture, co, lod );\nvec4 t01 = texture2D( samplerTexture, co, lod + 1.0 );\ndiff = mix( t00, t01, 0.5 );\n}\ndiffuse *= diff.xyz;\n#endif\nvec3 specular = vec3( 0.0 );\nvec3 R = reflect( normalize( -vertexPositionVS.xyz ), normal );\nvec3 E = linePlaneIntersect( vertexPositionVS.xyz, R, lightPositionVS, lightNormalVS );\nfloat specAngle = dot( R, lightNormalVS );\nif ( dot( vertexPositionVS.xyz - lightPositionVS, lightNormalVS )>=0.0 && specAngle > 0.0 ) {\nvec3 dirSpec = E - lightPositionVS;\nvec2 dirSpec2D = vec2( dot( dirSpec, lightRightVS ), dot( dirSpec, lightUpVS ) );\nvec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -w, w ), clamp( dirSpec2D.y, -h, h ) );\nfloat specFactor = 1.0 - clamp( length( nearestSpec2D - dirSpec2D ) * 0.05 * shininess, 0.0, 1.0 );\nspecular = specularColor * specFactor * specAngle * diffuse;\n#ifdef AREA_TEXTURE\nfloat hard = 16.0;\nfloat gloss = 16.0;\nvec3 specPlane = lightPositionVS + ( lightRightVS * dirSpec2D.x + lightUpVS * dirSpec2D.y );\nfloat dist = max( distance( vertexPositionVS.xyz, specPlane ), 0.0 );\nfloat d = ( ( 1.0 / hard ) / 2.0 ) * ( dist / gloss );\nw = max( w, 0.0 );\nh = max( h, 0.0 );\nvec2 co = dirSpec2D / ( d + 1.0 );\nco /= 2.0 * vec2( w, h );\nco = co + vec2( 0.5 );\nco.y = 1.0 - co.y;\nfloat lod = ( 2.0 / hard * max( dist, 0.0 ) );\nvec4 t00 = texture2D( samplerTexture, co, lod );\nvec4 t01 = texture2D( samplerTexture, co, lod + 1.0 );\nvec4 spec = mix( t00, t01, 0.5 );\nspecular *= spec.xyz;\n#endif\n}\nfloat dist = distance( vertexPositionVS.xyz, nearestPointInside );\nfloat attenuation = calculateAttenuation( dist );",
THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:"void main() {\ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},emissiveLight:{uniforms:{samplerColor:{type:"t",value:null},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600}},fragmentShader:["uniform sampler2D samplerColor;\nuniform float viewHeight;\nuniform float viewWidth;",THREE.DeferredShaderChunk.unpackFloat,"void main() {\nvec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );\nvec4 colorMap = texture2D( samplerColor, texCoord );\nvec3 emissiveColor = float_to_vec3( abs( colorMap.w ) );\ngl_FragColor = vec4( emissiveColor, 1.0 );\n}"].join("\n"),
vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},composite:{uniforms:{samplerLight:{type:"t",value:null},brightness:{type:"f",value:1}},fragmentShader:"varying vec2 texCoord;\nuniform sampler2D samplerLight;\nuniform float brightness;\n#ifdef TONEMAP_UNCHARTED\nconst float A = 0.15;\nconst float B = 0.50;\nconst float C = 0.10;\nconst float D = 0.20;\nconst float E = 0.02;\nconst float F = 0.30;\nconst float W = 11.2;\nvec3 Uncharted2Tonemap( vec3 x ) {\nreturn ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;\n}\n#endif\nvoid main() {\nvec3 inColor = texture2D( samplerLight, texCoord ).xyz;\ninColor *= brightness;\nvec3 outColor;\n#if defined( TONEMAP_SIMPLE )\noutColor = sqrt( inColor );\n#elif defined( TONEMAP_LINEAR )\noutColor = pow( inColor, vec3( 1.0 / 2.2 ) );\n#elif defined( TONEMAP_REINHARD )\ninColor = inColor / ( 1.0 + inColor );\noutColor = pow( inColor, vec3( 1.0 / 2.2 ) );\n#elif defined( TONEMAP_FILMIC )\nvec3 x = max( vec3( 0.0 ), inColor - 0.004 );\noutColor = ( x * ( 6.2 * x + 0.5 ) ) / ( x * ( 6.2 * x + 1.7 ) + 0.06 );\n#elif defined( TONEMAP_UNCHARTED )\nfloat ExposureBias = 2.0;\nvec3 curr = Uncharted2Tonemap( ExposureBias * inColor );\nvec3 whiteScale = vec3( 1.0 ) / Uncharted2Tonemap( vec3( W ) );\nvec3 color = curr * whiteScale;\noutColor = pow( color, vec3( 1.0 / 2.2 ) );\n#else\noutColor = inColor;\n#endif\ngl_FragColor = vec4( outColor, 1.0 );\n}",
vertexShader:"varying vec2 texCoord;\nvoid main() {\nvec4 pos = vec4( sign( position.xy ), 0.0, 1.0 );\ntexCoord = pos.xy * vec2( 0.5 ) + 0.5;\ngl_Position = pos;\n}"}};var SPARKS={Emitter:function(a){this._counter=a?a:new SPARKS.SteadyCounter(10);this._particles=[];this._initializers=[];this._actions=[];this._activities=[];this._handlers=[];this.callbacks={}}};
SPARKS.Emitter.prototype={_TIMESTEP:15,_timer:null,_lastTime:null,_timerStep:10,_velocityVerlet:!0,start:function(){this._lastTime=Date.now();this._timer=setTimeout(this.step,this._timerStep,this);this._isRunning=!0},stop:function(){this._isRunning=!1;clearTimeout(this._timer)},isRunning:function(){return this._isRunning&1},step:function(a){var b=Date.now(),c=b-a._lastTime;if(this._velocityVerlet)a.update(c/1E3),a._lastTime=b;else{var d=20*a._TIMESTEP;for(c>=d&&(c=d);c>=a._TIMESTEP;)a.update(a._TIMESTEP/
1E3),c-=a._TIMESTEP;a._lastTime=b-c}a._isRunning&&setTimeout(a.step,a._timerStep,a)},update:function(a){var b,c,d=this._counter.updateEmitter(this,a);for(b=0;b<d;b++)this.createParticle();d=this._activities.length;for(b=0;b<d;b++)this._activities[b].update(this,a);var d=this._actions.length,e,f,g=this._particles.length;for(c=0;c<d;c++){f=this._actions[c];for(b=0;b<g;++b)e=this._particles[b],f.update(this,e,a)}for(b=g;b--;)e=this._particles[b],e.isDead?(this._particles.splice(b,1),this.dispatchEvent("dead",
e),SPARKS.VectorPool.release(e.position),SPARKS.VectorPool.release(e.velocity)):this.dispatchEvent("updated",e);this.dispatchEvent("loopUpdated")},createParticle:function(){var a=new SPARKS.Particle,b=this._initializers.length,c;for(c=0;c<b;c++)this._initializers[c].initialize(this,a);this._particles.push(a);this.dispatchEvent("created",a);return a},addInitializer:function(a){this._initializers.push(a)},addAction:function(a){this._actions.push(a)},removeInitializer:function(a){a=this._initializers.indexOf(a);
-1<a&&this._initializers.splice(a,1)},removeAction:function(a){a=this._actions.indexOf(a);-1<a&&this._actions.splice(a,1)},addCallback:function(a,b){this.callbacks[a]=b},dispatchEvent:function(a,b){var c=this.callbacks[a];c&&c(b)}};SPARKS.EVENT_PARTICLE_CREATED="created";SPARKS.EVENT_PARTICLE_UPDATED="updated";SPARKS.EVENT_PARTICLE_DEAD="dead";SPARKS.EVENT_LOOP_UPDATED="loopUpdated";SPARKS.SteadyCounter=function(a){this.rate=a;this.leftover=0};
SPARKS.SteadyCounter.prototype.updateEmitter=function(a,b){var c=b*this.rate+this.leftover,d=Math.floor(c);this.leftover=c-d;return d};SPARKS.ShotCounter=function(a){this.particles=a;this.used=!1};SPARKS.ShotCounter.prototype.updateEmitter=function(){if(this.used)return 0;this.used=!0;return this.particles};
SPARKS.Particle=function(){this.age=this.lifetime=0;this.energy=1;this.isDead=!1;this.target=null;this.position=SPARKS.VectorPool.get().set(0,0,0);this.velocity=SPARKS.VectorPool.get().set(0,0,0);this._oldvelocity=SPARKS.VectorPool.get().set(0,0,0)};SPARKS.Action=function(){this._priority=0};SPARKS.Age=function(a){this._easing=null==a?TWEEN.Easing.Linear.None:a};
SPARKS.Age.prototype.update=function(a,b,c){b.age+=c;b.age>=b.lifetime?(b.energy=0,b.isDead=!0):(a=this._easing(b.age/b.lifetime),b.energy=-1*a+1)};SPARKS.Move=function(){};SPARKS.Move.prototype.update=function(a,b,c){a=b.position;var d=b.velocity;b=b._oldvelocity;this._velocityVerlet?(a.x+=0.5*(d.x+b.x)*c,a.y+=0.5*(d.y+b.y)*c,a.z+=0.5*(d.z+b.z)*c):(a.x+=d.x*c,a.y+=d.y*c,a.z+=d.z*c)};SPARKS.DeathZone=function(a){this.zone=a};
SPARKS.DeathZone.prototype.update=function(a,b){this.zone.contains(b.position)&&(b.isDead=!0)};SPARKS.ActionZone=function(a,b){this.action=a;this.zone=b};SPARKS.ActionZone.prototype.update=function(a,b,c){this.zone.contains(b.position)&&this.action.update(a,b,c)};SPARKS.Accelerate=function(a,b,c){this.acceleration=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};
SPARKS.Accelerate.prototype.update=function(a,b,c){a=this.acceleration;var d=b.velocity;b._oldvelocity.set(d.x,d.y,d.z);d.x+=a.x*c;d.y+=a.y*c;d.z+=a.z*c};SPARKS.AccelerateFactor=function(a){this.factor=a};SPARKS.AccelerateFactor.prototype.update=function(a,b,c){a=this.factor;b=b.velocity;var d=b.length();0<d&&(c=a*c/d+1,b.multiplyScalar(c))};SPARKS.AccelerateVelocity=function(a){this.factor=a};
SPARKS.AccelerateVelocity.prototype.update=function(a,b){var c=this.factor,d=b.velocity;d.z+=-d.x*c;d.y+=d.z*c;d.x+=d.y*c};SPARKS.RandomDrift=function(a,b,c){this.drift=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};SPARKS.RandomDrift.prototype.update=function(a,b,c){a=this.drift;b=b.velocity;b.x+=(Math.random()-0.5)*a.x*c;b.y+=(Math.random()-0.5)*a.y*c;b.z+=(Math.random()-0.5)*a.z*c};SPARKS.Zone=function(){};SPARKS.PointZone=function(a){this.pos=a};
SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.PointZone=function(a){this.pos=a};SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.LineZone=function(a,b){this.start=a;this.end=b;this._length=b.clone().subSelf(a)};SPARKS.LineZone.prototype.getLocation=function(){var a=this._length.clone();a.multiplyScalar(Math.random());return a.addSelf(this.start)};SPARKS.ParallelogramZone=function(a,b,c){this.corner=a;this.side1=b;this.side2=c};
SPARKS.ParallelogramZone.prototype.getLocation=function(){var a=this.side1.clone().multiplyScalar(Math.random()),b=this.side2.clone().multiplyScalar(Math.random());a.addSelf(b);return a.addSelf(this.corner)};SPARKS.CubeZone=function(a,b,c,d){this.position=a;this.x=b;this.y=c;this.z=d};SPARKS.CubeZone.prototype.getLocation=function(){var a=this.position.clone();a.x+=Math.random()*this.x;a.y+=Math.random()*this.y;a.z+=Math.random()*this.z;return a};
SPARKS.CubeZone.prototype.contains=function(a){var b=this.position.x,c=this.position.y,d=this.position.z,e=this.x,f=this.y,g=this.z;0>e&&(b+=e,e=Math.abs(e));0>f&&(c+=f,f=Math.abs(f));0>g&&(d+=g,g=Math.abs(g));b=a.x-b;c=a.y-c;a=a.z-d;return 0<b&&b<e&&0<c&&c<f&&0<a&&a<g?!0:!1};SPARKS.SphereCapZone=function(a,b,c,d,e,f){this.x=a;this.y=b;this.z=c;this.minr=d;this.maxr=e;this.angle=f};
SPARKS.SphereCapZone.prototype.getLocation=function(){var a=2*Math.PI*SPARKS.Utils.random(),b=SPARKS.Utils.random(),a=SPARKS.VectorPool.get().set(b*Math.cos(a),-1/Math.tan(this.angle*SPARKS.Utils.DEGREE_TO_RADIAN),b*Math.sin(a)),b=this.minr-(this.minr-this.maxr)*Math.random();a.multiplyScalar(b);a.__markedForReleased=!0;return a};SPARKS.Lifetime=function(a,b){this._min=a;this._max=b?b:a};SPARKS.Lifetime.prototype.initialize=function(a,b){b.lifetime=this._min+SPARKS.Utils.random()*(this._max-this._min)};
SPARKS.Position=function(a){this.zone=a};SPARKS.Position.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.position.set(c.x,c.y,c.z)};SPARKS.Velocity=function(a){this.zone=a};SPARKS.Velocity.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.velocity.set(c.x,c.y,c.z);c.__markedForReleased&&(SPARKS.VectorPool.release(c),c.__markedForReleased=!1)};SPARKS.Target=function(a,b){this.target=a;this.callback=b};
SPARKS.Target.prototype.initialize=function(a,b){b.target=this.callback?this.callback():this.target};SPARKS.VectorPool={__pools:[],get:function(){return 0<this.__pools.length?this.__pools.pop():this._addToPool()},release:function(a){this.__pools.push(a)},_addToPool:function(){for(var a=0;100>a;a++)this.__pools.push(new THREE.Vector3);return new THREE.Vector3}};
SPARKS.Utils={random:function(){return Math.random()},DEGREE_TO_RADIAN:Math.PI/180,TWOPI:2*Math.PI,getPerpendiculars:function(a){var b=this.getPerpendicular(a);a=a.cross(b);a.normalize();return[b,a]},getPerpendicular:function(a){return 0==a.x?new THREE.Vector3D(1,0,0):(new THREE.Vector3(a.y,-a.x,0)).normalize()}};THREE.UVsUtils={};THREE.UVsUtils.CylinderUVGenerator=function(){this.uRepeat=1;this.lengthCache=this.targetGeometry=null};
THREE.UVsUtils.CylinderUVGenerator.prototype={generateTopUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateTopUV,generateBottomUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateBottomUV,generateSideWallUV:function(a,b,c,d,e,f,g,h,j,k,l,m){this.targetGeometry!==a&&this.prepare(a,c);b=this.lengthCache;a=j/k;j=(j+1)/k;l=b[l];m=b[m];l<m&&(l+=1);l*=this.uRepeat;m*=this.uRepeat;return[new THREE.Vector2(l,a),new THREE.Vector2(m,a),new THREE.Vector2(m,j),new THREE.Vector2(l,j)]},prepare:function(a,b){for(var c,
d,e=[],f=0,g=b.length,h=0;h<g;h++){c=b[h];d=b[(h+1)%g];var j=c.x-d.x;c=c.y-d.y;j=Math.sqrt(j*j+c*c);e.push(f);f+=j}this.normalizeArray(e,f);this.targetGeometry=a;this.lengthCache=e},normalizeArray:function(a,b){for(var c=a.length,d=0;d<c;d++)a[d]/=b;return a}};
THREE.UVsDebug=function(a){var b=a.faces,c=a.faceVertexUvs[0];console.log("debugging geometry",a);a=document.createElement("canvas");a.width=1024;a.height=1024;var d=a.getContext("2d");d.lineWidth=1;d.strokeStyle="rgba(0,0,0,0.8)";d.fillStyle="rgba(255,255,255, 1.0)";d.fillRect(0,0,1024,1024);var e,f,g,h,j,k,l=new THREE.Vector2,m=new THREE.Vector2;g=0;for(h=c.length;g<h;g++){e=c[g];d.beginPath();l.set(0,0);j=0;for(k=e.length;j<k;j++)f=e[j],l.x+=f.x,l.y+=f.y,0==j?d.moveTo(1024*f.x,1024*f.y):d.lineTo(1024*
f.x,1024*f.y);d.closePath();d.stroke();l.divideScalar(k);d.font="12pt Arial bold";d.fillStyle="rgba(0,0,0,0.8)";d.fillText(g,1024*l.x,1024*l.y);d.font="8pt Arial bold";d.fillStyle="rgba(30,30,0,0.8)";j=0;for(k=e.length;j<k;j++)f=e[j],m.set(f.x,f.y).subSelf(l).divideScalar(4),m.x=f.x-m.x,m.y=f.y-m.y,d.fillText("abcd"[j]+":"+b[g]["abcd"[j]],1024*m.x,1024*m.y)}return a};var ImprovedNoise=function(){function a(a){return a*a*a*(a*(6*a-15)+10)}function b(a,b,c){return b+a*(c-b)}function c(a,b,c,d){a&=15;var e=8>a?b:c;b=4>a?c:12==a||14==a?b:d;return(0==(a&1)?e:-e)+(0==(a&2)?b:-b)}for(var d=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,
211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,
181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],e=0;256>e;e++)d[256+e]=d[e];return{noise:function(e,g,h){var j=~~e,k=~~g,l=~~h,m=j&255,p=k&255,s=l&255;e-=j;g-=k;h-=l;var j=e-1,k=g-1,l=h-1,r=a(e),q=a(g),v=a(h),u=d[m]+p,w=d[u]+s,u=d[u+1]+s,p=d[m+1]+p,m=d[p]+s,s=d[p+1]+s;return b(v,b(q,b(r,c(d[w],e,g,h),c(d[m],j,g,h)),b(r,c(d[u],e,k,h),c(d[s],j,k,h))),b(q,b(r,c(d[w+1],e,g,l),c(d[m+1],j,g,h-1)),b(r,c(d[u+1],e,k,l),c(d[s+
1],j,k,l))))}}};var SimplexNoise=function(a){void 0==a&&(a=Math);this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]];this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],
[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]];this.p=[];for(var b=0;256>b;b++)this.p[b]=Math.floor(256*a.random());this.perm=[];for(b=0;512>b;b++)this.perm[b]=this.p[b&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,
3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]};SimplexNoise.prototype.dot=function(a,b,c){return a[0]*b+a[1]*c};SimplexNoise.prototype.dot3=function(a,b,c,d){return a[0]*b+a[1]*c+a[2]*d};
SimplexNoise.prototype.dot4=function(a,b,c,d,e){return a[0]*b+a[1]*c+a[2]*d+a[3]*e};
SimplexNoise.prototype.noise=function(a,b){var c,d,e;e=0.5*(Math.sqrt(3)-1);e*=a+b;var f=Math.floor(a+e),g=Math.floor(b+e),h=(3-Math.sqrt(3))/6;e=(f+g)*h;c=a-(f-e);var j=b-(g-e),k,l;c>j?(k=1,l=0):(k=0,l=1);d=c-k+h;var m=j-l+h;e=c-1+2*h;var h=j-1+2*h,p=f&255,g=g&255,f=this.perm[p+this.perm[g]]%12;k=this.perm[p+k+this.perm[g+l]]%12;l=this.perm[p+1+this.perm[g+1]]%12;g=0.5-c*c-j*j;0>g?c=0:(g*=g,c=g*g*this.dot(this.grad3[f],c,j));j=0.5-d*d-m*m;0>j?d=0:(j*=j,d=j*j*this.dot(this.grad3[k],d,m));m=0.5-e*
e-h*h;0>m?e=0:(m*=m,e=m*m*this.dot(this.grad3[l],e,h));return 70*(c+d+e)};
SimplexNoise.prototype.noise3d=function(a,b,c){var d,e,f,g=(a+b+c)*(1/3),h=Math.floor(a+g),j=Math.floor(b+g),k=Math.floor(c+g),g=1/6;f=(h+j+k)*g;d=a-(h-f);e=b-(j-f);var l=c-(k-f),m,p,s,r,q,v;d>=e?e>=l?(m=1,s=p=0,q=r=1,v=0):(d>=l?(m=1,s=p=0):(p=m=0,s=1),r=1,q=0,v=1):e<l?(p=m=0,s=1,r=0,v=q=1):d<l?(m=0,p=1,r=s=0,v=q=1):(m=0,p=1,s=0,q=r=1,v=0);var u=d-m+g,w=e-p+g,x=l-s+g;f=d-r+2*g;a=e-q+2*g;var t=l-v+2*g;c=d-1+3*g;b=e-1+3*g;var g=l-1+3*g,h=h&255,D=j&255,z=k&255,j=this.perm[h+this.perm[D+this.perm[z]]]%
12,k=this.perm[h+m+this.perm[D+p+this.perm[z+s]]]%12;r=this.perm[h+r+this.perm[D+q+this.perm[z+v]]]%12;h=this.perm[h+1+this.perm[D+1+this.perm[z+1]]]%12;q=0.6-d*d-e*e-l*l;0>q?d=0:(q*=q,d=q*q*this.dot3(this.grad3[j],d,e,l));e=0.6-u*u-w*w-x*x;0>e?e=0:(e*=e,e=e*e*this.dot3(this.grad3[k],u,w,x));u=0.6-f*f-a*a-t*t;0>u?f=0:(u*=u,f=u*u*this.dot3(this.grad3[r],f,a,t));a=0.6-c*c-b*b-g*g;0>a?c=0:(a*=a,c=a*a*this.dot3(this.grad3[h],c,b,g));return 32*(d+e+f+c)};
SimplexNoise.prototype.noise4d=function(a,b,c,d){var e=this.grad4,f=this.simplex,g=this.perm,h=(Math.sqrt(5)-1)/4,j=(5-Math.sqrt(5))/20,k,l,h=(a+b+c+d)*h,m=Math.floor(a+h),p=Math.floor(b+h),s=Math.floor(c+h),r=Math.floor(d+h),h=(m+p+s+r)*j;a-=m-h;k=b-(p-h);l=c-(s-h);var q=d-(r-h);d=(a>k?32:0)+(a>l?16:0)+(k>l?8:0)+(a>q?4:0)+(k>q?2:0)+(l>q?1:0);var v,u,w,x,t,D,z,y,A,G,H,J;v=3<=f[d][0]?1:0;u=3<=f[d][1]?1:0;w=3<=f[d][2]?1:0;x=3<=f[d][3]?1:0;t=2<=f[d][0]?1:0;D=2<=f[d][1]?1:0;z=2<=f[d][2]?1:0;y=2<=f[d][3]?
1:0;A=1<=f[d][0]?1:0;G=1<=f[d][1]?1:0;H=1<=f[d][2]?1:0;J=1<=f[d][3]?1:0;var T=a-v+j,E=k-u+j,O=l-w+j,F=q-x+j,L=a-t+2*j,P=k-D+2*j,U=l-z+2*j,S=q-y+2*j;b=a-A+3*j;var h=k-G+3*j,da=l-H+3*j,R=q-J+3*j,f=a-1+4*j;d=k-1+4*j;c=l-1+4*j;var j=q-1+4*j,m=m&255,p=p&255,I=s&255,r=r&255,s=g[m+g[p+g[I+g[r]]]]%32;v=g[m+v+g[p+u+g[I+w+g[r+x]]]]%32;t=g[m+t+g[p+D+g[I+z+g[r+y]]]]%32;A=g[m+A+g[p+G+g[I+H+g[r+J]]]]%32;g=g[m+1+g[p+1+g[I+1+g[r+1]]]]%32;r=0.6-a*a-k*k-l*l-q*q;0>r?a=0:(r*=r,a=r*r*this.dot4(e[s],a,k,l,q));k=0.6-T*
T-E*E-O*O-F*F;0>k?k=0:(k*=k,k=k*k*this.dot4(e[v],T,E,O,F));l=0.6-L*L-P*P-U*U-S*S;0>l?l=0:(l*=l,l=l*l*this.dot4(e[t],L,P,U,S));L=0.6-b*b-h*h-da*da-R*R;0>L?b=0:(L*=L,b=L*L*this.dot4(e[A],b,h,da,R));h=0.6-f*f-d*d-c*c-j*j;0>h?e=0:(h*=h,e=h*h*this.dot4(e[g],f,d,c,j));return 27*(a+k+l+b+e)};var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";
a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){var b,c;a=a||{};b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};
